{
	"id": "217a483748973d71400c4a8bcc6109ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AssetNexusNft.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n\r\ncontract AssetNexusNft is ERC721URIStorage {\r\n    \r\n    uint256 public tokenCounter;\r\n    event NewNFTMinted(address sender, uint256 tokenId, string tokenURI);\r\n\r\n    constructor(string memory name, string memory symbol) ERC721(name, symbol) {}\r\n\r\n    function mintItem(string memory tokenURI) public {\r\n        _mint(msg.sender, tokenCounter);\r\n        _setTokenURI(tokenCounter, tokenURI);\r\n        emit NewNFTMinted(msg.sender, tokenCounter, tokenURI);\r\n        tokenCounter += 1;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AssetNexusNft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AssetNexusNft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AssetNexusNft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AssetNexusNft.sol": {
				"AssetNexusNft": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "NewNFTMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "mintItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AssetNexusNft.sol\":143:636  contract AssetNexusNft is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AssetNexusNft.sol\":310:387  constructor(string memory name, string memory symbol) ERC721(name, symbol) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/AssetNexusNft.sol\":371:375  name */\n  dup2\n    /* \"contracts/AssetNexusNft.sol\":377:383  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/AssetNexusNft.sol\":310:387  constructor(string memory name, string memory symbol) ERC721(name, symbol) {} */\n  pop\n  pop\n    /* \"contracts/AssetNexusNft.sol\":143:636  contract AssetNexusNft is ERC721URIStorage {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2801:2920   */\ntag_78:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2996:3113   */\ntag_80:\n    /* \"#utility.yul\":3137:3211   */\n  tag_82\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_84\n  tag_14\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3298:3415   */\ntag_83:\n    /* \"#utility.yul\":3439:3513   */\n  tag_85\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_25:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_26:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_27:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_89:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_91\n  tag_26\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4057:4141   */\ntag_90:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_28:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_29:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_30:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_31:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_96\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4772:4811   */\n  tag_97\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_32:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_33:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_34:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_101\n    /* \"#utility.yul\":5161:5195   */\n  tag_102\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5161:5195   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5143:5196   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_35:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_36:\n    /* \"#utility.yul\":5399:5438   */\n  tag_106\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5460:5551   */\n  tag_107\n    /* \"#utility.yul\":5509:5550   */\n  tag_108\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_37:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_38:\n    /* \"#utility.yul\":5720:5752   */\n  tag_111\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5761:5826   */\n  tag_112\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_39:\n    /* \"#utility.yul\":5898:6018   */\ntag_114:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_117\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_40:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_120\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6249:6278   */\n  tag_121\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_122:\n    /* \"#utility.yul\":6476:6556   */\n  tag_123\n    /* \"#utility.yul\":6532:6554   */\n  tag_124\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_29\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_119:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_41:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_42:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_127\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_43:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_129\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_131\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_133\n  tag_18\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7381:7437   */\ntag_132:\n    /* \"#utility.yul\":7461:7499   */\n  tag_134\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_27\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7546:7613   */\n  tag_135\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_40\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_138:\n    /* \"#utility.yul\":8487:8554   */\n  tag_139\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_136)\n    /* \"#utility.yul\":7708:8326   */\ntag_137:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_140\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_28\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_141:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_145\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_42\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_144:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_136:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/AssetNexusNft.sol\":143:636  contract AssetNexusNft is ERC721URIStorage {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AssetNexusNft.sol\":143:636  contract AssetNexusNft is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc7545849\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc7545849\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd082e381\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/AssetNexusNft.sol\":395:633  function mintItem(string memory tokenURI) public {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AssetNexusNft.sol\":199:226  uint256 public tokenCounter */\n    tag_16:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_91\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_91\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_44\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AssetNexusNft.sol\":395:633  function mintItem(string memory tokenURI) public {... */\n    tag_72:\n        /* \"contracts/AssetNexusNft.sol\":455:486  _mint(msg.sender, tokenCounter) */\n      tag_137\n        /* \"contracts/AssetNexusNft.sol\":461:471  msg.sender */\n      caller\n        /* \"contracts/AssetNexusNft.sol\":473:485  tokenCounter */\n      sload(0x07)\n        /* \"contracts/AssetNexusNft.sol\":455:460  _mint */\n      tag_138\n        /* \"contracts/AssetNexusNft.sol\":455:486  _mint(msg.sender, tokenCounter) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/AssetNexusNft.sol\":497:533  _setTokenURI(tokenCounter, tokenURI) */\n      tag_139\n        /* \"contracts/AssetNexusNft.sol\":510:522  tokenCounter */\n      sload(0x07)\n        /* \"contracts/AssetNexusNft.sol\":524:532  tokenURI */\n      dup3\n        /* \"contracts/AssetNexusNft.sol\":497:509  _setTokenURI */\n      tag_140\n        /* \"contracts/AssetNexusNft.sol\":497:533  _setTokenURI(tokenCounter, tokenURI) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/AssetNexusNft.sol\":549:597  NewNFTMinted(msg.sender, tokenCounter, tokenURI) */\n      0x899b99f6c26ce7a463fc72a3a36ae78b414dae9cfa6e88e8580ec708e70f30b0\n        /* \"contracts/AssetNexusNft.sol\":562:572  msg.sender */\n      caller\n        /* \"contracts/AssetNexusNft.sol\":574:586  tokenCounter */\n      sload(0x07)\n        /* \"contracts/AssetNexusNft.sol\":588:596  tokenURI */\n      dup4\n        /* \"contracts/AssetNexusNft.sol\":549:597  NewNFTMinted(msg.sender, tokenCounter, tokenURI) */\n      mload(0x40)\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AssetNexusNft.sol\":624:625  1 */\n      0x01\n        /* \"contracts/AssetNexusNft.sol\":608:620  tokenCounter */\n      0x07\n      0x00\n        /* \"contracts/AssetNexusNft.sol\":608:625  tokenCounter += 1 */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AssetNexusNft.sol\":395:633  function mintItem(string memory tokenURI) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_146:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_91\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_91\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_145)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_156\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_145)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_145:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AssetNexusNft.sol\":199:226  uint256 public tokenCounter */\n    tag_78:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_162\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_163\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_193\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      0x01\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_196\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_201\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_200)\n    tag_201:\n      0x60\n      swap2\n      pop\n    tag_200:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_217\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_220:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_222\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_223)\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap3\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_249\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_250\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_251\n      jumpi\n      tag_252\n      tag_253\n      jump\t// in\n    tag_252:\n    tag_251:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_254:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_257\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n    tag_257:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_262\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_263\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_265\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_269\n      jumpi\n      tag_270\n      tag_259\n      jump\t// in\n    tag_270:\n    tag_269:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_272\n      jumpi\n      tag_273\n      tag_259\n      jump\t// in\n    tag_273:\n    tag_272:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_275\n      jumpi\n      tag_276\n      tag_259\n      jump\t// in\n    tag_276:\n    tag_275:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_278\n      jumpi\n      tag_279\n      tag_259\n      jump\t// in\n    tag_279:\n    tag_278:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_281\n      jumpi\n      tag_282\n      tag_259\n      jump\t// in\n    tag_282:\n    tag_281:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_284\n      jumpi\n      tag_285\n      tag_259\n      jump\t// in\n    tag_285:\n    tag_284:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_287:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_288:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_289:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_290:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_291:\n        /* \"#utility.yul\":561:584   */\n      tag_351\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_290\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_352:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_292:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_354\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_291\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_357\n      tag_288\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":833:952   */\n    tag_356:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_358\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_292\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_293:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_294:\n        /* \"#utility.yul\":1268:1289   */\n      tag_361\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_293\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_363\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_294\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_295:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_296:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_297:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_367:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_367)\n    tag_369:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_298:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_299:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_372\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_295\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2329:2400   */\n      tag_373\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_296\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_374\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_297\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2499:2528   */\n      tag_375\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_298\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_30:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_377\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_299\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_300:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_301:\n        /* \"#utility.yul\":3016:3040   */\n      tag_380\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_300\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_381:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_302:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_383\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_301\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_33:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_386\n      tag_288\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3292:3411   */\n    tag_385:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_387\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_302\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_303:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_304:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_390\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_303\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_305:\n        /* \"#utility.yul\":3872:3896   */\n      tag_392\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_304\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_36:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_394\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_305\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_306:\n        /* \"#utility.yul\":4210:4234   */\n      tag_396\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_304\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_397:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_307:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_399\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_306\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_39:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_402\n      tag_288\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4503:4622   */\n    tag_401:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_403\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_307\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_404\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_302\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_43:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_407\n      tag_288\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5000:5119   */\n    tag_406:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_408\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_307\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_409\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_307\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_410\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_302\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_54:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_413\n      tag_288\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5591:5710   */\n    tag_412:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_414\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_307\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_308:\n        /* \"#utility.yul\":5937:5961   */\n      tag_416\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_300\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_57:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_418\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_308\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_309:\n        /* \"#utility.yul\":6272:6293   */\n      tag_420\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_293\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_421:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_310:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_423\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_309\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_63:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_426\n      tag_288\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6553:6672   */\n    tag_425:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_427\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_307\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_428\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_310\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_311:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_312:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_253:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_313:\n        /* \"#utility.yul\":7452:7479   */\n      tag_433\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_298\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_435\n      tag_253\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7525:7613   */\n    tag_434:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_314:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_437\n      tag_287\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_438\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_313\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_315:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_441\n      tag_253\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7928:7984   */\n    tag_440:\n        /* \"#utility.yul\":8002:8031   */\n      tag_442\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_298\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_316:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_317:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_445\n        /* \"#utility.yul\":8374:8422   */\n      tag_446\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_315\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":8358:8423   */\n      tag_314\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_448\n      tag_312\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8498:8610   */\n    tag_447:\n        /* \"#utility.yul\":8619:8673   */\n      tag_449\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_316\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_318:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_452\n      tag_311\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8769:8891   */\n    tag_451:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_453\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_317\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_67:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_456\n      tag_288\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9178:9298   */\n    tag_455:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_457\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_307\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_458\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_307\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_459\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_302\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_461\n      tag_289\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9765:9882   */\n    tag_460:\n        /* \"#utility.yul\":9906:9968   */\n      tag_462\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_318\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10299   */\n    tag_319:\n        /* \"#utility.yul\":10053:10057   */\n      0x00\n        /* \"#utility.yul\":10143:10161   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10132:10162   */\n      gt\n        /* \"#utility.yul\":10129:10185   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_465\n      tag_253\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10129:10185   */\n    tag_464:\n        /* \"#utility.yul\":10203:10232   */\n      tag_466\n        /* \"#utility.yul\":10225:10231   */\n      dup3\n        /* \"#utility.yul\":10203:10232   */\n      tag_298\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10195:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10291   */\n      0x20\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10292   */\n      add\n        /* \"#utility.yul\":10269:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10730   */\n    tag_320:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10408:10474   */\n      tag_468\n        /* \"#utility.yul\":10424:10473   */\n      tag_469\n        /* \"#utility.yul\":10466:10472   */\n      dup5\n        /* \"#utility.yul\":10424:10473   */\n      tag_319\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10408:10474   */\n      tag_314\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10399:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10483:10504   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x20\n        /* \"#utility.yul\":10528:10533   */\n      dup2\n        /* \"#utility.yul\":10524:10540   */\n      add\n        /* \"#utility.yul\":10573:10576   */\n      dup5\n        /* \"#utility.yul\":10564:10570   */\n      dup5\n        /* \"#utility.yul\":10559:10562   */\n      dup5\n        /* \"#utility.yul\":10555:10571   */\n      add\n        /* \"#utility.yul\":10552:10577   */\n      gt\n        /* \"#utility.yul\":10549:10661   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":10580:10659   */\n      tag_471\n      tag_312\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10549:10661   */\n    tag_470:\n        /* \"#utility.yul\":10670:10724   */\n      tag_472\n        /* \"#utility.yul\":10717:10723   */\n      dup5\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10707:10710   */\n      dup6\n        /* \"#utility.yul\":10670:10724   */\n      tag_316\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10389:10730   */\n      pop\n        /* \"#utility.yul\":10305:10730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11090   */\n    tag_321:\n        /* \"#utility.yul\":10806:10811   */\n      0x00\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10852   */\n      0x1f\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10836:10853   */\n      add\n        /* \"#utility.yul\":10832:10859   */\n      slt\n        /* \"#utility.yul\":10822:10944   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":10863:10942   */\n      tag_475\n      tag_311\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10822:10944   */\n    tag_474:\n        /* \"#utility.yul\":10980:10986   */\n      dup2\n        /* \"#utility.yul\":10967:10987   */\n      calldataload\n        /* \"#utility.yul\":11005:11084   */\n      tag_476\n        /* \"#utility.yul\":11080:11083   */\n      dup5\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11065:11069   */\n      0x20\n        /* \"#utility.yul\":11057:11063   */\n      dup7\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11005:11084   */\n      tag_320\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10996:11084   */\n      swap2\n      pop\n        /* \"#utility.yul\":10812:11090   */\n      pop\n        /* \"#utility.yul\":10750:11090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11605   */\n    tag_71:\n        /* \"#utility.yul\":11165:11171   */\n      0x00\n        /* \"#utility.yul\":11214:11216   */\n      0x20\n        /* \"#utility.yul\":11202:11211   */\n      dup3\n        /* \"#utility.yul\":11193:11200   */\n      dup5\n        /* \"#utility.yul\":11189:11212   */\n      sub\n        /* \"#utility.yul\":11185:11217   */\n      slt\n        /* \"#utility.yul\":11182:11301   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":11220:11299   */\n      tag_479\n      tag_288\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11182:11301   */\n    tag_478:\n        /* \"#utility.yul\":11368:11369   */\n      0x00\n        /* \"#utility.yul\":11357:11366   */\n      dup3\n        /* \"#utility.yul\":11353:11370   */\n      add\n        /* \"#utility.yul\":11340:11371   */\n      calldataload\n        /* \"#utility.yul\":11398:11416   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11390:11396   */\n      dup2\n        /* \"#utility.yul\":11387:11417   */\n      gt\n        /* \"#utility.yul\":11384:11501   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":11420:11499   */\n      tag_481\n      tag_289\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11384:11501   */\n    tag_480:\n        /* \"#utility.yul\":11525:11588   */\n      tag_482\n        /* \"#utility.yul\":11580:11587   */\n      dup5\n        /* \"#utility.yul\":11571:11577   */\n      dup3\n        /* \"#utility.yul\":11560:11569   */\n      dup6\n        /* \"#utility.yul\":11556:11578   */\n      add\n        /* \"#utility.yul\":11525:11588   */\n      tag_321\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11515:11588   */\n      swap2\n      pop\n        /* \"#utility.yul\":11311:11598   */\n      pop\n        /* \"#utility.yul\":11096:11605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:12085   */\n    tag_82:\n        /* \"#utility.yul\":11679:11685   */\n      0x00\n        /* \"#utility.yul\":11687:11693   */\n      dup1\n        /* \"#utility.yul\":11736:11738   */\n      0x40\n        /* \"#utility.yul\":11724:11733   */\n      dup4\n        /* \"#utility.yul\":11715:11722   */\n      dup6\n        /* \"#utility.yul\":11711:11734   */\n      sub\n        /* \"#utility.yul\":11707:11739   */\n      slt\n        /* \"#utility.yul\":11704:11823   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":11742:11821   */\n      tag_485\n      tag_288\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11704:11823   */\n    tag_484:\n        /* \"#utility.yul\":11862:11863   */\n      0x00\n        /* \"#utility.yul\":11887:11940   */\n      tag_486\n        /* \"#utility.yul\":11932:11939   */\n      dup6\n        /* \"#utility.yul\":11923:11929   */\n      dup3\n        /* \"#utility.yul\":11912:11921   */\n      dup7\n        /* \"#utility.yul\":11908:11930   */\n      add\n        /* \"#utility.yul\":11887:11940   */\n      tag_307\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11877:11940   */\n      swap3\n      pop\n        /* \"#utility.yul\":11833:11950   */\n      pop\n        /* \"#utility.yul\":11989:11991   */\n      0x20\n        /* \"#utility.yul\":12015:12068   */\n      tag_487\n        /* \"#utility.yul\":12060:12067   */\n      dup6\n        /* \"#utility.yul\":12051:12057   */\n      dup3\n        /* \"#utility.yul\":12040:12049   */\n      dup7\n        /* \"#utility.yul\":12036:12058   */\n      add\n        /* \"#utility.yul\":12015:12068   */\n      tag_307\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12005:12068   */\n      swap2\n      pop\n        /* \"#utility.yul\":11960:12078   */\n      pop\n        /* \"#utility.yul\":11611:12085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12091:12271   */\n    tag_322:\n        /* \"#utility.yul\":12139:12216   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12129:12217   */\n      mstore\n        /* \"#utility.yul\":12236:12240   */\n      0x22\n        /* \"#utility.yul\":12233:12234   */\n      0x04\n        /* \"#utility.yul\":12226:12241   */\n      mstore\n        /* \"#utility.yul\":12260:12264   */\n      0x24\n        /* \"#utility.yul\":12257:12258   */\n      0x00\n        /* \"#utility.yul\":12250:12265   */\n      revert\n        /* \"#utility.yul\":12277:12597   */\n    tag_91:\n        /* \"#utility.yul\":12321:12327   */\n      0x00\n        /* \"#utility.yul\":12358:12359   */\n      0x02\n        /* \"#utility.yul\":12352:12356   */\n      dup3\n        /* \"#utility.yul\":12348:12360   */\n      div\n        /* \"#utility.yul\":12338:12360   */\n      swap1\n      pop\n        /* \"#utility.yul\":12405:12406   */\n      0x01\n        /* \"#utility.yul\":12399:12403   */\n      dup3\n        /* \"#utility.yul\":12395:12407   */\n      and\n        /* \"#utility.yul\":12426:12444   */\n      dup1\n        /* \"#utility.yul\":12416:12497   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12482:12486   */\n      0x7f\n        /* \"#utility.yul\":12474:12480   */\n      dup3\n        /* \"#utility.yul\":12470:12487   */\n      and\n        /* \"#utility.yul\":12460:12487   */\n      swap2\n      pop\n        /* \"#utility.yul\":12416:12497   */\n    tag_490:\n        /* \"#utility.yul\":12544:12546   */\n      0x20\n        /* \"#utility.yul\":12536:12542   */\n      dup3\n        /* \"#utility.yul\":12533:12547   */\n      lt\n        /* \"#utility.yul\":12513:12531   */\n      dup2\n        /* \"#utility.yul\":12510:12548   */\n      sub\n        /* \"#utility.yul\":12507:12591   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":12563:12581   */\n      tag_492\n      tag_322\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12507:12591   */\n    tag_491:\n        /* \"#utility.yul\":12328:12597   */\n      pop\n        /* \"#utility.yul\":12277:12597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12603:13045   */\n    tag_114:\n        /* \"#utility.yul\":12752:12756   */\n      0x00\n        /* \"#utility.yul\":12790:12792   */\n      0x60\n        /* \"#utility.yul\":12779:12788   */\n      dup3\n        /* \"#utility.yul\":12775:12793   */\n      add\n        /* \"#utility.yul\":12767:12793   */\n      swap1\n      pop\n        /* \"#utility.yul\":12803:12874   */\n      tag_494\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12847:12853   */\n      dup7\n        /* \"#utility.yul\":12803:12874   */\n      tag_305\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12884:12956   */\n      tag_495\n        /* \"#utility.yul\":12952:12954   */\n      0x20\n        /* \"#utility.yul\":12941:12950   */\n      dup4\n        /* \"#utility.yul\":12937:12955   */\n      add\n        /* \"#utility.yul\":12928:12934   */\n      dup6\n        /* \"#utility.yul\":12884:12956   */\n      tag_308\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12966:13038   */\n      tag_496\n        /* \"#utility.yul\":13034:13036   */\n      0x40\n        /* \"#utility.yul\":13023:13032   */\n      dup4\n        /* \"#utility.yul\":13019:13037   */\n      add\n        /* \"#utility.yul\":13010:13016   */\n      dup5\n        /* \"#utility.yul\":12966:13038   */\n      tag_305\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12603:13045   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13051:13584   */\n    tag_142:\n        /* \"#utility.yul\":13220:13224   */\n      0x00\n        /* \"#utility.yul\":13258:13260   */\n      0x60\n        /* \"#utility.yul\":13247:13256   */\n      dup3\n        /* \"#utility.yul\":13243:13261   */\n      add\n        /* \"#utility.yul\":13235:13261   */\n      swap1\n      pop\n        /* \"#utility.yul\":13271:13342   */\n      tag_498\n        /* \"#utility.yul\":13339:13340   */\n      0x00\n        /* \"#utility.yul\":13328:13337   */\n      dup4\n        /* \"#utility.yul\":13324:13341   */\n      add\n        /* \"#utility.yul\":13315:13321   */\n      dup7\n        /* \"#utility.yul\":13271:13342   */\n      tag_305\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13352:13424   */\n      tag_499\n        /* \"#utility.yul\":13420:13422   */\n      0x20\n        /* \"#utility.yul\":13409:13418   */\n      dup4\n        /* \"#utility.yul\":13405:13423   */\n      add\n        /* \"#utility.yul\":13396:13402   */\n      dup6\n        /* \"#utility.yul\":13352:13424   */\n      tag_308\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13471:13480   */\n      dup2\n        /* \"#utility.yul\":13465:13469   */\n      dup2\n        /* \"#utility.yul\":13461:13481   */\n      sub\n        /* \"#utility.yul\":13456:13458   */\n      0x40\n        /* \"#utility.yul\":13445:13454   */\n      dup4\n        /* \"#utility.yul\":13441:13459   */\n      add\n        /* \"#utility.yul\":13434:13482   */\n      mstore\n        /* \"#utility.yul\":13499:13577   */\n      tag_500\n        /* \"#utility.yul\":13572:13576   */\n      dup2\n        /* \"#utility.yul\":13563:13569   */\n      dup5\n        /* \"#utility.yul\":13499:13577   */\n      tag_299\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13491:13577   */\n      swap1\n      pop\n        /* \"#utility.yul\":13051:13584   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13590:13770   */\n    tag_323:\n        /* \"#utility.yul\":13638:13715   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13635:13636   */\n      0x00\n        /* \"#utility.yul\":13628:13716   */\n      mstore\n        /* \"#utility.yul\":13735:13739   */\n      0x11\n        /* \"#utility.yul\":13732:13733   */\n      0x04\n        /* \"#utility.yul\":13725:13740   */\n      mstore\n        /* \"#utility.yul\":13759:13763   */\n      0x24\n        /* \"#utility.yul\":13756:13757   */\n      0x00\n        /* \"#utility.yul\":13749:13764   */\n      revert\n        /* \"#utility.yul\":13776:13967   */\n    tag_144:\n        /* \"#utility.yul\":13816:13819   */\n      0x00\n        /* \"#utility.yul\":13835:13855   */\n      tag_503\n        /* \"#utility.yul\":13853:13854   */\n      dup3\n        /* \"#utility.yul\":13835:13855   */\n      tag_300\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13830:13855   */\n      swap2\n      pop\n        /* \"#utility.yul\":13869:13889   */\n      tag_504\n        /* \"#utility.yul\":13887:13888   */\n      dup4\n        /* \"#utility.yul\":13869:13889   */\n      tag_300\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13864:13889   */\n      swap3\n      pop\n        /* \"#utility.yul\":13912:13913   */\n      dup3\n        /* \"#utility.yul\":13909:13910   */\n      dup3\n        /* \"#utility.yul\":13905:13914   */\n      add\n        /* \"#utility.yul\":13898:13914   */\n      swap1\n      pop\n        /* \"#utility.yul\":13933:13936   */\n      dup1\n        /* \"#utility.yul\":13930:13931   */\n      dup3\n        /* \"#utility.yul\":13927:13937   */\n      gt\n        /* \"#utility.yul\":13924:13960   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":13940:13958   */\n      tag_506\n      tag_323\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13924:13960   */\n    tag_505:\n        /* \"#utility.yul\":13776:13967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13973:14121   */\n    tag_324:\n        /* \"#utility.yul\":14075:14086   */\n      0x00\n        /* \"#utility.yul\":14112:14115   */\n      dup2\n        /* \"#utility.yul\":14097:14115   */\n      swap1\n      pop\n        /* \"#utility.yul\":13973:14121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14127:14517   */\n    tag_325:\n        /* \"#utility.yul\":14233:14236   */\n      0x00\n        /* \"#utility.yul\":14261:14300   */\n      tag_509\n        /* \"#utility.yul\":14294:14299   */\n      dup3\n        /* \"#utility.yul\":14261:14300   */\n      tag_295\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14316:14405   */\n      tag_510\n        /* \"#utility.yul\":14398:14404   */\n      dup2\n        /* \"#utility.yul\":14393:14396   */\n      dup6\n        /* \"#utility.yul\":14316:14405   */\n      tag_324\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":14309:14405   */\n      swap4\n      pop\n        /* \"#utility.yul\":14414:14479   */\n      tag_511\n        /* \"#utility.yul\":14472:14478   */\n      dup2\n        /* \"#utility.yul\":14467:14470   */\n      dup6\n        /* \"#utility.yul\":14460:14464   */\n      0x20\n        /* \"#utility.yul\":14453:14458   */\n      dup7\n        /* \"#utility.yul\":14449:14465   */\n      add\n        /* \"#utility.yul\":14414:14479   */\n      tag_297\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":14504:14510   */\n      dup1\n        /* \"#utility.yul\":14499:14502   */\n      dup5\n        /* \"#utility.yul\":14495:14511   */\n      add\n        /* \"#utility.yul\":14488:14511   */\n      swap2\n      pop\n        /* \"#utility.yul\":14237:14517   */\n      pop\n        /* \"#utility.yul\":14127:14517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14523:14958   */\n    tag_157:\n        /* \"#utility.yul\":14703:14706   */\n      0x00\n        /* \"#utility.yul\":14725:14820   */\n      tag_513\n        /* \"#utility.yul\":14816:14819   */\n      dup3\n        /* \"#utility.yul\":14807:14813   */\n      dup6\n        /* \"#utility.yul\":14725:14820   */\n      tag_325\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14718:14820   */\n      swap2\n      pop\n        /* \"#utility.yul\":14837:14932   */\n      tag_514\n        /* \"#utility.yul\":14928:14931   */\n      dup3\n        /* \"#utility.yul\":14919:14925   */\n      dup5\n        /* \"#utility.yul\":14837:14932   */\n      tag_325\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":14830:14932   */\n      swap2\n      pop\n        /* \"#utility.yul\":14949:14952   */\n      dup2\n        /* \"#utility.yul\":14942:14952   */\n      swap1\n      pop\n        /* \"#utility.yul\":14523:14958   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14964:15062   */\n    tag_326:\n        /* \"#utility.yul\":15015:15021   */\n      0x00\n        /* \"#utility.yul\":15049:15054   */\n      dup2\n        /* \"#utility.yul\":15043:15055   */\n      mload\n        /* \"#utility.yul\":15033:15055   */\n      swap1\n      pop\n        /* \"#utility.yul\":14964:15062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15068:15236   */\n    tag_327:\n        /* \"#utility.yul\":15151:15162   */\n      0x00\n        /* \"#utility.yul\":15185:15191   */\n      dup3\n        /* \"#utility.yul\":15180:15183   */\n      dup3\n        /* \"#utility.yul\":15173:15192   */\n      mstore\n        /* \"#utility.yul\":15225:15229   */\n      0x20\n        /* \"#utility.yul\":15220:15223   */\n      dup3\n        /* \"#utility.yul\":15216:15230   */\n      add\n        /* \"#utility.yul\":15201:15230   */\n      swap1\n      pop\n        /* \"#utility.yul\":15068:15236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15242:15615   */\n    tag_328:\n        /* \"#utility.yul\":15328:15331   */\n      0x00\n        /* \"#utility.yul\":15356:15394   */\n      tag_518\n        /* \"#utility.yul\":15388:15393   */\n      dup3\n        /* \"#utility.yul\":15356:15394   */\n      tag_326\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15410:15480   */\n      tag_519\n        /* \"#utility.yul\":15473:15479   */\n      dup2\n        /* \"#utility.yul\":15468:15471   */\n      dup6\n        /* \"#utility.yul\":15410:15480   */\n      tag_327\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":15403:15480   */\n      swap4\n      pop\n        /* \"#utility.yul\":15489:15554   */\n      tag_520\n        /* \"#utility.yul\":15547:15553   */\n      dup2\n        /* \"#utility.yul\":15542:15545   */\n      dup6\n        /* \"#utility.yul\":15535:15539   */\n      0x20\n        /* \"#utility.yul\":15528:15533   */\n      dup7\n        /* \"#utility.yul\":15524:15540   */\n      add\n        /* \"#utility.yul\":15489:15554   */\n      tag_297\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15579:15608   */\n      tag_521\n        /* \"#utility.yul\":15601:15607   */\n      dup2\n        /* \"#utility.yul\":15579:15608   */\n      tag_298\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15574:15577   */\n      dup5\n        /* \"#utility.yul\":15570:15609   */\n      add\n        /* \"#utility.yul\":15563:15609   */\n      swap2\n      pop\n        /* \"#utility.yul\":15332:15615   */\n      pop\n        /* \"#utility.yul\":15242:15615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15621:16261   */\n    tag_192:\n        /* \"#utility.yul\":15816:15820   */\n      0x00\n        /* \"#utility.yul\":15854:15857   */\n      0x80\n        /* \"#utility.yul\":15843:15852   */\n      dup3\n        /* \"#utility.yul\":15839:15858   */\n      add\n        /* \"#utility.yul\":15831:15858   */\n      swap1\n      pop\n        /* \"#utility.yul\":15868:15939   */\n      tag_523\n        /* \"#utility.yul\":15936:15937   */\n      0x00\n        /* \"#utility.yul\":15925:15934   */\n      dup4\n        /* \"#utility.yul\":15921:15938   */\n      add\n        /* \"#utility.yul\":15912:15918   */\n      dup8\n        /* \"#utility.yul\":15868:15939   */\n      tag_305\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15949:16021   */\n      tag_524\n        /* \"#utility.yul\":16017:16019   */\n      0x20\n        /* \"#utility.yul\":16006:16015   */\n      dup4\n        /* \"#utility.yul\":16002:16020   */\n      add\n        /* \"#utility.yul\":15993:15999   */\n      dup7\n        /* \"#utility.yul\":15949:16021   */\n      tag_305\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":16031:16103   */\n      tag_525\n        /* \"#utility.yul\":16099:16101   */\n      0x40\n        /* \"#utility.yul\":16088:16097   */\n      dup4\n        /* \"#utility.yul\":16084:16102   */\n      add\n        /* \"#utility.yul\":16075:16081   */\n      dup6\n        /* \"#utility.yul\":16031:16103   */\n      tag_308\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":16150:16159   */\n      dup2\n        /* \"#utility.yul\":16144:16148   */\n      dup2\n        /* \"#utility.yul\":16140:16160   */\n      sub\n        /* \"#utility.yul\":16135:16137   */\n      0x60\n        /* \"#utility.yul\":16124:16133   */\n      dup4\n        /* \"#utility.yul\":16120:16138   */\n      add\n        /* \"#utility.yul\":16113:16161   */\n      mstore\n        /* \"#utility.yul\":16178:16254   */\n      tag_526\n        /* \"#utility.yul\":16249:16253   */\n      dup2\n        /* \"#utility.yul\":16240:16246   */\n      dup5\n        /* \"#utility.yul\":16178:16254   */\n      tag_328\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":16170:16254   */\n      swap1\n      pop\n        /* \"#utility.yul\":15621:16261   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16267:16408   */\n    tag_329:\n        /* \"#utility.yul\":16323:16328   */\n      0x00\n        /* \"#utility.yul\":16354:16360   */\n      dup2\n        /* \"#utility.yul\":16348:16361   */\n      mload\n        /* \"#utility.yul\":16339:16361   */\n      swap1\n      pop\n        /* \"#utility.yul\":16370:16402   */\n      tag_528\n        /* \"#utility.yul\":16396:16401   */\n      dup2\n        /* \"#utility.yul\":16370:16402   */\n      tag_291\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":16267:16408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16414:16763   */\n    tag_195:\n        /* \"#utility.yul\":16483:16489   */\n      0x00\n        /* \"#utility.yul\":16532:16534   */\n      0x20\n        /* \"#utility.yul\":16520:16529   */\n      dup3\n        /* \"#utility.yul\":16511:16518   */\n      dup5\n        /* \"#utility.yul\":16507:16530   */\n      sub\n        /* \"#utility.yul\":16503:16535   */\n      slt\n        /* \"#utility.yul\":16500:16619   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":16538:16617   */\n      tag_531\n      tag_288\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16500:16619   */\n    tag_530:\n        /* \"#utility.yul\":16658:16659   */\n      0x00\n        /* \"#utility.yul\":16683:16746   */\n      tag_532\n        /* \"#utility.yul\":16738:16745   */\n      dup5\n        /* \"#utility.yul\":16729:16735   */\n      dup3\n        /* \"#utility.yul\":16718:16727   */\n      dup6\n        /* \"#utility.yul\":16714:16736   */\n      add\n        /* \"#utility.yul\":16683:16746   */\n      tag_329\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16673:16746   */\n      swap2\n      pop\n        /* \"#utility.yul\":16629:16756   */\n      pop\n        /* \"#utility.yul\":16414:16763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16769:16910   */\n    tag_330:\n        /* \"#utility.yul\":16818:16822   */\n      0x00\n        /* \"#utility.yul\":16841:16844   */\n      dup2\n        /* \"#utility.yul\":16833:16844   */\n      swap1\n      pop\n        /* \"#utility.yul\":16864:16867   */\n      dup2\n        /* \"#utility.yul\":16861:16862   */\n      0x00\n        /* \"#utility.yul\":16854:16868   */\n      mstore\n        /* \"#utility.yul\":16898:16902   */\n      0x20\n        /* \"#utility.yul\":16895:16896   */\n      0x00\n        /* \"#utility.yul\":16885:16903   */\n      keccak256\n        /* \"#utility.yul\":16877:16903   */\n      swap1\n      pop\n        /* \"#utility.yul\":16769:16910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16916:17009   */\n    tag_331:\n        /* \"#utility.yul\":16953:16959   */\n      0x00\n        /* \"#utility.yul\":17000:17002   */\n      0x20\n        /* \"#utility.yul\":16995:16997   */\n      0x1f\n        /* \"#utility.yul\":16988:16993   */\n      dup4\n        /* \"#utility.yul\":16984:16998   */\n      add\n        /* \"#utility.yul\":16980:17003   */\n      div\n        /* \"#utility.yul\":16970:17003   */\n      swap1\n      pop\n        /* \"#utility.yul\":16916:17009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17015:17122   */\n    tag_332:\n        /* \"#utility.yul\":17059:17067   */\n      0x00\n        /* \"#utility.yul\":17109:17114   */\n      dup3\n        /* \"#utility.yul\":17103:17107   */\n      dup3\n        /* \"#utility.yul\":17099:17115   */\n      shl\n        /* \"#utility.yul\":17078:17115   */\n      swap1\n      pop\n        /* \"#utility.yul\":17015:17122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17128:17521   */\n    tag_333:\n        /* \"#utility.yul\":17197:17203   */\n      0x00\n        /* \"#utility.yul\":17247:17248   */\n      0x08\n        /* \"#utility.yul\":17235:17245   */\n      dup4\n        /* \"#utility.yul\":17231:17249   */\n      mul\n        /* \"#utility.yul\":17270:17367   */\n      tag_537\n        /* \"#utility.yul\":17300:17366   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17289:17298   */\n      dup3\n        /* \"#utility.yul\":17270:17367   */\n      tag_332\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":17388:17427   */\n      tag_538\n        /* \"#utility.yul\":17418:17426   */\n      dup7\n        /* \"#utility.yul\":17407:17416   */\n      dup4\n        /* \"#utility.yul\":17388:17427   */\n      tag_332\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":17376:17427   */\n      swap6\n      pop\n        /* \"#utility.yul\":17460:17464   */\n      dup1\n        /* \"#utility.yul\":17456:17465   */\n      not\n        /* \"#utility.yul\":17449:17454   */\n      dup5\n        /* \"#utility.yul\":17445:17466   */\n      and\n        /* \"#utility.yul\":17436:17466   */\n      swap4\n      pop\n        /* \"#utility.yul\":17509:17513   */\n      dup1\n        /* \"#utility.yul\":17499:17507   */\n      dup7\n        /* \"#utility.yul\":17495:17514   */\n      and\n        /* \"#utility.yul\":17488:17493   */\n      dup5\n        /* \"#utility.yul\":17485:17515   */\n      or\n        /* \"#utility.yul\":17475:17515   */\n      swap3\n      pop\n        /* \"#utility.yul\":17204:17521   */\n      pop\n      pop\n        /* \"#utility.yul\":17128:17521   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17527:17587   */\n    tag_334:\n        /* \"#utility.yul\":17555:17558   */\n      0x00\n        /* \"#utility.yul\":17576:17581   */\n      dup2\n        /* \"#utility.yul\":17569:17581   */\n      swap1\n      pop\n        /* \"#utility.yul\":17527:17587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17593:17735   */\n    tag_335:\n        /* \"#utility.yul\":17643:17652   */\n      0x00\n        /* \"#utility.yul\":17676:17729   */\n      tag_541\n        /* \"#utility.yul\":17694:17728   */\n      tag_542\n        /* \"#utility.yul\":17703:17727   */\n      tag_543\n        /* \"#utility.yul\":17721:17726   */\n      dup5\n        /* \"#utility.yul\":17703:17727   */\n      tag_300\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17694:17728   */\n      tag_334\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":17676:17729   */\n      tag_300\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":17663:17729   */\n      swap1\n      pop\n        /* \"#utility.yul\":17593:17735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17741:17816   */\n    tag_336:\n        /* \"#utility.yul\":17784:17787   */\n      0x00\n        /* \"#utility.yul\":17805:17810   */\n      dup2\n        /* \"#utility.yul\":17798:17810   */\n      swap1\n      pop\n        /* \"#utility.yul\":17741:17816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17822:18091   */\n    tag_337:\n        /* \"#utility.yul\":17932:17971   */\n      tag_546\n        /* \"#utility.yul\":17963:17970   */\n      dup4\n        /* \"#utility.yul\":17932:17971   */\n      tag_335\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17993:18084   */\n      tag_547\n        /* \"#utility.yul\":18042:18083   */\n      tag_548\n        /* \"#utility.yul\":18066:18082   */\n      dup3\n        /* \"#utility.yul\":18042:18083   */\n      tag_336\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":18034:18040   */\n      dup5\n        /* \"#utility.yul\":18027:18031   */\n      dup5\n        /* \"#utility.yul\":18021:18032   */\n      sload\n        /* \"#utility.yul\":17993:18084   */\n      tag_333\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17987:17991   */\n      dup3\n        /* \"#utility.yul\":17980:18085   */\n      sstore\n        /* \"#utility.yul\":17898:18091   */\n      pop\n        /* \"#utility.yul\":17822:18091   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18097:18170   */\n    tag_338:\n        /* \"#utility.yul\":18142:18145   */\n      0x00\n        /* \"#utility.yul\":18097:18170   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18176:18365   */\n    tag_339:\n        /* \"#utility.yul\":18253:18285   */\n      tag_551\n      tag_338\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":18294:18359   */\n      tag_552\n        /* \"#utility.yul\":18352:18358   */\n      dup2\n        /* \"#utility.yul\":18344:18350   */\n      dup5\n        /* \"#utility.yul\":18338:18342   */\n      dup5\n        /* \"#utility.yul\":18294:18359   */\n      tag_337\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":18229:18365   */\n      pop\n        /* \"#utility.yul\":18176:18365   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18371:18557   */\n    tag_340:\n        /* \"#utility.yul\":18431:18551   */\n    tag_554:\n        /* \"#utility.yul\":18448:18451   */\n      dup2\n        /* \"#utility.yul\":18441:18446   */\n      dup2\n        /* \"#utility.yul\":18438:18452   */\n      lt\n        /* \"#utility.yul\":18431:18551   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":18502:18541   */\n      tag_557\n        /* \"#utility.yul\":18539:18540   */\n      0x00\n        /* \"#utility.yul\":18532:18537   */\n      dup3\n        /* \"#utility.yul\":18502:18541   */\n      tag_339\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":18475:18476   */\n      0x01\n        /* \"#utility.yul\":18468:18473   */\n      dup2\n        /* \"#utility.yul\":18464:18477   */\n      add\n        /* \"#utility.yul\":18455:18477   */\n      swap1\n      pop\n        /* \"#utility.yul\":18431:18551   */\n      jump(tag_554)\n    tag_556:\n        /* \"#utility.yul\":18371:18557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18563:19106   */\n    tag_341:\n        /* \"#utility.yul\":18664:18666   */\n      0x1f\n        /* \"#utility.yul\":18659:18662   */\n      dup3\n        /* \"#utility.yul\":18656:18667   */\n      gt\n        /* \"#utility.yul\":18653:19099   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":18698:18736   */\n      tag_560\n        /* \"#utility.yul\":18730:18735   */\n      dup2\n        /* \"#utility.yul\":18698:18736   */\n      tag_330\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18782:18811   */\n      tag_561\n        /* \"#utility.yul\":18800:18810   */\n      dup5\n        /* \"#utility.yul\":18782:18811   */\n      tag_331\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18772:18780   */\n      dup2\n        /* \"#utility.yul\":18768:18812   */\n      add\n        /* \"#utility.yul\":18965:18967   */\n      0x20\n        /* \"#utility.yul\":18953:18963   */\n      dup6\n        /* \"#utility.yul\":18950:18968   */\n      lt\n        /* \"#utility.yul\":18947:18996   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":18986:18994   */\n      dup2\n        /* \"#utility.yul\":18971:18994   */\n      swap1\n      pop\n        /* \"#utility.yul\":18947:18996   */\n    tag_562:\n        /* \"#utility.yul\":19009:19089   */\n      tag_563\n        /* \"#utility.yul\":19065:19087   */\n      tag_564\n        /* \"#utility.yul\":19083:19086   */\n      dup6\n        /* \"#utility.yul\":19065:19087   */\n      tag_331\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19055:19063   */\n      dup4\n        /* \"#utility.yul\":19051:19088   */\n      add\n        /* \"#utility.yul\":19038:19049   */\n      dup3\n        /* \"#utility.yul\":19009:19089   */\n      tag_340\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":18668:19099   */\n      pop\n      pop\n        /* \"#utility.yul\":18653:19099   */\n    tag_559:\n        /* \"#utility.yul\":18563:19106   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19112:19229   */\n    tag_342:\n        /* \"#utility.yul\":19166:19174   */\n      0x00\n        /* \"#utility.yul\":19216:19221   */\n      dup3\n        /* \"#utility.yul\":19210:19214   */\n      dup3\n        /* \"#utility.yul\":19206:19222   */\n      shr\n        /* \"#utility.yul\":19185:19222   */\n      swap1\n      pop\n        /* \"#utility.yul\":19112:19229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19235:19404   */\n    tag_343:\n        /* \"#utility.yul\":19279:19285   */\n      0x00\n        /* \"#utility.yul\":19312:19363   */\n      tag_567\n        /* \"#utility.yul\":19360:19361   */\n      0x00\n        /* \"#utility.yul\":19356:19362   */\n      not\n        /* \"#utility.yul\":19348:19353   */\n      dup5\n        /* \"#utility.yul\":19345:19346   */\n      0x08\n        /* \"#utility.yul\":19341:19354   */\n      mul\n        /* \"#utility.yul\":19312:19363   */\n      tag_342\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19308:19364   */\n      not\n        /* \"#utility.yul\":19393:19397   */\n      dup1\n        /* \"#utility.yul\":19387:19391   */\n      dup4\n        /* \"#utility.yul\":19383:19398   */\n      and\n        /* \"#utility.yul\":19373:19398   */\n      swap2\n      pop\n        /* \"#utility.yul\":19286:19404   */\n      pop\n        /* \"#utility.yul\":19235:19404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19409:19704   */\n    tag_344:\n        /* \"#utility.yul\":19485:19489   */\n      0x00\n        /* \"#utility.yul\":19631:19660   */\n      tag_569\n        /* \"#utility.yul\":19656:19659   */\n      dup4\n        /* \"#utility.yul\":19650:19654   */\n      dup4\n        /* \"#utility.yul\":19631:19660   */\n      tag_343\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19623:19660   */\n      swap2\n      pop\n        /* \"#utility.yul\":19693:19696   */\n      dup3\n        /* \"#utility.yul\":19690:19691   */\n      0x02\n        /* \"#utility.yul\":19686:19697   */\n      mul\n        /* \"#utility.yul\":19680:19684   */\n      dup3\n        /* \"#utility.yul\":19677:19698   */\n      or\n        /* \"#utility.yul\":19669:19698   */\n      swap1\n      pop\n        /* \"#utility.yul\":19409:19704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19709:21104   */\n    tag_216:\n        /* \"#utility.yul\":19826:19863   */\n      tag_571\n        /* \"#utility.yul\":19859:19862   */\n      dup3\n        /* \"#utility.yul\":19826:19863   */\n      tag_295\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19928:19946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19920:19926   */\n      dup2\n        /* \"#utility.yul\":19917:19947   */\n      gt\n        /* \"#utility.yul\":19914:19970   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":19950:19968   */\n      tag_573\n      tag_253\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19914:19970   */\n    tag_572:\n        /* \"#utility.yul\":19994:20032   */\n      tag_574\n        /* \"#utility.yul\":20026:20030   */\n      dup3\n        /* \"#utility.yul\":20020:20031   */\n      sload\n        /* \"#utility.yul\":19994:20032   */\n      tag_91\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20079:20146   */\n      tag_575\n        /* \"#utility.yul\":20139:20145   */\n      dup3\n        /* \"#utility.yul\":20131:20137   */\n      dup3\n        /* \"#utility.yul\":20125:20129   */\n      dup6\n        /* \"#utility.yul\":20079:20146   */\n      tag_341\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":20173:20174   */\n      0x00\n        /* \"#utility.yul\":20197:20201   */\n      0x20\n        /* \"#utility.yul\":20184:20201   */\n      swap1\n      pop\n        /* \"#utility.yul\":20229:20231   */\n      0x1f\n        /* \"#utility.yul\":20221:20227   */\n      dup4\n        /* \"#utility.yul\":20218:20232   */\n      gt\n        /* \"#utility.yul\":20246:20247   */\n      0x01\n        /* \"#utility.yul\":20241:20859   */\n      dup2\n      eq\n      tag_577\n      jumpi\n        /* \"#utility.yul\":20903:20904   */\n      0x00\n        /* \"#utility.yul\":20920:20926   */\n      dup5\n        /* \"#utility.yul\":20917:20994   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":20969:20978   */\n      dup3\n        /* \"#utility.yul\":20964:20967   */\n      dup8\n        /* \"#utility.yul\":20960:20979   */\n      add\n        /* \"#utility.yul\":20954:20980   */\n      mload\n        /* \"#utility.yul\":20945:20980   */\n      swap1\n      pop\n        /* \"#utility.yul\":20917:20994   */\n    tag_578:\n        /* \"#utility.yul\":21020:21087   */\n      tag_579\n        /* \"#utility.yul\":21080:21086   */\n      dup6\n        /* \"#utility.yul\":21073:21078   */\n      dup3\n        /* \"#utility.yul\":21020:21087   */\n      tag_344\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":21014:21018   */\n      dup7\n        /* \"#utility.yul\":21007:21088   */\n      sstore\n        /* \"#utility.yul\":20876:21098   */\n      pop\n        /* \"#utility.yul\":20211:21098   */\n      jump(tag_576)\n        /* \"#utility.yul\":20241:20859   */\n    tag_577:\n        /* \"#utility.yul\":20293:20297   */\n      0x1f\n        /* \"#utility.yul\":20289:20298   */\n      not\n        /* \"#utility.yul\":20281:20287   */\n      dup5\n        /* \"#utility.yul\":20277:20299   */\n      and\n        /* \"#utility.yul\":20327:20364   */\n      tag_580\n        /* \"#utility.yul\":20359:20363   */\n      dup7\n        /* \"#utility.yul\":20327:20364   */\n      tag_330\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20386:20387   */\n      0x00\n        /* \"#utility.yul\":20400:20608   */\n    tag_581:\n        /* \"#utility.yul\":20414:20421   */\n      dup3\n        /* \"#utility.yul\":20411:20412   */\n      dup2\n        /* \"#utility.yul\":20408:20422   */\n      lt\n        /* \"#utility.yul\":20400:20608   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":20493:20502   */\n      dup5\n        /* \"#utility.yul\":20488:20491   */\n      dup10\n        /* \"#utility.yul\":20484:20503   */\n      add\n        /* \"#utility.yul\":20478:20504   */\n      mload\n        /* \"#utility.yul\":20470:20476   */\n      dup3\n        /* \"#utility.yul\":20463:20505   */\n      sstore\n        /* \"#utility.yul\":20544:20545   */\n      0x01\n        /* \"#utility.yul\":20536:20542   */\n      dup3\n        /* \"#utility.yul\":20532:20546   */\n      add\n        /* \"#utility.yul\":20522:20546   */\n      swap2\n      pop\n        /* \"#utility.yul\":20591:20593   */\n      0x20\n        /* \"#utility.yul\":20580:20589   */\n      dup6\n        /* \"#utility.yul\":20576:20594   */\n      add\n        /* \"#utility.yul\":20563:20594   */\n      swap5\n      pop\n        /* \"#utility.yul\":20437:20441   */\n      0x20\n        /* \"#utility.yul\":20434:20435   */\n      dup2\n        /* \"#utility.yul\":20430:20442   */\n      add\n        /* \"#utility.yul\":20425:20442   */\n      swap1\n      pop\n        /* \"#utility.yul\":20400:20608   */\n      jump(tag_581)\n    tag_583:\n        /* \"#utility.yul\":20636:20642   */\n      dup7\n        /* \"#utility.yul\":20627:20634   */\n      dup4\n        /* \"#utility.yul\":20624:20643   */\n      lt\n        /* \"#utility.yul\":20621:20800   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":20694:20703   */\n      dup5\n        /* \"#utility.yul\":20689:20692   */\n      dup10\n        /* \"#utility.yul\":20685:20704   */\n      add\n        /* \"#utility.yul\":20679:20705   */\n      mload\n        /* \"#utility.yul\":20737:20785   */\n      tag_585\n        /* \"#utility.yul\":20779:20783   */\n      0x1f\n        /* \"#utility.yul\":20771:20777   */\n      dup10\n        /* \"#utility.yul\":20767:20784   */\n      and\n        /* \"#utility.yul\":20756:20765   */\n      dup3\n        /* \"#utility.yul\":20737:20785   */\n      tag_343\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":20729:20735   */\n      dup4\n        /* \"#utility.yul\":20722:20786   */\n      sstore\n        /* \"#utility.yul\":20644:20800   */\n      pop\n        /* \"#utility.yul\":20621:20800   */\n    tag_584:\n        /* \"#utility.yul\":20846:20847   */\n      0x01\n        /* \"#utility.yul\":20842:20843   */\n      0x02\n        /* \"#utility.yul\":20834:20840   */\n      dup9\n        /* \"#utility.yul\":20830:20844   */\n      mul\n        /* \"#utility.yul\":20826:20848   */\n      add\n        /* \"#utility.yul\":20820:20824   */\n      dup9\n        /* \"#utility.yul\":20813:20849   */\n      sstore\n        /* \"#utility.yul\":20248:20859   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20211:21098   */\n    tag_576:\n      pop\n        /* \"#utility.yul\":19801:21104   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19709:21104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21110:21442   */\n    tag_247:\n        /* \"#utility.yul\":21231:21235   */\n      0x00\n        /* \"#utility.yul\":21269:21271   */\n      0x40\n        /* \"#utility.yul\":21258:21267   */\n      dup3\n        /* \"#utility.yul\":21254:21272   */\n      add\n        /* \"#utility.yul\":21246:21272   */\n      swap1\n      pop\n        /* \"#utility.yul\":21282:21353   */\n      tag_587\n        /* \"#utility.yul\":21350:21351   */\n      0x00\n        /* \"#utility.yul\":21339:21348   */\n      dup4\n        /* \"#utility.yul\":21335:21352   */\n      add\n        /* \"#utility.yul\":21326:21332   */\n      dup6\n        /* \"#utility.yul\":21282:21353   */\n      tag_305\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":21363:21435   */\n      tag_588\n        /* \"#utility.yul\":21431:21433   */\n      0x20\n        /* \"#utility.yul\":21420:21429   */\n      dup4\n        /* \"#utility.yul\":21416:21434   */\n      add\n        /* \"#utility.yul\":21407:21413   */\n      dup5\n        /* \"#utility.yul\":21363:21435   */\n      tag_308\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":21110:21442   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21448:21628   */\n    tag_259:\n        /* \"#utility.yul\":21496:21573   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21493:21494   */\n      0x00\n        /* \"#utility.yul\":21486:21574   */\n      mstore\n        /* \"#utility.yul\":21593:21597   */\n      0x12\n        /* \"#utility.yul\":21590:21591   */\n      0x04\n        /* \"#utility.yul\":21583:21598   */\n      mstore\n        /* \"#utility.yul\":21617:21621   */\n      0x24\n        /* \"#utility.yul\":21614:21615   */\n      0x00\n        /* \"#utility.yul\":21607:21622   */\n      revert\n\n    auxdata: 0xa26469706673582212201f2843552e83dca54c2f39d4a4296a1a244fa43468eb29f005b972122e009cfe64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_238": {
									"entryPoint": null,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2973": {
									"entryPoint": null,
									"id": 2973,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8574:16",
										"nodeType": "YulBlock",
										"src": "0:8574:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "423:28:16",
													"nodeType": "YulBlock",
													"src": "423:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:16",
																		"nodeType": "YulLiteral",
																		"src": "440:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:16",
																		"nodeType": "YulLiteral",
																		"src": "443:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:16"
																},
																"nativeSrc": "433:12:16",
																"nodeType": "YulFunctionCall",
																"src": "433:12:16"
															},
															"nativeSrc": "433:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:16"
											},
											{
												"body": {
													"nativeSrc": "546:28:16",
													"nodeType": "YulBlock",
													"src": "546:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:16",
																		"nodeType": "YulLiteral",
																		"src": "563:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:16",
																		"nodeType": "YulLiteral",
																		"src": "566:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:16"
																},
																"nativeSrc": "556:12:16",
																"nodeType": "YulFunctionCall",
																"src": "556:12:16"
															},
															"nativeSrc": "556:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:16"
											},
											{
												"body": {
													"nativeSrc": "628:54:16",
													"nodeType": "YulBlock",
													"src": "628:54:16",
													"statements": [
														{
															"nativeSrc": "638:38:16",
															"nodeType": "YulAssignment",
															"src": "638:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:16",
																				"nodeType": "YulLiteral",
																				"src": "663:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:16"
																		},
																		"nativeSrc": "652:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:16",
																				"nodeType": "YulLiteral",
																				"src": "672:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:16"
																		},
																		"nativeSrc": "668:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:16"
																},
																"nativeSrc": "648:28:16",
																"nodeType": "YulFunctionCall",
																"src": "648:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:16",
														"nodeType": "YulTypedName",
														"src": "611:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:16",
														"nodeType": "YulTypedName",
														"src": "621:6:16",
														"type": ""
													}
												],
												"src": "580:102:16"
											},
											{
												"body": {
													"nativeSrc": "716:152:16",
													"nodeType": "YulBlock",
													"src": "716:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:16",
																		"nodeType": "YulLiteral",
																		"src": "733:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:16",
																		"nodeType": "YulLiteral",
																		"src": "736:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:16"
																},
																"nativeSrc": "726:88:16",
																"nodeType": "YulFunctionCall",
																"src": "726:88:16"
															},
															"nativeSrc": "726:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:16",
																		"nodeType": "YulLiteral",
																		"src": "830:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:16",
																		"nodeType": "YulLiteral",
																		"src": "833:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:16"
																},
																"nativeSrc": "823:15:16",
																"nodeType": "YulFunctionCall",
																"src": "823:15:16"
															},
															"nativeSrc": "823:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:16",
																		"nodeType": "YulLiteral",
																		"src": "854:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:16",
																		"nodeType": "YulLiteral",
																		"src": "857:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:16"
																},
																"nativeSrc": "847:15:16",
																"nodeType": "YulFunctionCall",
																"src": "847:15:16"
															},
															"nativeSrc": "847:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:16"
											},
											{
												"body": {
													"nativeSrc": "917:238:16",
													"nodeType": "YulBlock",
													"src": "917:238:16",
													"statements": [
														{
															"nativeSrc": "927:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:16"
																		},
																		"nativeSrc": "957:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:16"
																},
																"nativeSrc": "945:40:16",
																"nodeType": "YulFunctionCall",
																"src": "945:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:16",
																	"nodeType": "YulTypedName",
																	"src": "931:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:16",
																"nodeType": "YulBlock",
																"src": "1096:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:16"
																			},
																			"nativeSrc": "1098:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:16"
																		},
																		"nativeSrc": "1098:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:16",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:16"
																		},
																		"nativeSrc": "1036:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:16"
																		},
																		"nativeSrc": "1072:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:16"
																},
																"nativeSrc": "1033:62:16",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:16"
															},
															"nativeSrc": "1030:88:16",
															"nodeType": "YulIf",
															"src": "1030:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:16"
																},
																"nativeSrc": "1127:22:16",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:16"
															},
															"nativeSrc": "1127:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:16",
														"nodeType": "YulTypedName",
														"src": "903:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:16",
														"nodeType": "YulTypedName",
														"src": "911:4:16",
														"type": ""
													}
												],
												"src": "874:281:16"
											},
											{
												"body": {
													"nativeSrc": "1202:88:16",
													"nodeType": "YulBlock",
													"src": "1202:88:16",
													"statements": [
														{
															"nativeSrc": "1212:30:16",
															"nodeType": "YulAssignment",
															"src": "1212:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:16"
																},
																"nativeSrc": "1222:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:16"
																},
																"nativeSrc": "1251:33:16",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:16"
															},
															"nativeSrc": "1251:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:16",
														"nodeType": "YulTypedName",
														"src": "1186:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:16",
														"nodeType": "YulTypedName",
														"src": "1195:6:16",
														"type": ""
													}
												],
												"src": "1161:129:16"
											},
											{
												"body": {
													"nativeSrc": "1363:241:16",
													"nodeType": "YulBlock",
													"src": "1363:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:16",
																"nodeType": "YulBlock",
																"src": "1468:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:16"
																			},
																			"nativeSrc": "1470:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:16"
																		},
																		"nativeSrc": "1470:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:16",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:16"
																},
																"nativeSrc": "1437:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:16"
															},
															"nativeSrc": "1434:56:16",
															"nodeType": "YulIf",
															"src": "1434:56:16"
														},
														{
															"nativeSrc": "1500:37:16",
															"nodeType": "YulAssignment",
															"src": "1500:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:16"
																},
																"nativeSrc": "1508:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:16"
																}
															]
														},
														{
															"nativeSrc": "1574:23:16",
															"nodeType": "YulAssignment",
															"src": "1574:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:16"
																},
																"nativeSrc": "1582:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:16",
														"nodeType": "YulTypedName",
														"src": "1347:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:16",
														"nodeType": "YulTypedName",
														"src": "1358:4:16",
														"type": ""
													}
												],
												"src": "1296:308:16"
											},
											{
												"body": {
													"nativeSrc": "1672:184:16",
													"nodeType": "YulBlock",
													"src": "1672:184:16",
													"statements": [
														{
															"nativeSrc": "1682:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:16",
																"nodeType": "YulLiteral",
																"src": "1691:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:16",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:16",
																"nodeType": "YulBlock",
																"src": "1751:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:16"
																					},
																					"nativeSrc": "1772:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:16"
																							},
																							"nativeSrc": "1791:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:16"
																					},
																					"nativeSrc": "1785:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:16"
																			},
																			"nativeSrc": "1765:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:16"
																		},
																		"nativeSrc": "1765:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:16"
																},
																"nativeSrc": "1709:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:16"
															},
															"nativeSrc": "1701:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:16",
																"nodeType": "YulBlock",
																"src": "1723:19:16",
																"statements": [
																	{
																		"nativeSrc": "1725:15:16",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:16",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:16"
																			},
																			"nativeSrc": "1730:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:16",
																"nodeType": "YulBlock",
																"src": "1705:3:16",
																"statements": []
															},
															"src": "1701:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:16"
																		},
																		"nativeSrc": "1830:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:16"
																},
																"nativeSrc": "1823:27:16",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:16"
															},
															"nativeSrc": "1823:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:16",
														"nodeType": "YulTypedName",
														"src": "1654:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:16",
														"nodeType": "YulTypedName",
														"src": "1659:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:16",
														"nodeType": "YulTypedName",
														"src": "1664:6:16",
														"type": ""
													}
												],
												"src": "1610:246:16"
											},
											{
												"body": {
													"nativeSrc": "1957:339:16",
													"nodeType": "YulBlock",
													"src": "1957:339:16",
													"statements": [
														{
															"nativeSrc": "1967:75:16",
															"nodeType": "YulAssignment",
															"src": "1967:75:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:16"
																		},
																		"nativeSrc": "1992:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:16"
																},
																"nativeSrc": "1976:66:16",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:16"
																},
																"nativeSrc": "2051:21:16",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:16"
															},
															"nativeSrc": "2051:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:16"
														},
														{
															"nativeSrc": "2081:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:16"
																},
																"nativeSrc": "2092:16:16",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:16",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:16",
																"nodeType": "YulBlock",
																"src": "2146:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:16"
																			},
																			"nativeSrc": "2148:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:16"
																		},
																		"nativeSrc": "2148:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:16"
																		},
																		"nativeSrc": "2123:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:16"
																},
																"nativeSrc": "2120:25:16",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:16"
															},
															"nativeSrc": "2117:112:16",
															"nodeType": "YulIf",
															"src": "2117:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:16"
																},
																"nativeSrc": "2238:52:16",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:16"
															},
															"nativeSrc": "2238:52:16",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:16",
														"nodeType": "YulTypedName",
														"src": "1930:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:16",
														"nodeType": "YulTypedName",
														"src": "1935:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:16",
														"nodeType": "YulTypedName",
														"src": "1943:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:16",
														"nodeType": "YulTypedName",
														"src": "1951:5:16",
														"type": ""
													}
												],
												"src": "1862:434:16"
											},
											{
												"body": {
													"nativeSrc": "2389:282:16",
													"nodeType": "YulBlock",
													"src": "2389:282:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:16",
																"nodeType": "YulBlock",
																"src": "2438:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:16"
																			},
																			"nativeSrc": "2440:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:16"
																		},
																		"nativeSrc": "2440:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:16",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:16"
																				},
																				"nativeSrc": "2413:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:16"
																		},
																		"nativeSrc": "2409:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:16"
																},
																"nativeSrc": "2402:35:16",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:16"
															},
															"nativeSrc": "2399:122:16",
															"nodeType": "YulIf",
															"src": "2399:122:16"
														},
														{
															"nativeSrc": "2530:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:16"
																},
																"nativeSrc": "2544:13:16",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:16",
															"nodeType": "YulAssignment",
															"src": "2566:99:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:16",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:16"
																		},
																		"nativeSrc": "2634:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:16"
																},
																"nativeSrc": "2575:90:16",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:16",
														"nodeType": "YulTypedName",
														"src": "2367:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:16",
														"nodeType": "YulTypedName",
														"src": "2375:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:16",
														"nodeType": "YulTypedName",
														"src": "2383:5:16",
														"type": ""
													}
												],
												"src": "2316:355:16"
											},
											{
												"body": {
													"nativeSrc": "2791:739:16",
													"nodeType": "YulBlock",
													"src": "2791:739:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2837:83:16",
																"nodeType": "YulBlock",
																"src": "2837:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2839:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:16"
																			},
																			"nativeSrc": "2839:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:16"
																		},
																		"nativeSrc": "2839:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:16"
																		},
																		"nativeSrc": "2808:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2804:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:16"
																},
																"nativeSrc": "2804:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2804:32:16"
															},
															"nativeSrc": "2801:119:16",
															"nodeType": "YulIf",
															"src": "2801:119:16"
														},
														{
															"nativeSrc": "2930:291:16",
															"nodeType": "YulBlock",
															"src": "2930:291:16",
															"statements": [
																{
																	"nativeSrc": "2945:38:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2969:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2980:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2965:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:16"
																				},
																				"nativeSrc": "2965:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2959:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:16"
																		},
																		"nativeSrc": "2959:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2949:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3030:83:16",
																		"nodeType": "YulBlock",
																		"src": "3030:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3032:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:16"
																					},
																					"nativeSrc": "3032:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:16"
																				},
																				"nativeSrc": "3032:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3002:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3010:18:16",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2999:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:16"
																		},
																		"nativeSrc": "2999:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:16"
																	},
																	"nativeSrc": "2996:117:16",
																	"nodeType": "YulIf",
																	"src": "2996:117:16"
																},
																{
																	"nativeSrc": "3127:84:16",
																	"nodeType": "YulAssignment",
																	"src": "3127:84:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3183:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3194:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3179:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:16"
																				},
																				"nativeSrc": "3179:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3137:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:16"
																		},
																		"nativeSrc": "3137:74:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3127:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3231:292:16",
															"nodeType": "YulBlock",
															"src": "3231:292:16",
															"statements": [
																{
																	"nativeSrc": "3246:39:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3270:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3281:2:16",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:16"
																				},
																				"nativeSrc": "3266:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3260:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:16"
																		},
																		"nativeSrc": "3260:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3250:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3332:83:16",
																		"nodeType": "YulBlock",
																		"src": "3332:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3334:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:16"
																					},
																					"nativeSrc": "3334:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:16"
																				},
																				"nativeSrc": "3334:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3304:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3312:18:16",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3301:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:16"
																		},
																		"nativeSrc": "3301:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:16"
																	},
																	"nativeSrc": "3298:117:16",
																	"nodeType": "YulIf",
																	"src": "3298:117:16"
																},
																{
																	"nativeSrc": "3429:84:16",
																	"nodeType": "YulAssignment",
																	"src": "3429:84:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3485:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3496:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3481:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:16"
																				},
																				"nativeSrc": "3481:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3505:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3439:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:16"
																		},
																		"nativeSrc": "3439:74:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3429:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:853:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:16",
														"nodeType": "YulTypedName",
														"src": "2753:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2764:7:16",
														"nodeType": "YulTypedName",
														"src": "2764:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2776:6:16",
														"nodeType": "YulTypedName",
														"src": "2776:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2784:6:16",
														"nodeType": "YulTypedName",
														"src": "2784:6:16",
														"type": ""
													}
												],
												"src": "2677:853:16"
											},
											{
												"body": {
													"nativeSrc": "3595:40:16",
													"nodeType": "YulBlock",
													"src": "3595:40:16",
													"statements": [
														{
															"nativeSrc": "3606:22:16",
															"nodeType": "YulAssignment",
															"src": "3606:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3622:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3616:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:16"
																},
																"nativeSrc": "3616:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3616:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3606:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3536:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:16",
														"nodeType": "YulTypedName",
														"src": "3578:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3588:6:16",
														"nodeType": "YulTypedName",
														"src": "3588:6:16",
														"type": ""
													}
												],
												"src": "3536:99:16"
											},
											{
												"body": {
													"nativeSrc": "3669:152:16",
													"nodeType": "YulBlock",
													"src": "3669:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3686:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:77:16",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3679:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:16"
																},
																"nativeSrc": "3679:88:16",
																"nodeType": "YulFunctionCall",
																"src": "3679:88:16"
															},
															"nativeSrc": "3679:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3776:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:16"
																},
																"nativeSrc": "3776:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3776:15:16"
															},
															"nativeSrc": "3776:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3807:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3800:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:16"
																},
																"nativeSrc": "3800:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3800:15:16"
															},
															"nativeSrc": "3800:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3641:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:16"
											},
											{
												"body": {
													"nativeSrc": "3878:269:16",
													"nodeType": "YulBlock",
													"src": "3878:269:16",
													"statements": [
														{
															"nativeSrc": "3888:22:16",
															"nodeType": "YulAssignment",
															"src": "3888:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3902:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3898:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:16"
																},
																"nativeSrc": "3898:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3888:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:16"
																}
															]
														},
														{
															"nativeSrc": "3919:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3949:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3955:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3945:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:16"
																},
																"nativeSrc": "3945:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3923:18:16",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3996:51:16",
																"nodeType": "YulBlock",
																"src": "3996:51:16",
																"statements": [
																	{
																		"nativeSrc": "4010:27:16",
																		"nodeType": "YulAssignment",
																		"src": "4010:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4024:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4032:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4020:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:16"
																			},
																			"nativeSrc": "4020:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4010:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3976:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3969:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:16"
																},
																"nativeSrc": "3969:26:16",
																"nodeType": "YulFunctionCall",
																"src": "3969:26:16"
															},
															"nativeSrc": "3966:81:16",
															"nodeType": "YulIf",
															"src": "3966:81:16"
														},
														{
															"body": {
																"nativeSrc": "4099:42:16",
																"nodeType": "YulBlock",
																"src": "4099:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4113:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:16"
																			},
																			"nativeSrc": "4113:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:16"
																		},
																		"nativeSrc": "4113:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4063:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4086:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4094:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4083:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:16"
																		},
																		"nativeSrc": "4083:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4060:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:16"
																},
																"nativeSrc": "4060:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4060:38:16"
															},
															"nativeSrc": "4057:84:16",
															"nodeType": "YulIf",
															"src": "4057:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3827:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3862:4:16",
														"nodeType": "YulTypedName",
														"src": "3862:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3871:6:16",
														"nodeType": "YulTypedName",
														"src": "3871:6:16",
														"type": ""
													}
												],
												"src": "3827:320:16"
											},
											{
												"body": {
													"nativeSrc": "4207:87:16",
													"nodeType": "YulBlock",
													"src": "4207:87:16",
													"statements": [
														{
															"nativeSrc": "4217:11:16",
															"nodeType": "YulAssignment",
															"src": "4217:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "4225:3:16",
																"nodeType": "YulIdentifier",
																"src": "4225:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4217:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4245:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4248:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:16"
																},
																"nativeSrc": "4238:14:16",
																"nodeType": "YulFunctionCall",
																"src": "4238:14:16"
															},
															"nativeSrc": "4238:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:16"
														},
														{
															"nativeSrc": "4261:26:16",
															"nodeType": "YulAssignment",
															"src": "4261:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4282:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4269:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:16"
																},
																"nativeSrc": "4269:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4269:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4261:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4153:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4194:3:16",
														"nodeType": "YulTypedName",
														"src": "4194:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4202:4:16",
														"nodeType": "YulTypedName",
														"src": "4202:4:16",
														"type": ""
													}
												],
												"src": "4153:141:16"
											},
											{
												"body": {
													"nativeSrc": "4344:49:16",
													"nodeType": "YulBlock",
													"src": "4344:49:16",
													"statements": [
														{
															"nativeSrc": "4354:33:16",
															"nodeType": "YulAssignment",
															"src": "4354:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4372:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4379:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:16"
																		},
																		"nativeSrc": "4368:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4364:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:16"
																},
																"nativeSrc": "4364:23:16",
																"nodeType": "YulFunctionCall",
																"src": "4364:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4354:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4300:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4327:5:16",
														"nodeType": "YulTypedName",
														"src": "4327:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4337:6:16",
														"nodeType": "YulTypedName",
														"src": "4337:6:16",
														"type": ""
													}
												],
												"src": "4300:93:16"
											},
											{
												"body": {
													"nativeSrc": "4452:54:16",
													"nodeType": "YulBlock",
													"src": "4452:54:16",
													"statements": [
														{
															"nativeSrc": "4462:37:16",
															"nodeType": "YulAssignment",
															"src": "4462:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4487:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4483:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:16"
																},
																"nativeSrc": "4483:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4483:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4462:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4399:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4427:4:16",
														"nodeType": "YulTypedName",
														"src": "4427:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4433:5:16",
														"nodeType": "YulTypedName",
														"src": "4433:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4443:8:16",
														"nodeType": "YulTypedName",
														"src": "4443:8:16",
														"type": ""
													}
												],
												"src": "4399:107:16"
											},
											{
												"body": {
													"nativeSrc": "4588:317:16",
													"nodeType": "YulBlock",
													"src": "4588:317:16",
													"statements": [
														{
															"nativeSrc": "4598:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4619:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4615:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:16"
																},
																"nativeSrc": "4615:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4615:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4602:9:16",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4642:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4673:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4684:66:16",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4654:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:16"
																},
																"nativeSrc": "4654:97:16",
																"nodeType": "YulFunctionCall",
																"src": "4654:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4646:4:16",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4760:51:16",
															"nodeType": "YulAssignment",
															"src": "4760:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4791:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4802:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4772:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:16"
																},
																"nativeSrc": "4772:39:16",
																"nodeType": "YulFunctionCall",
																"src": "4772:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4760:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:16"
																}
															]
														},
														{
															"nativeSrc": "4820:30:16",
															"nodeType": "YulAssignment",
															"src": "4820:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4833:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4844:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:16"
																		},
																		"nativeSrc": "4840:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4829:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:16"
																},
																"nativeSrc": "4829:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4829:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4820:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:16"
																}
															]
														},
														{
															"nativeSrc": "4859:40:16",
															"nodeType": "YulAssignment",
															"src": "4859:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4872:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4883:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4893:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4879:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:16"
																		},
																		"nativeSrc": "4879:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4869:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:16"
																},
																"nativeSrc": "4869:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4869:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4859:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4512:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4549:5:16",
														"nodeType": "YulTypedName",
														"src": "4549:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4556:10:16",
														"nodeType": "YulTypedName",
														"src": "4556:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4568:8:16",
														"nodeType": "YulTypedName",
														"src": "4568:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4581:6:16",
														"nodeType": "YulTypedName",
														"src": "4581:6:16",
														"type": ""
													}
												],
												"src": "4512:393:16"
											},
											{
												"body": {
													"nativeSrc": "4956:32:16",
													"nodeType": "YulBlock",
													"src": "4956:32:16",
													"statements": [
														{
															"nativeSrc": "4966:16:16",
															"nodeType": "YulAssignment",
															"src": "4966:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "4977:5:16",
																"nodeType": "YulIdentifier",
																"src": "4977:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4966:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4911:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4938:5:16",
														"nodeType": "YulTypedName",
														"src": "4938:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4948:7:16",
														"nodeType": "YulTypedName",
														"src": "4948:7:16",
														"type": ""
													}
												],
												"src": "4911:77:16"
											},
											{
												"body": {
													"nativeSrc": "5026:28:16",
													"nodeType": "YulBlock",
													"src": "5026:28:16",
													"statements": [
														{
															"nativeSrc": "5036:12:16",
															"nodeType": "YulAssignment",
															"src": "5036:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "5043:5:16",
																"nodeType": "YulIdentifier",
																"src": "5043:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5036:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4994:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5012:5:16",
														"nodeType": "YulTypedName",
														"src": "5012:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5022:3:16",
														"nodeType": "YulTypedName",
														"src": "5022:3:16",
														"type": ""
													}
												],
												"src": "4994:60:16"
											},
											{
												"body": {
													"nativeSrc": "5120:82:16",
													"nodeType": "YulBlock",
													"src": "5120:82:16",
													"statements": [
														{
															"nativeSrc": "5130:66:16",
															"nodeType": "YulAssignment",
															"src": "5130:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5188:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5170:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:16"
																				},
																				"nativeSrc": "5170:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5161:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:16"
																		},
																		"nativeSrc": "5161:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:16"
																},
																"nativeSrc": "5143:53:16",
																"nodeType": "YulFunctionCall",
																"src": "5143:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5130:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5060:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:16",
														"nodeType": "YulTypedName",
														"src": "5100:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5110:9:16",
														"nodeType": "YulTypedName",
														"src": "5110:9:16",
														"type": ""
													}
												],
												"src": "5060:142:16"
											},
											{
												"body": {
													"nativeSrc": "5255:28:16",
													"nodeType": "YulBlock",
													"src": "5255:28:16",
													"statements": [
														{
															"nativeSrc": "5265:12:16",
															"nodeType": "YulAssignment",
															"src": "5265:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "5272:5:16",
																"nodeType": "YulIdentifier",
																"src": "5272:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5265:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5208:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:16",
														"nodeType": "YulTypedName",
														"src": "5241:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5251:3:16",
														"nodeType": "YulTypedName",
														"src": "5251:3:16",
														"type": ""
													}
												],
												"src": "5208:75:16"
											},
											{
												"body": {
													"nativeSrc": "5365:193:16",
													"nodeType": "YulBlock",
													"src": "5365:193:16",
													"statements": [
														{
															"nativeSrc": "5375:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5430:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5399:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:16"
																},
																"nativeSrc": "5399:39:16",
																"nodeType": "YulFunctionCall",
																"src": "5399:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5379:16:16",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5454:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5494:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5488:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:16"
																				},
																				"nativeSrc": "5488:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5501:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5533:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5509:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:16"
																				},
																				"nativeSrc": "5509:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5460:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:16"
																		},
																		"nativeSrc": "5460:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5447:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:16"
																},
																"nativeSrc": "5447:105:16",
																"nodeType": "YulFunctionCall",
																"src": "5447:105:16"
															},
															"nativeSrc": "5447:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5289:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5342:4:16",
														"nodeType": "YulTypedName",
														"src": "5342:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5348:6:16",
														"nodeType": "YulTypedName",
														"src": "5348:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5356:7:16",
														"nodeType": "YulTypedName",
														"src": "5356:7:16",
														"type": ""
													}
												],
												"src": "5289:269:16"
											},
											{
												"body": {
													"nativeSrc": "5613:24:16",
													"nodeType": "YulBlock",
													"src": "5613:24:16",
													"statements": [
														{
															"nativeSrc": "5623:8:16",
															"nodeType": "YulAssignment",
															"src": "5623:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5630:1:16",
																"nodeType": "YulLiteral",
																"src": "5630:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5623:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5564:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5609:3:16",
														"nodeType": "YulTypedName",
														"src": "5609:3:16",
														"type": ""
													}
												],
												"src": "5564:73:16"
											},
											{
												"body": {
													"nativeSrc": "5696:136:16",
													"nodeType": "YulBlock",
													"src": "5696:136:16",
													"statements": [
														{
															"nativeSrc": "5706:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5720:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:16"
																},
																"nativeSrc": "5720:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5720:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5710:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5805:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5811:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5819:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5761:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:16"
																},
																"nativeSrc": "5761:65:16",
																"nodeType": "YulFunctionCall",
																"src": "5761:65:16"
															},
															"nativeSrc": "5761:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5643:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5682:4:16",
														"nodeType": "YulTypedName",
														"src": "5682:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5688:6:16",
														"nodeType": "YulTypedName",
														"src": "5688:6:16",
														"type": ""
													}
												],
												"src": "5643:189:16"
											},
											{
												"body": {
													"nativeSrc": "5888:136:16",
													"nodeType": "YulBlock",
													"src": "5888:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5955:63:16",
																"nodeType": "YulBlock",
																"src": "5955:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5999:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6006:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5969:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:16"
																			},
																			"nativeSrc": "5969:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:16"
																		},
																		"nativeSrc": "5969:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5908:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5915:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5905:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:16"
																},
																"nativeSrc": "5905:14:16",
																"nodeType": "YulFunctionCall",
																"src": "5905:14:16"
															},
															"nativeSrc": "5898:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5920:26:16",
																"nodeType": "YulBlock",
																"src": "5920:26:16",
																"statements": [
																	{
																		"nativeSrc": "5922:22:16",
																		"nodeType": "YulAssignment",
																		"src": "5922:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5935:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5942:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5931:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:16"
																			},
																			"nativeSrc": "5931:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5922:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5902:2:16",
																"nodeType": "YulBlock",
																"src": "5902:2:16",
																"statements": []
															},
															"src": "5898:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5838:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5876:5:16",
														"nodeType": "YulTypedName",
														"src": "5876:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5883:3:16",
														"nodeType": "YulTypedName",
														"src": "5883:3:16",
														"type": ""
													}
												],
												"src": "5838:186:16"
											},
											{
												"body": {
													"nativeSrc": "6109:464:16",
													"nodeType": "YulBlock",
													"src": "6109:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6135:431:16",
																"nodeType": "YulBlock",
																"src": "6135:431:16",
																"statements": [
																	{
																		"nativeSrc": "6149:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6197:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6165:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:16"
																			},
																			"nativeSrc": "6165:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6153:8:16",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6216:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6239:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6267:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6249:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:16"
																					},
																					"nativeSrc": "6249:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6235:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:16"
																			},
																			"nativeSrc": "6235:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6220:11:16",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6436:27:16",
																			"nodeType": "YulBlock",
																			"src": "6436:27:16",
																			"statements": [
																				{
																					"nativeSrc": "6438:23:16",
																					"nodeType": "YulAssignment",
																					"src": "6438:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6453:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6438:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6420:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6432:2:16",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6417:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:16"
																			},
																			"nativeSrc": "6417:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:16"
																		},
																		"nativeSrc": "6414:49:16",
																		"nodeType": "YulIf",
																		"src": "6414:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6505:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6522:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6550:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6532:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:16"
																							},
																							"nativeSrc": "6532:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6518:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:16"
																					},
																					"nativeSrc": "6518:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6476:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:16"
																			},
																			"nativeSrc": "6476:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:16"
																		},
																		"nativeSrc": "6476:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6126:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6131:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6123:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:16"
																},
																"nativeSrc": "6123:11:16",
																"nodeType": "YulFunctionCall",
																"src": "6123:11:16"
															},
															"nativeSrc": "6120:446:16",
															"nodeType": "YulIf",
															"src": "6120:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6030:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6085:5:16",
														"nodeType": "YulTypedName",
														"src": "6085:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6092:3:16",
														"nodeType": "YulTypedName",
														"src": "6092:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6097:10:16",
														"nodeType": "YulTypedName",
														"src": "6097:10:16",
														"type": ""
													}
												],
												"src": "6030:543:16"
											},
											{
												"body": {
													"nativeSrc": "6642:54:16",
													"nodeType": "YulBlock",
													"src": "6642:54:16",
													"statements": [
														{
															"nativeSrc": "6652:37:16",
															"nodeType": "YulAssignment",
															"src": "6652:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6677:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6683:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6673:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:16"
																},
																"nativeSrc": "6673:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6673:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6652:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6579:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6617:4:16",
														"nodeType": "YulTypedName",
														"src": "6617:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6623:5:16",
														"nodeType": "YulTypedName",
														"src": "6623:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6633:8:16",
														"nodeType": "YulTypedName",
														"src": "6633:8:16",
														"type": ""
													}
												],
												"src": "6579:117:16"
											},
											{
												"body": {
													"nativeSrc": "6753:118:16",
													"nodeType": "YulBlock",
													"src": "6753:118:16",
													"statements": [
														{
															"nativeSrc": "6763:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6812:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6815:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6808:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:16"
																				},
																				"nativeSrc": "6808:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6827:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6823:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:16"
																				},
																				"nativeSrc": "6823:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6779:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:16"
																		},
																		"nativeSrc": "6779:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6775:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:16"
																},
																"nativeSrc": "6775:56:16",
																"nodeType": "YulFunctionCall",
																"src": "6775:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6767:4:16",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6840:25:16",
															"nodeType": "YulAssignment",
															"src": "6840:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6854:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6860:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6850:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:16"
																},
																"nativeSrc": "6850:15:16",
																"nodeType": "YulFunctionCall",
																"src": "6850:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6840:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6702:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6730:4:16",
														"nodeType": "YulTypedName",
														"src": "6730:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6736:5:16",
														"nodeType": "YulTypedName",
														"src": "6736:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6746:6:16",
														"nodeType": "YulTypedName",
														"src": "6746:6:16",
														"type": ""
													}
												],
												"src": "6702:169:16"
											},
											{
												"body": {
													"nativeSrc": "6957:214:16",
													"nodeType": "YulBlock",
													"src": "6957:214:16",
													"statements": [
														{
															"nativeSrc": "7090:37:16",
															"nodeType": "YulAssignment",
															"src": "7090:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7117:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7098:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:16"
																},
																"nativeSrc": "7098:29:16",
																"nodeType": "YulFunctionCall",
																"src": "7098:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7090:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:16"
																}
															]
														},
														{
															"nativeSrc": "7136:29:16",
															"nodeType": "YulAssignment",
															"src": "7136:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7147:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7157:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7160:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7153:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:16"
																		},
																		"nativeSrc": "7153:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7144:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:16"
																},
																"nativeSrc": "7144:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7144:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7136:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6876:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6938:4:16",
														"nodeType": "YulTypedName",
														"src": "6938:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6944:3:16",
														"nodeType": "YulTypedName",
														"src": "6944:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6952:4:16",
														"nodeType": "YulTypedName",
														"src": "6952:4:16",
														"type": ""
													}
												],
												"src": "6876:295:16"
											},
											{
												"body": {
													"nativeSrc": "7268:1303:16",
													"nodeType": "YulBlock",
													"src": "7268:1303:16",
													"statements": [
														{
															"nativeSrc": "7279:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7326:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7293:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:16"
																},
																"nativeSrc": "7293:37:16",
																"nodeType": "YulFunctionCall",
																"src": "7293:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7283:6:16",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7415:22:16",
																"nodeType": "YulBlock",
																"src": "7415:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7417:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:16"
																			},
																			"nativeSrc": "7417:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:16"
																		},
																		"nativeSrc": "7417:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7387:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:18:16",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7384:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:16"
																},
																"nativeSrc": "7384:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7384:30:16"
															},
															"nativeSrc": "7381:56:16",
															"nodeType": "YulIf",
															"src": "7381:56:16"
														},
														{
															"nativeSrc": "7447:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7493:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7487:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:16"
																		},
																		"nativeSrc": "7487:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7461:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:16"
																},
																"nativeSrc": "7461:38:16",
																"nodeType": "YulFunctionCall",
																"src": "7461:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7451:6:16",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7592:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7598:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7606:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7546:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:16"
																},
																"nativeSrc": "7546:67:16",
																"nodeType": "YulFunctionCall",
																"src": "7546:67:16"
															},
															"nativeSrc": "7546:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:16"
														},
														{
															"nativeSrc": "7623:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "7640:1:16",
																"nodeType": "YulLiteral",
																"src": "7640:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7627:9:16",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7651:17:16",
															"nodeType": "YulAssignment",
															"src": "7651:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "7664:4:16",
																"nodeType": "YulLiteral",
																"src": "7664:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7651:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7715:611:16",
																		"nodeType": "YulBlock",
																		"src": "7715:611:16",
																		"statements": [
																			{
																				"nativeSrc": "7729:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7748:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7760:4:16",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7756:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:16"
																							},
																							"nativeSrc": "7756:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7744:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:16"
																					},
																					"nativeSrc": "7744:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7733:7:16",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7780:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7826:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7794:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:16"
																					},
																					"nativeSrc": "7794:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7784:6:16",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7844:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7853:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7848:1:16",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7912:163:16",
																					"nodeType": "YulBlock",
																					"src": "7912:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7937:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7955:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7960:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7951:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:16"
																												},
																												"nativeSrc": "7951:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7945:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:16"
																										},
																										"nativeSrc": "7945:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7930:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:16"
																								},
																								"nativeSrc": "7930:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:16"
																							},
																							"nativeSrc": "7930:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:16"
																						},
																						{
																							"nativeSrc": "7989:24:16",
																							"nodeType": "YulAssignment",
																							"src": "7989:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8003:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8011:1:16",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7999:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:16"
																								},
																								"nativeSrc": "7999:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7989:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8030:31:16",
																							"nodeType": "YulAssignment",
																							"src": "8030:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8047:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8058:2:16",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8043:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:16"
																								},
																								"nativeSrc": "8043:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8030:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7878:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7881:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7875:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:16"
																					},
																					"nativeSrc": "7875:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:16"
																				},
																				"nativeSrc": "7867:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7890:21:16",
																					"nodeType": "YulBlock",
																					"src": "7890:21:16",
																					"statements": [
																						{
																							"nativeSrc": "7892:17:16",
																							"nodeType": "YulAssignment",
																							"src": "7892:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7901:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:4:16",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7897:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:16"
																								},
																								"nativeSrc": "7897:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7892:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7871:3:16",
																					"nodeType": "YulBlock",
																					"src": "7871:3:16",
																					"statements": []
																				},
																				"src": "7867:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "8111:156:16",
																					"nodeType": "YulBlock",
																					"src": "8111:156:16",
																					"statements": [
																						{
																							"nativeSrc": "8129:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8156:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8161:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8152:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:16"
																										},
																										"nativeSrc": "8152:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8146:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:16"
																								},
																								"nativeSrc": "8146:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8133:9:16",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8196:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8223:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8238:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8246:4:16",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8234:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:16"
																												},
																												"nativeSrc": "8234:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8204:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:16"
																										},
																										"nativeSrc": "8204:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8189:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:16"
																								},
																								"nativeSrc": "8189:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:16"
																							},
																							"nativeSrc": "8189:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8094:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8103:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8091:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:16"
																					},
																					"nativeSrc": "8091:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:16"
																				},
																				"nativeSrc": "8088:179:16",
																				"nodeType": "YulIf",
																				"src": "8088:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8287:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8301:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8309:1:16",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8297:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:16"
																									},
																									"nativeSrc": "8297:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8313:1:16",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8293:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:16"
																							},
																							"nativeSrc": "8293:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8280:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:16"
																					},
																					"nativeSrc": "8280:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:16"
																				},
																				"nativeSrc": "8280:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:16"
																			}
																		]
																	},
																	"nativeSrc": "7708:618:16",
																	"nodeType": "YulCase",
																	"src": "7708:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7713:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8343:222:16",
																		"nodeType": "YulBlock",
																		"src": "8343:222:16",
																		"statements": [
																			{
																				"nativeSrc": "8357:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:16",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8361:5:16",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8394:67:16",
																					"nodeType": "YulBlock",
																					"src": "8394:67:16",
																					"statements": [
																						{
																							"nativeSrc": "8412:35:16",
																							"nodeType": "YulAssignment",
																							"src": "8412:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8431:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8436:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8427:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:16"
																										},
																										"nativeSrc": "8427:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8421:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:16"
																								},
																								"nativeSrc": "8421:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8412:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8387:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:16"
																				},
																				"nativeSrc": "8384:77:16",
																				"nodeType": "YulIf",
																				"src": "8384:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8481:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8540:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8547:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8487:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:16"
																							},
																							"nativeSrc": "8487:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8474:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:16"
																					},
																					"nativeSrc": "8474:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:16"
																				},
																				"nativeSrc": "8474:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:16"
																			}
																		]
																	},
																	"nativeSrc": "8335:230:16",
																	"nodeType": "YulCase",
																	"src": "8335:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7688:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7685:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:16"
																},
																"nativeSrc": "7685:14:16",
																"nodeType": "YulFunctionCall",
																"src": "7685:14:16"
															},
															"nativeSrc": "7678:887:16",
															"nodeType": "YulSwitch",
															"src": "7678:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7176:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7257:4:16",
														"nodeType": "YulTypedName",
														"src": "7257:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7263:3:16",
														"nodeType": "YulTypedName",
														"src": "7263:3:16",
														"type": ""
													}
												],
												"src": "7176:1395:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620028f0380380620028f08339818101604052810190620000369190620001ea565b8181815f9081620000489190620004a4565b5080600190816200005a9190620004a4565b505050505062000588565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c6826200007e565b810181811067ffffffffffffffff82111715620000e857620000e76200008e565b5b80604052505050565b5f620000fc62000065565b90506200010a8282620000bb565b919050565b5f67ffffffffffffffff8211156200012c576200012b6200008e565b5b62000137826200007e565b9050602081019050919050565b5f5b838110156200016357808201518184015260208101905062000146565b5f8484015250505050565b5f620001846200017e846200010f565b620000f1565b905082815260208101848484011115620001a357620001a26200007a565b5b620001b084828562000144565b509392505050565b5f82601f830112620001cf57620001ce62000076565b5b8151620001e18482602086016200016e565b91505092915050565b5f80604083850312156200020357620002026200006e565b5b5f83015167ffffffffffffffff81111562000223576200022262000072565b5b6200023185828601620001b8565b925050602083015167ffffffffffffffff81111562000255576200025462000072565b5b6200026385828601620001b8565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002bc57607f821691505b602082108103620002d257620002d162000277565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002f9565b620003428683620002f9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200038c6200038662000380846200035a565b62000363565b6200035a565b9050919050565b5f819050919050565b620003a7836200036c565b620003bf620003b68262000393565b84845462000305565b825550505050565b5f90565b620003d5620003c7565b620003e28184846200039c565b505050565b5b818110156200040957620003fd5f82620003cb565b600181019050620003e8565b5050565b601f82111562000458576200042281620002d8565b6200042d84620002ea565b810160208510156200043d578190505b620004556200044c85620002ea565b830182620003e7565b50505b505050565b5f82821c905092915050565b5f6200047a5f19846008026200045d565b1980831691505092915050565b5f62000494838362000469565b9150826002028217905092915050565b620004af826200026d565b67ffffffffffffffff811115620004cb57620004ca6200008e565b5b620004d78254620002a4565b620004e48282856200040d565b5f60209050601f8311600181146200051a575f841562000505578287015190505b62000511858262000487565b86555062000580565b601f1984166200052a86620002d8565b5f5b8281101562000553578489015182556001820191506020850194506020810190506200052c565b868310156200057357848901516200056f601f89168262000469565b8355505b6001600288020188555050505b505050505050565b61235a80620005965f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806370a0823111610095578063c754584911610064578063c75458491461027f578063c87b56dd1461029b578063d082e381146102cb578063e985e9c5146102e9576100f3565b806370a08231146101f957806395d89b4114610229578063a22cb46514610247578063b88d4fde14610263576100f3565b8063095ea7b3116100d1578063095ea7b31461017557806323b872dd1461019157806342842e0e146101ad5780636352211e146101c9576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c91906117fe565b610319565b60405161011e9190611843565b60405180910390f35b61012f610379565b60405161013c91906118e6565b60405180910390f35b61015f600480360381019061015a9190611939565b610408565b60405161016c91906119a3565b60405180910390f35b61018f600480360381019061018a91906119e6565b610423565b005b6101ab60048036038101906101a69190611a24565b610439565b005b6101c760048036038101906101c29190611a24565b610538565b005b6101e360048036038101906101de9190611939565b610557565b6040516101f091906119a3565b60405180910390f35b610213600480360381019061020e9190611a74565b610568565b6040516102209190611aae565b60405180910390f35b61023161061e565b60405161023e91906118e6565b60405180910390f35b610261600480360381019061025c9190611af1565b6106ae565b005b61027d60048036038101906102789190611c5b565b6106c4565b005b61029960048036038101906102949190611d79565b6106e1565b005b6102b560048036038101906102b09190611939565b610752565b6040516102c291906118e6565b60405180910390f35b6102d361085d565b6040516102e09190611aae565b60405180910390f35b61030360048036038101906102fe9190611dc0565b610863565b6040516103109190611843565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103725750610371826108f1565b5b9050919050565b60605f805461038790611e2b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390611e2b565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b5050505050905090565b5f610412826109d2565b5061041c82610a58565b9050919050565b6104358282610430610a91565b610a98565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104a091906119a3565b60405180910390fd5b5f6104bc83836104b7610a91565b610aaa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610532578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052993929190611e5b565b60405180910390fd5b50505050565b61055283838360405180602001604052805f8152506106c4565b505050565b5f610561826109d2565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d9575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105d091906119a3565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461062d90611e2b565b80601f016020809104026020016040519081016040528092919081815260200182805461065990611e2b565b80156106a45780601f1061067b576101008083540402835291602001916106a4565b820191905f5260205f20905b81548152906001019060200180831161068757829003601f168201915b5050505050905090565b6106c06106b9610a91565b8383610cb5565b5050565b6106cf848484610439565b6106db84848484610e1e565b50505050565b6106ed33600754610fd0565b6106f9600754826110c3565b7f899b99f6c26ce7a463fc72a3a36ae78b414dae9cfa6e88e8580ec708e70f30b0336007548360405161072e93929190611e90565b60405180910390a1600160075f8282546107489190611ef9565b9250508190555050565b606061075d826109d2565b505f60065f8481526020019081526020015f20805461077b90611e2b565b80601f01602080910402602001604051908101604052809291908181526020018280546107a790611e2b565b80156107f25780601f106107c9576101008083540402835291602001916107f2565b820191905f5260205f20905b8154815290600101906020018083116107d557829003601f168201915b505050505090505f61080261111d565b90505f815103610816578192505050610858565b5f8251111561084a578082604051602001610832929190611f66565b60405160208183030381529060405292505050610858565b61085384611133565b925050505b919050565b60075481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109bb57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109cb57506109ca82611199565b5b9050919050565b5f806109dd83611202565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a469190611aae565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610aa5838383600161123b565b505050565b5f80610ab584611202565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610af657610af58184866113fa565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b8157610b355f855f8061123b565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c0057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d2557816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d1c91906119a3565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e119190611843565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610fca578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e61610a91565b8685856040518563ffffffff1660e01b8152600401610e839493929190611fdb565b6020604051808303815f875af1925050508015610ebe57506040513d601f19601f82011682018060405250810190610ebb9190612039565b60015b610f3f573d805f8114610eec576040519150601f19603f3d011682016040523d82523d5f602084013e610ef1565b606091505b505f815103610f3757836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f2e91906119a3565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610fc857836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fbf91906119a3565b60405180910390fd5b505b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611040575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161103791906119a3565b60405180910390fd5b5f61104c83835f610aaa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110be575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016110b591906119a3565b60405180910390fd5b505050565b8060065f8481526020019081526020015f2090816110e19190612201565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111119190611aae565b60405180910390a15050565b606060405180602001604052805f815250905090565b606061113e826109d2565b505f61114861111d565b90505f8151116111665760405180602001604052805f815250611191565b80611170846114bd565b604051602001611181929190611f66565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061127357505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113a5575f611282846109d2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156112ec57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156112ff57506112fd8184610863565b155b1561134157826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161133891906119a3565b60405180910390fd5b81156113a357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611405838383611587565b6114b8575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361147957806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114709190611aae565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016114af9291906122d0565b60405180910390fd5b505050565b60605f60016114cb84611647565b0190505f8167ffffffffffffffff8111156114e9576114e8611b37565b5b6040519080825280601f01601f19166020018201604052801561151b5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561157c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611571576115706122f7565b5b0494505f8503611528575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561163e57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115ff57506115fe8484610863565b5b8061163d57508273ffffffffffffffffffffffffffffffffffffffff1661162583610a58565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106116a3577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611699576116986122f7565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116e0576d04ee2d6d415b85acef810000000083816116d6576116d56122f7565b5b0492506020810190505b662386f26fc10000831061170f57662386f26fc100008381611705576117046122f7565b5b0492506010810190505b6305f5e1008310611738576305f5e100838161172e5761172d6122f7565b5b0492506008810190505b612710831061175d576127108381611753576117526122f7565b5b0492506004810190505b606483106117805760648381611776576117756122f7565b5b0492506002810190505b600a831061178f576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117dd816117a9565b81146117e7575f80fd5b50565b5f813590506117f8816117d4565b92915050565b5f60208284031215611813576118126117a1565b5b5f611820848285016117ea565b91505092915050565b5f8115159050919050565b61183d81611829565b82525050565b5f6020820190506118565f830184611834565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611893578082015181840152602081019050611878565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118b88261185c565b6118c28185611866565b93506118d2818560208601611876565b6118db8161189e565b840191505092915050565b5f6020820190508181035f8301526118fe81846118ae565b905092915050565b5f819050919050565b61191881611906565b8114611922575f80fd5b50565b5f813590506119338161190f565b92915050565b5f6020828403121561194e5761194d6117a1565b5b5f61195b84828501611925565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61198d82611964565b9050919050565b61199d81611983565b82525050565b5f6020820190506119b65f830184611994565b92915050565b6119c581611983565b81146119cf575f80fd5b50565b5f813590506119e0816119bc565b92915050565b5f80604083850312156119fc576119fb6117a1565b5b5f611a09858286016119d2565b9250506020611a1a85828601611925565b9150509250929050565b5f805f60608486031215611a3b57611a3a6117a1565b5b5f611a48868287016119d2565b9350506020611a59868287016119d2565b9250506040611a6a86828701611925565b9150509250925092565b5f60208284031215611a8957611a886117a1565b5b5f611a96848285016119d2565b91505092915050565b611aa881611906565b82525050565b5f602082019050611ac15f830184611a9f565b92915050565b611ad081611829565b8114611ada575f80fd5b50565b5f81359050611aeb81611ac7565b92915050565b5f8060408385031215611b0757611b066117a1565b5b5f611b14858286016119d2565b9250506020611b2585828601611add565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b6d8261189e565b810181811067ffffffffffffffff82111715611b8c57611b8b611b37565b5b80604052505050565b5f611b9e611798565b9050611baa8282611b64565b919050565b5f67ffffffffffffffff821115611bc957611bc8611b37565b5b611bd28261189e565b9050602081019050919050565b828183375f83830152505050565b5f611bff611bfa84611baf565b611b95565b905082815260208101848484011115611c1b57611c1a611b33565b5b611c26848285611bdf565b509392505050565b5f82601f830112611c4257611c41611b2f565b5b8135611c52848260208601611bed565b91505092915050565b5f805f8060808587031215611c7357611c726117a1565b5b5f611c80878288016119d2565b9450506020611c91878288016119d2565b9350506040611ca287828801611925565b925050606085013567ffffffffffffffff811115611cc357611cc26117a5565b5b611ccf87828801611c2e565b91505092959194509250565b5f67ffffffffffffffff821115611cf557611cf4611b37565b5b611cfe8261189e565b9050602081019050919050565b5f611d1d611d1884611cdb565b611b95565b905082815260208101848484011115611d3957611d38611b33565b5b611d44848285611bdf565b509392505050565b5f82601f830112611d6057611d5f611b2f565b5b8135611d70848260208601611d0b565b91505092915050565b5f60208284031215611d8e57611d8d6117a1565b5b5f82013567ffffffffffffffff811115611dab57611daa6117a5565b5b611db784828501611d4c565b91505092915050565b5f8060408385031215611dd657611dd56117a1565b5b5f611de3858286016119d2565b9250506020611df4858286016119d2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e4257607f821691505b602082108103611e5557611e54611dfe565b5b50919050565b5f606082019050611e6e5f830186611994565b611e7b6020830185611a9f565b611e886040830184611994565b949350505050565b5f606082019050611ea35f830186611994565b611eb06020830185611a9f565b8181036040830152611ec281846118ae565b9050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0382611906565b9150611f0e83611906565b9250828201905080821115611f2657611f25611ecc565b5b92915050565b5f81905092915050565b5f611f408261185c565b611f4a8185611f2c565b9350611f5a818560208601611876565b80840191505092915050565b5f611f718285611f36565b9150611f7d8284611f36565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611fad82611f89565b611fb78185611f93565b9350611fc7818560208601611876565b611fd08161189e565b840191505092915050565b5f608082019050611fee5f830187611994565b611ffb6020830186611994565b6120086040830185611a9f565b818103606083015261201a8184611fa3565b905095945050505050565b5f81519050612033816117d4565b92915050565b5f6020828403121561204e5761204d6117a1565b5b5f61205b84828501612025565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612085565b6120ca8683612085565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6121056121006120fb84611906565b6120e2565b611906565b9050919050565b5f819050919050565b61211e836120eb565b61213261212a8261210c565b848454612091565b825550505050565b5f90565b61214661213a565b612151818484612115565b505050565b5b81811015612174576121695f8261213e565b600181019050612157565b5050565b601f8211156121b95761218a81612064565b61219384612076565b810160208510156121a2578190505b6121b66121ae85612076565b830182612156565b50505b505050565b5f82821c905092915050565b5f6121d95f19846008026121be565b1980831691505092915050565b5f6121f183836121ca565b9150826002028217905092915050565b61220a8261185c565b67ffffffffffffffff81111561222357612222611b37565b5b61222d8254611e2b565b612238828285612178565b5f60209050601f831160018114612269575f8415612257578287015190505b61226185826121e6565b8655506122c8565b601f19841661227786612064565b5f5b8281101561229e57848901518255600182019150602085019450602081019050612279565b868310156122bb57848901516122b7601f8916826121ca565b8355505b6001600288020188555050505b505050505050565b5f6040820190506122e35f830185611994565b6122f06020830184611a9f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212201f2843552e83dca54c2f39d4a4296a1a244fa43468eb29f005b972122e009cfe64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28F0 CODESIZE SUB DUP1 PUSH3 0x28F0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1EA JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4A4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4A4 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x588 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xC6 DUP3 PUSH3 0x7E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE8 JUMPI PUSH3 0xE7 PUSH3 0x8E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFC PUSH3 0x65 JUMP JUMPDEST SWAP1 POP PUSH3 0x10A DUP3 DUP3 PUSH3 0xBB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x12C JUMPI PUSH3 0x12B PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x137 DUP3 PUSH3 0x7E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x163 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x146 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x184 PUSH3 0x17E DUP5 PUSH3 0x10F JUMP JUMPDEST PUSH3 0xF1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x7A JUMP JUMPDEST JUMPDEST PUSH3 0x1B0 DUP5 DUP3 DUP6 PUSH3 0x144 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1CF JUMPI PUSH3 0x1CE PUSH3 0x76 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x203 JUMPI PUSH3 0x202 PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x223 JUMPI PUSH3 0x222 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x231 DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x255 JUMPI PUSH3 0x254 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x263 DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D2 JUMPI PUSH3 0x2D1 PUSH3 0x277 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x336 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2F9 JUMP JUMPDEST PUSH3 0x342 DUP7 DUP4 PUSH3 0x2F9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x38C PUSH3 0x386 PUSH3 0x380 DUP5 PUSH3 0x35A JUMP JUMPDEST PUSH3 0x363 JUMP JUMPDEST PUSH3 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A7 DUP4 PUSH3 0x36C JUMP JUMPDEST PUSH3 0x3BF PUSH3 0x3B6 DUP3 PUSH3 0x393 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x305 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D5 PUSH3 0x3C7 JUMP JUMPDEST PUSH3 0x3E2 DUP2 DUP5 DUP5 PUSH3 0x39C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x409 JUMPI PUSH3 0x3FD PUSH0 DUP3 PUSH3 0x3CB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x458 JUMPI PUSH3 0x422 DUP2 PUSH3 0x2D8 JUMP JUMPDEST PUSH3 0x42D DUP5 PUSH3 0x2EA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x43D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x455 PUSH3 0x44C DUP6 PUSH3 0x2EA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3E7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x47A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x45D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x494 DUP4 DUP4 PUSH3 0x469 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4AF DUP3 PUSH3 0x26D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4CB JUMPI PUSH3 0x4CA PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x4D7 DUP3 SLOAD PUSH3 0x2A4 JUMP JUMPDEST PUSH3 0x4E4 DUP3 DUP3 DUP6 PUSH3 0x40D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x51A JUMPI PUSH0 DUP5 ISZERO PUSH3 0x505 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x511 DUP6 DUP3 PUSH3 0x487 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x580 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x52A DUP7 PUSH3 0x2D8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x553 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x52C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x573 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x56F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x469 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x235A DUP1 PUSH3 0x596 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7545849 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC7545849 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xD082E381 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x263 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D79 JUMP JUMPDEST PUSH2 0x6E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x372 JUMPI POP PUSH2 0x371 DUP3 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x412 DUP3 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH2 0x41C DUP3 PUSH2 0xA58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x435 DUP3 DUP3 PUSH2 0x430 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x4B7 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x532 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x561 DUP3 PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x687 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C0 PUSH2 0x6B9 PUSH2 0xA91 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6CF DUP5 DUP5 DUP5 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x6DB DUP5 DUP5 DUP5 DUP5 PUSH2 0xE1E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6ED CALLER PUSH1 0x7 SLOAD PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x6F9 PUSH1 0x7 SLOAD DUP3 PUSH2 0x10C3 JUMP JUMPDEST PUSH32 0x899B99F6C26CE7A463FC72A3A36AE78B414DAE9CFA6E88E8580EC708E70F30B0 CALLER PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x72E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x75D DUP3 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x77B SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x802 PUSH2 0x111D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x816 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x858 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x84A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x832 SWAP3 SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x858 JUMP JUMPDEST PUSH2 0x853 DUP5 PUSH2 0x1133 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9BB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x9CB JUMPI POP PUSH2 0x9CA DUP3 PUSH2 0x1199 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9DD DUP4 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAA5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x123B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAB5 DUP5 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF6 JUMPI PUSH2 0xAF5 DUP2 DUP5 DUP7 PUSH2 0x13FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB35 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC00 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD25 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xFCA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xE61 PUSH2 0xA91 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEBE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF3F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xF37 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xFC8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1040 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x104C DUP4 DUP4 PUSH0 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x2201 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113E DUP3 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH0 PUSH2 0x1148 PUSH2 0x111D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1191 JUMP JUMPDEST DUP1 PUSH2 0x1170 DUP5 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1181 SWAP3 SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1273 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x13A5 JUMPI PUSH0 PUSH2 0x1282 DUP5 PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x12EC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x12FF JUMPI POP PUSH2 0x12FD DUP2 DUP5 PUSH2 0x863 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1341 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1338 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x13A3 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1405 DUP4 DUP4 DUP4 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x14B8 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1479 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP3 SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x14CB DUP5 PUSH2 0x1647 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E9 JUMPI PUSH2 0x14E8 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x151B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x157C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1528 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x163E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x15FF JUMPI POP PUSH2 0x15FE DUP5 DUP5 PUSH2 0x863 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x163D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1625 DUP4 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16A3 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1699 JUMPI PUSH2 0x1698 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16E0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x16D6 JUMPI PUSH2 0x16D5 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x170F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1738 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x175D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1780 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x178F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DD DUP2 PUSH2 0x17A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F8 DUP2 PUSH2 0x17D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1812 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1820 DUP5 DUP3 DUP6 ADD PUSH2 0x17EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183D DUP2 PUSH2 0x1829 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1856 PUSH0 DUP4 ADD DUP5 PUSH2 0x1834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1893 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1878 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B8 DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x18C2 DUP2 DUP6 PUSH2 0x1866 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1918 DUP2 PUSH2 0x1906 JUMP JUMPDEST DUP2 EQ PUSH2 0x1922 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1933 DUP2 PUSH2 0x190F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194E JUMPI PUSH2 0x194D PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195B DUP5 DUP3 DUP6 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x198D DUP3 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199D DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19C5 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP2 EQ PUSH2 0x19CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E0 DUP2 PUSH2 0x19BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A09 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A1A DUP6 DUP3 DUP7 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A48 DUP7 DUP3 DUP8 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A59 DUP7 DUP3 DUP8 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6A DUP7 DUP3 DUP8 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A89 JUMPI PUSH2 0x1A88 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A96 DUP5 DUP3 DUP6 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA8 DUP2 PUSH2 0x1906 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD0 DUP2 PUSH2 0x1829 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AEB DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH2 0x1B06 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B14 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B25 DUP6 DUP3 DUP7 ADD PUSH2 0x1ADD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B6D DUP3 PUSH2 0x189E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B8C JUMPI PUSH2 0x1B8B PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9E PUSH2 0x1798 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BAA DUP3 DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD2 DUP3 PUSH2 0x189E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFF PUSH2 0x1BFA DUP5 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1B33 JUMP JUMPDEST JUMPDEST PUSH2 0x1C26 DUP5 DUP3 DUP6 PUSH2 0x1BDF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C52 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C73 JUMPI PUSH2 0x1C72 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C80 DUP8 DUP3 DUP9 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C91 DUP8 DUP3 DUP9 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CA2 DUP8 DUP3 DUP9 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC3 JUMPI PUSH2 0x1CC2 PUSH2 0x17A5 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCF DUP8 DUP3 DUP9 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CF5 JUMPI PUSH2 0x1CF4 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH2 0x1CFE DUP3 PUSH2 0x189E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1D PUSH2 0x1D18 DUP5 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D38 PUSH2 0x1B33 JUMP JUMPDEST JUMPDEST PUSH2 0x1D44 DUP5 DUP3 DUP6 PUSH2 0x1BDF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D60 JUMPI PUSH2 0x1D5F PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D70 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x17A5 JUMP JUMPDEST JUMPDEST PUSH2 0x1DB7 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD6 JUMPI PUSH2 0x1DD5 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE3 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF4 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x1DFE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH0 DUP4 ADD DUP7 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1E7B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1994 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EA3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1EB0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A9F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1EC2 DUP2 DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F03 DUP3 PUSH2 0x1906 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0E DUP4 PUSH2 0x1906 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1ECC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F40 DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x1F4A DUP2 DUP6 PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1F5A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1876 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F71 DUP3 DUP6 PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F7D DUP3 DUP5 PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAD DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x1FB7 DUP2 DUP6 PUSH2 0x1F93 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FC7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x1FD0 DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FEE PUSH0 DUP4 ADD DUP8 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1FFB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x2008 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A9F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x201A DUP2 DUP5 PUSH2 0x1FA3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2033 DUP2 PUSH2 0x17D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205B DUP5 DUP3 DUP6 ADD PUSH2 0x2025 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20C0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x20CA DUP7 DUP4 PUSH2 0x2085 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2105 PUSH2 0x2100 PUSH2 0x20FB DUP5 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211E DUP4 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x2132 PUSH2 0x212A DUP3 PUSH2 0x210C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2091 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2146 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x2151 DUP2 DUP5 DUP5 PUSH2 0x2115 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2169 PUSH0 DUP3 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2157 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21B9 JUMPI PUSH2 0x218A DUP2 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x2193 DUP5 PUSH2 0x2076 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21A2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21B6 PUSH2 0x21AE DUP6 PUSH2 0x2076 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2156 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21D9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21BE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F1 DUP4 DUP4 PUSH2 0x21CA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220A DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x2222 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH2 0x222D DUP3 SLOAD PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x2238 DUP3 DUP3 DUP6 PUSH2 0x2178 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2269 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2257 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2261 DUP6 DUP3 PUSH2 0x21E6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2277 DUP7 PUSH2 0x2064 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x229E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2279 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22BB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22B7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21CA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22E3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x22F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A9F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x28 NUMBER SSTORE 0x2E DUP4 0xDC 0xA5 0x4C 0x2F CODECOPY 0xD4 LOG4 0x29 PUSH11 0x1A244FA43468EB29F005B9 PUSH19 0x122E009CFE64736F6C63430008180033000000 ",
							"sourceMap": "143:493:15:-:0;;;310:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;371:4;377:6;1455:5:4;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;310:77:15;;143:493;;7:75:16;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;143:493:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1046": {
									"entryPoint": 4667,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_980": {
									"entryPoint": 2712,
									"id": 980,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_373": {
									"entryPoint": 4381,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_628": {
									"entryPoint": 5114,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1176": {
									"entryPoint": 3614,
									"id": 1176,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_555": {
									"entryPoint": 2648,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_591": {
									"entryPoint": 5511,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_784": {
									"entryPoint": 4048,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1478": {
									"entryPoint": 2705,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_542": {
									"entryPoint": 4610,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1112": {
									"entryPoint": 2514,
									"id": 1112,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1083": {
									"entryPoint": 3253,
									"id": 1083,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1437": {
									"entryPoint": 4291,
									"id": 1437,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_734": {
									"entryPoint": 2730,
									"id": 734,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_389": {
									"entryPoint": 1059,
									"id": 389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_297": {
									"entryPoint": 1384,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_406": {
									"entryPoint": 1032,
									"id": 406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_439": {
									"entryPoint": 2147,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2661": {
									"entryPoint": 5703,
									"id": 2661,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintItem_3001": {
									"entryPoint": 1761,
									"id": 3001,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_319": {
									"entryPoint": 889,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_310": {
									"entryPoint": 1367,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_503": {
									"entryPoint": 1336,
									"id": 503,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_529": {
									"entryPoint": 1732,
									"id": 529,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_422": {
									"entryPoint": 1710,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1361": {
									"entryPoint": 793,
									"id": 1361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1774": {
									"entryPoint": 4505,
									"id": 1774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_269": {
									"entryPoint": 2289,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_328": {
									"entryPoint": 1566,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1564": {
									"entryPoint": 5309,
									"id": 1564,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenCounter_2953": {
									"entryPoint": 2141,
									"id": 2953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_1418": {
									"entryPoint": 1874,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_364": {
									"entryPoint": 4403,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_485": {
									"entryPoint": 1081,
									"id": 485,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8155,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8912,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21631:16",
										"nodeType": "YulBlock",
										"src": "0:21631:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "378:105:16",
													"nodeType": "YulBlock",
													"src": "378:105:16",
													"statements": [
														{
															"nativeSrc": "388:89:16",
															"nodeType": "YulAssignment",
															"src": "388:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:16",
																		"nodeType": "YulLiteral",
																		"src": "410:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:16"
																},
																"nativeSrc": "399:78:16",
																"nodeType": "YulFunctionCall",
																"src": "399:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:16",
														"nodeType": "YulTypedName",
														"src": "360:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:16",
														"nodeType": "YulTypedName",
														"src": "370:7:16",
														"type": ""
													}
												],
												"src": "334:149:16"
											},
											{
												"body": {
													"nativeSrc": "531:78:16",
													"nodeType": "YulBlock",
													"src": "531:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:16",
																"nodeType": "YulBlock",
																"src": "587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:16",
																					"nodeType": "YulLiteral",
																					"src": "596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:16"
																			},
																			"nativeSrc": "589:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:16"
																		},
																		"nativeSrc": "589:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:16"
																				},
																				"nativeSrc": "561:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:16"
																		},
																		"nativeSrc": "551:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:16"
																},
																"nativeSrc": "544:42:16",
																"nodeType": "YulFunctionCall",
																"src": "544:42:16"
															},
															"nativeSrc": "541:62:16",
															"nodeType": "YulIf",
															"src": "541:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:16",
														"nodeType": "YulTypedName",
														"src": "524:5:16",
														"type": ""
													}
												],
												"src": "489:120:16"
											},
											{
												"body": {
													"nativeSrc": "666:86:16",
													"nodeType": "YulBlock",
													"src": "666:86:16",
													"statements": [
														{
															"nativeSrc": "676:29:16",
															"nodeType": "YulAssignment",
															"src": "676:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:16"
																},
																"nativeSrc": "685:20:16",
																"nodeType": "YulFunctionCall",
																"src": "685:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:16"
																},
																"nativeSrc": "714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "714:32:16"
															},
															"nativeSrc": "714:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:16",
														"nodeType": "YulTypedName",
														"src": "644:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:16",
														"nodeType": "YulTypedName",
														"src": "652:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:16",
														"nodeType": "YulTypedName",
														"src": "660:5:16",
														"type": ""
													}
												],
												"src": "615:137:16"
											},
											{
												"body": {
													"nativeSrc": "823:262:16",
													"nodeType": "YulBlock",
													"src": "823:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:16",
																"nodeType": "YulBlock",
																"src": "869:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:16"
																			},
																			"nativeSrc": "871:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:16"
																		},
																		"nativeSrc": "871:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:16"
																		},
																		"nativeSrc": "840:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:16",
																		"nodeType": "YulLiteral",
																		"src": "865:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:16"
																},
																"nativeSrc": "836:32:16",
																"nodeType": "YulFunctionCall",
																"src": "836:32:16"
															},
															"nativeSrc": "833:119:16",
															"nodeType": "YulIf",
															"src": "833:119:16"
														},
														{
															"nativeSrc": "962:116:16",
															"nodeType": "YulBlock",
															"src": "962:116:16",
															"statements": [
																{
																	"nativeSrc": "977:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:16",
																		"nodeType": "YulLiteral",
																		"src": "991:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:16",
																			"nodeType": "YulTypedName",
																			"src": "981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:16",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:16"
																				},
																				"nativeSrc": "1036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:16"
																		},
																		"nativeSrc": "1016:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:16",
														"nodeType": "YulTypedName",
														"src": "793:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:16",
														"nodeType": "YulTypedName",
														"src": "804:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:16",
														"nodeType": "YulTypedName",
														"src": "816:6:16",
														"type": ""
													}
												],
												"src": "758:327:16"
											},
											{
												"body": {
													"nativeSrc": "1133:48:16",
													"nodeType": "YulBlock",
													"src": "1133:48:16",
													"statements": [
														{
															"nativeSrc": "1143:32:16",
															"nodeType": "YulAssignment",
															"src": "1143:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:16"
																		},
																		"nativeSrc": "1161:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:16"
																},
																"nativeSrc": "1154:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:16",
														"nodeType": "YulTypedName",
														"src": "1115:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:16",
														"nodeType": "YulTypedName",
														"src": "1125:7:16",
														"type": ""
													}
												],
												"src": "1091:90:16"
											},
											{
												"body": {
													"nativeSrc": "1246:50:16",
													"nodeType": "YulBlock",
													"src": "1246:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:16"
																		},
																		"nativeSrc": "1268:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																},
																"nativeSrc": "1256:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:16"
															},
															"nativeSrc": "1256:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:16",
														"nodeType": "YulTypedName",
														"src": "1234:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:16",
														"nodeType": "YulTypedName",
														"src": "1241:3:16",
														"type": ""
													}
												],
												"src": "1187:109:16"
											},
											{
												"body": {
													"nativeSrc": "1394:118:16",
													"nodeType": "YulBlock",
													"src": "1394:118:16",
													"statements": [
														{
															"nativeSrc": "1404:26:16",
															"nodeType": "YulAssignment",
															"src": "1404:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:16"
																},
																"nativeSrc": "1412:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:16"
																		},
																		"nativeSrc": "1487:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:16"
																},
																"nativeSrc": "1440:65:16",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:16"
															},
															"nativeSrc": "1440:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:16",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:16",
														"nodeType": "YulTypedName",
														"src": "1378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:16",
														"nodeType": "YulTypedName",
														"src": "1389:4:16",
														"type": ""
													}
												],
												"src": "1302:210:16"
											},
											{
												"body": {
													"nativeSrc": "1577:40:16",
													"nodeType": "YulBlock",
													"src": "1577:40:16",
													"statements": [
														{
															"nativeSrc": "1588:22:16",
															"nodeType": "YulAssignment",
															"src": "1588:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:16"
																},
																"nativeSrc": "1598:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:16",
														"nodeType": "YulTypedName",
														"src": "1560:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:16",
														"nodeType": "YulTypedName",
														"src": "1570:6:16",
														"type": ""
													}
												],
												"src": "1518:99:16"
											},
											{
												"body": {
													"nativeSrc": "1719:73:16",
													"nodeType": "YulBlock",
													"src": "1719:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:16"
																},
																"nativeSrc": "1729:19:16",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:16"
															},
															"nativeSrc": "1729:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:16"
														},
														{
															"nativeSrc": "1757:29:16",
															"nodeType": "YulAssignment",
															"src": "1757:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:16"
																},
																"nativeSrc": "1772:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:16",
														"nodeType": "YulTypedName",
														"src": "1691:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:16",
														"nodeType": "YulTypedName",
														"src": "1696:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:16",
														"nodeType": "YulTypedName",
														"src": "1707:11:16",
														"type": ""
													}
												],
												"src": "1623:169:16"
											},
											{
												"body": {
													"nativeSrc": "1860:184:16",
													"nodeType": "YulBlock",
													"src": "1860:184:16",
													"statements": [
														{
															"nativeSrc": "1870:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:16",
																"nodeType": "YulLiteral",
																"src": "1879:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:16",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:16",
																"nodeType": "YulBlock",
																"src": "1939:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:16"
																					},
																					"nativeSrc": "1960:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:16"
																							},
																							"nativeSrc": "1979:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:16"
																					},
																					"nativeSrc": "1973:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:16"
																			},
																			"nativeSrc": "1953:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:16"
																		},
																		"nativeSrc": "1953:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:16"
																},
																"nativeSrc": "1897:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:16"
															},
															"nativeSrc": "1889:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:16",
																"nodeType": "YulBlock",
																"src": "1911:19:16",
																"statements": [
																	{
																		"nativeSrc": "1913:15:16",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:16",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:16"
																			},
																			"nativeSrc": "1918:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:16",
																"nodeType": "YulBlock",
																"src": "1893:3:16",
																"statements": []
															},
															"src": "1889:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:16"
																		},
																		"nativeSrc": "2018:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:16"
																},
																"nativeSrc": "2011:27:16",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:16"
															},
															"nativeSrc": "2011:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:16",
														"nodeType": "YulTypedName",
														"src": "1842:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:16",
														"nodeType": "YulTypedName",
														"src": "1847:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:16",
														"nodeType": "YulTypedName",
														"src": "1852:6:16",
														"type": ""
													}
												],
												"src": "1798:246:16"
											},
											{
												"body": {
													"nativeSrc": "2098:54:16",
													"nodeType": "YulBlock",
													"src": "2098:54:16",
													"statements": [
														{
															"nativeSrc": "2108:38:16",
															"nodeType": "YulAssignment",
															"src": "2108:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:16"
																		},
																		"nativeSrc": "2122:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:16"
																		},
																		"nativeSrc": "2138:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:16"
																},
																"nativeSrc": "2118:28:16",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:16",
														"nodeType": "YulTypedName",
														"src": "2081:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:16",
														"nodeType": "YulTypedName",
														"src": "2091:6:16",
														"type": ""
													}
												],
												"src": "2050:102:16"
											},
											{
												"body": {
													"nativeSrc": "2250:285:16",
													"nodeType": "YulBlock",
													"src": "2250:285:16",
													"statements": [
														{
															"nativeSrc": "2260:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:16"
																},
																"nativeSrc": "2274:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:16",
															"nodeType": "YulAssignment",
															"src": "2322:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:16"
																},
																"nativeSrc": "2329:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:16",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:16"
																		},
																		"nativeSrc": "2444:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:16"
																},
																"nativeSrc": "2409:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:16"
															},
															"nativeSrc": "2409:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:16"
														},
														{
															"nativeSrc": "2483:46:16",
															"nodeType": "YulAssignment",
															"src": "2483:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:16"
																		},
																		"nativeSrc": "2499:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:16"
																},
																"nativeSrc": "2490:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:16",
														"nodeType": "YulTypedName",
														"src": "2231:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:16",
														"nodeType": "YulTypedName",
														"src": "2238:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:16",
														"nodeType": "YulTypedName",
														"src": "2246:3:16",
														"type": ""
													}
												],
												"src": "2158:377:16"
											},
											{
												"body": {
													"nativeSrc": "2659:195:16",
													"nodeType": "YulBlock",
													"src": "2659:195:16",
													"statements": [
														{
															"nativeSrc": "2669:26:16",
															"nodeType": "YulAssignment",
															"src": "2669:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:16"
																},
																"nativeSrc": "2677:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:16"
																		},
																		"nativeSrc": "2712:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:16"
																		},
																		"nativeSrc": "2731:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:16"
																},
																"nativeSrc": "2705:47:16",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:16"
															},
															"nativeSrc": "2705:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:16"
														},
														{
															"nativeSrc": "2761:86:16",
															"nodeType": "YulAssignment",
															"src": "2761:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:16"
																},
																"nativeSrc": "2769:78:16",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:16",
														"nodeType": "YulTypedName",
														"src": "2631:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:16",
														"nodeType": "YulTypedName",
														"src": "2643:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:16",
														"nodeType": "YulTypedName",
														"src": "2654:4:16",
														"type": ""
													}
												],
												"src": "2541:313:16"
											},
											{
												"body": {
													"nativeSrc": "2905:32:16",
													"nodeType": "YulBlock",
													"src": "2905:32:16",
													"statements": [
														{
															"nativeSrc": "2915:16:16",
															"nodeType": "YulAssignment",
															"src": "2915:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:16",
																"nodeType": "YulIdentifier",
																"src": "2926:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:16",
														"nodeType": "YulTypedName",
														"src": "2887:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:16",
														"nodeType": "YulTypedName",
														"src": "2897:7:16",
														"type": ""
													}
												],
												"src": "2860:77:16"
											},
											{
												"body": {
													"nativeSrc": "2986:79:16",
													"nodeType": "YulBlock",
													"src": "2986:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:16",
																"nodeType": "YulBlock",
																"src": "3043:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:16"
																			},
																			"nativeSrc": "3045:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:16"
																		},
																		"nativeSrc": "3045:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:16"
																				},
																				"nativeSrc": "3016:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:16"
																		},
																		"nativeSrc": "3006:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:16"
																},
																"nativeSrc": "2999:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:16"
															},
															"nativeSrc": "2996:63:16",
															"nodeType": "YulIf",
															"src": "2996:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:16",
														"nodeType": "YulTypedName",
														"src": "2979:5:16",
														"type": ""
													}
												],
												"src": "2943:122:16"
											},
											{
												"body": {
													"nativeSrc": "3123:87:16",
													"nodeType": "YulBlock",
													"src": "3123:87:16",
													"statements": [
														{
															"nativeSrc": "3133:29:16",
															"nodeType": "YulAssignment",
															"src": "3133:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:16"
																},
																"nativeSrc": "3142:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:16"
																},
																"nativeSrc": "3171:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:16"
															},
															"nativeSrc": "3171:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:16",
														"nodeType": "YulTypedName",
														"src": "3101:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:16",
														"nodeType": "YulTypedName",
														"src": "3109:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:16",
														"nodeType": "YulTypedName",
														"src": "3117:5:16",
														"type": ""
													}
												],
												"src": "3071:139:16"
											},
											{
												"body": {
													"nativeSrc": "3282:263:16",
													"nodeType": "YulBlock",
													"src": "3282:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:16",
																"nodeType": "YulBlock",
																"src": "3328:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:16"
																			},
																			"nativeSrc": "3330:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:16"
																		},
																		"nativeSrc": "3330:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:16"
																		},
																		"nativeSrc": "3299:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:16"
																},
																"nativeSrc": "3295:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:16"
															},
															"nativeSrc": "3292:119:16",
															"nodeType": "YulIf",
															"src": "3292:119:16"
														},
														{
															"nativeSrc": "3421:117:16",
															"nodeType": "YulBlock",
															"src": "3421:117:16",
															"statements": [
																{
																	"nativeSrc": "3436:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:16"
																				},
																				"nativeSrc": "3496:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:16"
																		},
																		"nativeSrc": "3475:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:16",
														"nodeType": "YulTypedName",
														"src": "3252:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:16",
														"nodeType": "YulTypedName",
														"src": "3263:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:16",
														"nodeType": "YulTypedName",
														"src": "3275:6:16",
														"type": ""
													}
												],
												"src": "3216:329:16"
											},
											{
												"body": {
													"nativeSrc": "3596:81:16",
													"nodeType": "YulBlock",
													"src": "3596:81:16",
													"statements": [
														{
															"nativeSrc": "3606:65:16",
															"nodeType": "YulAssignment",
															"src": "3606:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:16",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:16"
																},
																"nativeSrc": "3617:54:16",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:16",
														"nodeType": "YulTypedName",
														"src": "3578:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:16",
														"nodeType": "YulTypedName",
														"src": "3588:7:16",
														"type": ""
													}
												],
												"src": "3551:126:16"
											},
											{
												"body": {
													"nativeSrc": "3728:51:16",
													"nodeType": "YulBlock",
													"src": "3728:51:16",
													"statements": [
														{
															"nativeSrc": "3738:35:16",
															"nodeType": "YulAssignment",
															"src": "3738:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:16"
																},
																"nativeSrc": "3749:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:16",
														"nodeType": "YulTypedName",
														"src": "3710:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:16",
														"nodeType": "YulTypedName",
														"src": "3720:7:16",
														"type": ""
													}
												],
												"src": "3683:96:16"
											},
											{
												"body": {
													"nativeSrc": "3850:53:16",
													"nodeType": "YulBlock",
													"src": "3850:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:16"
																		},
																		"nativeSrc": "3872:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:16"
																},
																"nativeSrc": "3860:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:16"
															},
															"nativeSrc": "3860:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:16",
														"nodeType": "YulTypedName",
														"src": "3838:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:16",
														"nodeType": "YulTypedName",
														"src": "3845:3:16",
														"type": ""
													}
												],
												"src": "3785:118:16"
											},
											{
												"body": {
													"nativeSrc": "4007:124:16",
													"nodeType": "YulBlock",
													"src": "4007:124:16",
													"statements": [
														{
															"nativeSrc": "4017:26:16",
															"nodeType": "YulAssignment",
															"src": "4017:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:16"
																},
																"nativeSrc": "4025:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:16"
																		},
																		"nativeSrc": "4106:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:16"
																},
																"nativeSrc": "4053:71:16",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:16"
															},
															"nativeSrc": "4053:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:16",
														"nodeType": "YulTypedName",
														"src": "3979:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:16",
														"nodeType": "YulTypedName",
														"src": "3991:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:16",
														"nodeType": "YulTypedName",
														"src": "4002:4:16",
														"type": ""
													}
												],
												"src": "3909:222:16"
											},
											{
												"body": {
													"nativeSrc": "4180:79:16",
													"nodeType": "YulBlock",
													"src": "4180:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:16",
																"nodeType": "YulBlock",
																"src": "4237:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:16"
																			},
																			"nativeSrc": "4239:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:16"
																		},
																		"nativeSrc": "4239:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:16"
																				},
																				"nativeSrc": "4210:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:16"
																		},
																		"nativeSrc": "4200:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:16"
																},
																"nativeSrc": "4193:43:16",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:16"
															},
															"nativeSrc": "4190:63:16",
															"nodeType": "YulIf",
															"src": "4190:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:16",
														"nodeType": "YulTypedName",
														"src": "4173:5:16",
														"type": ""
													}
												],
												"src": "4137:122:16"
											},
											{
												"body": {
													"nativeSrc": "4317:87:16",
													"nodeType": "YulBlock",
													"src": "4317:87:16",
													"statements": [
														{
															"nativeSrc": "4327:29:16",
															"nodeType": "YulAssignment",
															"src": "4327:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:16"
																},
																"nativeSrc": "4336:20:16",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:16"
																},
																"nativeSrc": "4365:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:16"
															},
															"nativeSrc": "4365:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:16",
														"nodeType": "YulTypedName",
														"src": "4295:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:16",
														"nodeType": "YulTypedName",
														"src": "4303:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:16",
														"nodeType": "YulTypedName",
														"src": "4311:5:16",
														"type": ""
													}
												],
												"src": "4265:139:16"
											},
											{
												"body": {
													"nativeSrc": "4493:391:16",
													"nodeType": "YulBlock",
													"src": "4493:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:16",
																"nodeType": "YulBlock",
																"src": "4539:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:16"
																			},
																			"nativeSrc": "4541:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:16"
																		},
																		"nativeSrc": "4541:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:16"
																		},
																		"nativeSrc": "4510:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:16"
																},
																"nativeSrc": "4506:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:16"
															},
															"nativeSrc": "4503:119:16",
															"nodeType": "YulIf",
															"src": "4503:119:16"
														},
														{
															"nativeSrc": "4632:117:16",
															"nodeType": "YulBlock",
															"src": "4632:117:16",
															"statements": [
																{
																	"nativeSrc": "4647:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:16"
																				},
																				"nativeSrc": "4707:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:16"
																		},
																		"nativeSrc": "4686:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:16",
															"nodeType": "YulBlock",
															"src": "4759:118:16",
															"statements": [
																{
																	"nativeSrc": "4774:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:16"
																				},
																				"nativeSrc": "4835:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:16"
																		},
																		"nativeSrc": "4814:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:16",
														"nodeType": "YulTypedName",
														"src": "4455:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:16",
														"nodeType": "YulTypedName",
														"src": "4466:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:16",
														"nodeType": "YulTypedName",
														"src": "4478:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:16",
														"nodeType": "YulTypedName",
														"src": "4486:6:16",
														"type": ""
													}
												],
												"src": "4410:474:16"
											},
											{
												"body": {
													"nativeSrc": "4990:519:16",
													"nodeType": "YulBlock",
													"src": "4990:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:16",
																"nodeType": "YulBlock",
																"src": "5036:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:16"
																			},
																			"nativeSrc": "5038:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:16"
																		},
																		"nativeSrc": "5038:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:16"
																		},
																		"nativeSrc": "5007:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:16"
																},
																"nativeSrc": "5003:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:16"
															},
															"nativeSrc": "5000:119:16",
															"nodeType": "YulIf",
															"src": "5000:119:16"
														},
														{
															"nativeSrc": "5129:117:16",
															"nodeType": "YulBlock",
															"src": "5129:117:16",
															"statements": [
																{
																	"nativeSrc": "5144:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:16"
																				},
																				"nativeSrc": "5204:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:16"
																		},
																		"nativeSrc": "5183:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:16",
															"nodeType": "YulBlock",
															"src": "5256:118:16",
															"statements": [
																{
																	"nativeSrc": "5271:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:16"
																				},
																				"nativeSrc": "5332:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:16"
																		},
																		"nativeSrc": "5311:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:16",
															"nodeType": "YulBlock",
															"src": "5384:118:16",
															"statements": [
																{
																	"nativeSrc": "5399:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:16"
																				},
																				"nativeSrc": "5460:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:16"
																		},
																		"nativeSrc": "5439:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:16",
														"nodeType": "YulTypedName",
														"src": "4944:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:16",
														"nodeType": "YulTypedName",
														"src": "4955:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:16",
														"nodeType": "YulTypedName",
														"src": "4967:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:16",
														"nodeType": "YulTypedName",
														"src": "4975:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:16",
														"nodeType": "YulTypedName",
														"src": "4983:6:16",
														"type": ""
													}
												],
												"src": "4890:619:16"
											},
											{
												"body": {
													"nativeSrc": "5581:263:16",
													"nodeType": "YulBlock",
													"src": "5581:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:16",
																"nodeType": "YulBlock",
																"src": "5627:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:16"
																			},
																			"nativeSrc": "5629:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:16"
																		},
																		"nativeSrc": "5629:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:16"
																		},
																		"nativeSrc": "5598:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:16"
																},
																"nativeSrc": "5594:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:16"
															},
															"nativeSrc": "5591:119:16",
															"nodeType": "YulIf",
															"src": "5591:119:16"
														},
														{
															"nativeSrc": "5720:117:16",
															"nodeType": "YulBlock",
															"src": "5720:117:16",
															"statements": [
																{
																	"nativeSrc": "5735:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:16"
																				},
																				"nativeSrc": "5795:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:16"
																		},
																		"nativeSrc": "5774:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:16",
														"nodeType": "YulTypedName",
														"src": "5551:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:16",
														"nodeType": "YulTypedName",
														"src": "5562:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:16",
														"nodeType": "YulTypedName",
														"src": "5574:6:16",
														"type": ""
													}
												],
												"src": "5515:329:16"
											},
											{
												"body": {
													"nativeSrc": "5915:53:16",
													"nodeType": "YulBlock",
													"src": "5915:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:16"
																		},
																		"nativeSrc": "5937:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:16"
																},
																"nativeSrc": "5925:37:16",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:16"
															},
															"nativeSrc": "5925:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:16",
														"nodeType": "YulTypedName",
														"src": "5903:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:16",
														"nodeType": "YulTypedName",
														"src": "5910:3:16",
														"type": ""
													}
												],
												"src": "5850:118:16"
											},
											{
												"body": {
													"nativeSrc": "6072:124:16",
													"nodeType": "YulBlock",
													"src": "6072:124:16",
													"statements": [
														{
															"nativeSrc": "6082:26:16",
															"nodeType": "YulAssignment",
															"src": "6082:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:16"
																},
																"nativeSrc": "6090:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:16"
																		},
																		"nativeSrc": "6171:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:16"
																},
																"nativeSrc": "6118:71:16",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:16"
															},
															"nativeSrc": "6118:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:16",
														"nodeType": "YulTypedName",
														"src": "6044:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:16",
														"nodeType": "YulTypedName",
														"src": "6056:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:16",
														"nodeType": "YulTypedName",
														"src": "6067:4:16",
														"type": ""
													}
												],
												"src": "5974:222:16"
											},
											{
												"body": {
													"nativeSrc": "6242:76:16",
													"nodeType": "YulBlock",
													"src": "6242:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:16",
																"nodeType": "YulBlock",
																"src": "6296:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:16"
																			},
																			"nativeSrc": "6298:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:16"
																		},
																		"nativeSrc": "6298:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:16"
																				},
																				"nativeSrc": "6272:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:16"
																		},
																		"nativeSrc": "6262:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:16"
																},
																"nativeSrc": "6255:40:16",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:16"
															},
															"nativeSrc": "6252:60:16",
															"nodeType": "YulIf",
															"src": "6252:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:16",
														"nodeType": "YulTypedName",
														"src": "6235:5:16",
														"type": ""
													}
												],
												"src": "6202:116:16"
											},
											{
												"body": {
													"nativeSrc": "6373:84:16",
													"nodeType": "YulBlock",
													"src": "6373:84:16",
													"statements": [
														{
															"nativeSrc": "6383:29:16",
															"nodeType": "YulAssignment",
															"src": "6383:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:16"
																},
																"nativeSrc": "6392:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:16"
																},
																"nativeSrc": "6421:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:16"
															},
															"nativeSrc": "6421:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:16",
														"nodeType": "YulTypedName",
														"src": "6351:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:16",
														"nodeType": "YulTypedName",
														"src": "6359:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:16",
														"nodeType": "YulTypedName",
														"src": "6367:5:16",
														"type": ""
													}
												],
												"src": "6324:133:16"
											},
											{
												"body": {
													"nativeSrc": "6543:388:16",
													"nodeType": "YulBlock",
													"src": "6543:388:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:16",
																"nodeType": "YulBlock",
																"src": "6589:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:16"
																			},
																			"nativeSrc": "6591:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:16"
																		},
																		"nativeSrc": "6591:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:16"
																		},
																		"nativeSrc": "6560:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:16"
																},
																"nativeSrc": "6556:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:16"
															},
															"nativeSrc": "6553:119:16",
															"nodeType": "YulIf",
															"src": "6553:119:16"
														},
														{
															"nativeSrc": "6682:117:16",
															"nodeType": "YulBlock",
															"src": "6682:117:16",
															"statements": [
																{
																	"nativeSrc": "6697:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:16"
																				},
																				"nativeSrc": "6757:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:16"
																		},
																		"nativeSrc": "6736:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:16",
															"nodeType": "YulBlock",
															"src": "6809:115:16",
															"statements": [
																{
																	"nativeSrc": "6824:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:16",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:16"
																				},
																				"nativeSrc": "6882:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:16"
																		},
																		"nativeSrc": "6864:50:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:16",
														"nodeType": "YulTypedName",
														"src": "6505:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:16",
														"nodeType": "YulTypedName",
														"src": "6516:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:16",
														"nodeType": "YulTypedName",
														"src": "6528:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:16",
														"nodeType": "YulTypedName",
														"src": "6536:6:16",
														"type": ""
													}
												],
												"src": "6463:468:16"
											},
											{
												"body": {
													"nativeSrc": "7026:28:16",
													"nodeType": "YulBlock",
													"src": "7026:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:16"
																},
																"nativeSrc": "7036:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:16"
															},
															"nativeSrc": "7036:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:16"
											},
											{
												"body": {
													"nativeSrc": "7149:28:16",
													"nodeType": "YulBlock",
													"src": "7149:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:16"
																},
																"nativeSrc": "7159:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:16"
															},
															"nativeSrc": "7159:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:16"
											},
											{
												"body": {
													"nativeSrc": "7211:152:16",
													"nodeType": "YulBlock",
													"src": "7211:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:16",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:16"
																},
																"nativeSrc": "7221:88:16",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:16"
															},
															"nativeSrc": "7221:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:16"
																},
																"nativeSrc": "7318:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:16"
															},
															"nativeSrc": "7318:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:16"
																},
																"nativeSrc": "7342:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:16"
															},
															"nativeSrc": "7342:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:16"
											},
											{
												"body": {
													"nativeSrc": "7412:238:16",
													"nodeType": "YulBlock",
													"src": "7412:238:16",
													"statements": [
														{
															"nativeSrc": "7422:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:16"
																		},
																		"nativeSrc": "7452:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:16"
																},
																"nativeSrc": "7440:40:16",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:16",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:16",
																"nodeType": "YulBlock",
																"src": "7591:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:16"
																			},
																			"nativeSrc": "7593:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:16"
																		},
																		"nativeSrc": "7593:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:16"
																		},
																		"nativeSrc": "7531:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:16"
																		},
																		"nativeSrc": "7567:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:16"
																},
																"nativeSrc": "7528:62:16",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:16"
															},
															"nativeSrc": "7525:88:16",
															"nodeType": "YulIf",
															"src": "7525:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:16"
																},
																"nativeSrc": "7622:22:16",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:16"
															},
															"nativeSrc": "7622:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:16",
														"nodeType": "YulTypedName",
														"src": "7398:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:16",
														"nodeType": "YulTypedName",
														"src": "7406:4:16",
														"type": ""
													}
												],
												"src": "7369:281:16"
											},
											{
												"body": {
													"nativeSrc": "7697:88:16",
													"nodeType": "YulBlock",
													"src": "7697:88:16",
													"statements": [
														{
															"nativeSrc": "7707:30:16",
															"nodeType": "YulAssignment",
															"src": "7707:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:16"
																},
																"nativeSrc": "7717:20:16",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:16"
																},
																"nativeSrc": "7746:33:16",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:16"
															},
															"nativeSrc": "7746:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:16",
														"nodeType": "YulTypedName",
														"src": "7681:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:16",
														"nodeType": "YulTypedName",
														"src": "7690:6:16",
														"type": ""
													}
												],
												"src": "7656:129:16"
											},
											{
												"body": {
													"nativeSrc": "7857:241:16",
													"nodeType": "YulBlock",
													"src": "7857:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:16",
																"nodeType": "YulBlock",
																"src": "7962:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:16"
																			},
																			"nativeSrc": "7964:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:16"
																		},
																		"nativeSrc": "7964:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:16",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:16"
																},
																"nativeSrc": "7931:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:16"
															},
															"nativeSrc": "7928:56:16",
															"nodeType": "YulIf",
															"src": "7928:56:16"
														},
														{
															"nativeSrc": "7994:37:16",
															"nodeType": "YulAssignment",
															"src": "7994:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:16"
																},
																"nativeSrc": "8002:29:16",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:16"
																}
															]
														},
														{
															"nativeSrc": "8068:23:16",
															"nodeType": "YulAssignment",
															"src": "8068:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:16"
																},
																"nativeSrc": "8076:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:16",
														"nodeType": "YulTypedName",
														"src": "7841:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:16",
														"nodeType": "YulTypedName",
														"src": "7852:4:16",
														"type": ""
													}
												],
												"src": "7791:307:16"
											},
											{
												"body": {
													"nativeSrc": "8168:82:16",
													"nodeType": "YulBlock",
													"src": "8168:82:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:16"
																},
																"nativeSrc": "8178:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:16"
															},
															"nativeSrc": "8178:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:16"
																		},
																		"nativeSrc": "8224:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:16"
																},
																"nativeSrc": "8217:27:16",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:16"
															},
															"nativeSrc": "8217:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:16",
														"nodeType": "YulTypedName",
														"src": "8150:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:16",
														"nodeType": "YulTypedName",
														"src": "8155:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:16",
														"nodeType": "YulTypedName",
														"src": "8160:6:16",
														"type": ""
													}
												],
												"src": "8104:146:16"
											},
											{
												"body": {
													"nativeSrc": "8339:340:16",
													"nodeType": "YulBlock",
													"src": "8339:340:16",
													"statements": [
														{
															"nativeSrc": "8349:74:16",
															"nodeType": "YulAssignment",
															"src": "8349:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:16"
																		},
																		"nativeSrc": "8374:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:16"
																},
																"nativeSrc": "8358:65:16",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:16"
																},
																"nativeSrc": "8432:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:16"
															},
															"nativeSrc": "8432:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:16"
														},
														{
															"nativeSrc": "8462:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:16"
																},
																"nativeSrc": "8473:16:16",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:16",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:16",
																"nodeType": "YulBlock",
																"src": "8527:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:16"
																			},
																			"nativeSrc": "8529:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:16"
																		},
																		"nativeSrc": "8529:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:16"
																		},
																		"nativeSrc": "8504:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:16"
																},
																"nativeSrc": "8501:25:16",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:16"
															},
															"nativeSrc": "8498:112:16",
															"nodeType": "YulIf",
															"src": "8498:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:16"
																},
																"nativeSrc": "8619:54:16",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:16"
															},
															"nativeSrc": "8619:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:16",
														"nodeType": "YulTypedName",
														"src": "8312:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:16",
														"nodeType": "YulTypedName",
														"src": "8317:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:16",
														"nodeType": "YulTypedName",
														"src": "8325:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:16",
														"nodeType": "YulTypedName",
														"src": "8333:5:16",
														"type": ""
													}
												],
												"src": "8256:423:16"
											},
											{
												"body": {
													"nativeSrc": "8759:277:16",
													"nodeType": "YulBlock",
													"src": "8759:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:16",
																"nodeType": "YulBlock",
																"src": "8808:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:16"
																			},
																			"nativeSrc": "8810:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:16"
																		},
																		"nativeSrc": "8810:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:16"
																				},
																				"nativeSrc": "8783:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:16"
																		},
																		"nativeSrc": "8779:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:16"
																},
																"nativeSrc": "8772:35:16",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:16"
															},
															"nativeSrc": "8769:122:16",
															"nodeType": "YulIf",
															"src": "8769:122:16"
														},
														{
															"nativeSrc": "8900:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:16"
																},
																"nativeSrc": "8914:20:16",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:16",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:16",
															"nodeType": "YulAssignment",
															"src": "8943:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:16",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:16"
																		},
																		"nativeSrc": "8999:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:16"
																},
																"nativeSrc": "8952:78:16",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:16",
														"nodeType": "YulTypedName",
														"src": "8737:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:16",
														"nodeType": "YulTypedName",
														"src": "8745:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:16",
														"nodeType": "YulTypedName",
														"src": "8753:5:16",
														"type": ""
													}
												],
												"src": "8698:338:16"
											},
											{
												"body": {
													"nativeSrc": "9168:817:16",
													"nodeType": "YulBlock",
													"src": "9168:817:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:16",
																"nodeType": "YulBlock",
																"src": "9215:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:16"
																			},
																			"nativeSrc": "9217:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:16"
																		},
																		"nativeSrc": "9217:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:16"
																		},
																		"nativeSrc": "9185:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:16"
																},
																"nativeSrc": "9181:33:16",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:16"
															},
															"nativeSrc": "9178:120:16",
															"nodeType": "YulIf",
															"src": "9178:120:16"
														},
														{
															"nativeSrc": "9308:117:16",
															"nodeType": "YulBlock",
															"src": "9308:117:16",
															"statements": [
																{
																	"nativeSrc": "9323:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:16"
																				},
																				"nativeSrc": "9383:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:16"
																		},
																		"nativeSrc": "9362:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:16",
															"nodeType": "YulBlock",
															"src": "9435:118:16",
															"statements": [
																{
																	"nativeSrc": "9450:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:16"
																				},
																				"nativeSrc": "9511:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:16"
																		},
																		"nativeSrc": "9490:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:16",
															"nodeType": "YulBlock",
															"src": "9563:118:16",
															"statements": [
																{
																	"nativeSrc": "9578:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:16"
																				},
																				"nativeSrc": "9639:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:16"
																		},
																		"nativeSrc": "9618:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:16",
															"nodeType": "YulBlock",
															"src": "9691:287:16",
															"statements": [
																{
																	"nativeSrc": "9706:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:16",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:16",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:16"
																				},
																				"nativeSrc": "9733:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:16"
																		},
																		"nativeSrc": "9720:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:16",
																		"nodeType": "YulBlock",
																		"src": "9799:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:16"
																					},
																					"nativeSrc": "9801:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:16"
																				},
																				"nativeSrc": "9801:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:16",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:16"
																		},
																		"nativeSrc": "9768:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:16"
																	},
																	"nativeSrc": "9765:117:16",
																	"nodeType": "YulIf",
																	"src": "9765:117:16"
																},
																{
																	"nativeSrc": "9896:72:16",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:16"
																				},
																				"nativeSrc": "9936:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:16"
																		},
																		"nativeSrc": "9906:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:16",
														"nodeType": "YulTypedName",
														"src": "9114:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:16",
														"nodeType": "YulTypedName",
														"src": "9125:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:16",
														"nodeType": "YulTypedName",
														"src": "9137:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:16",
														"nodeType": "YulTypedName",
														"src": "9145:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:16",
														"nodeType": "YulTypedName",
														"src": "9153:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:16",
														"nodeType": "YulTypedName",
														"src": "9161:6:16",
														"type": ""
													}
												],
												"src": "9042:943:16"
											},
											{
												"body": {
													"nativeSrc": "10058:241:16",
													"nodeType": "YulBlock",
													"src": "10058:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10163:22:16",
																"nodeType": "YulBlock",
																"src": "10163:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10165:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10165:16:16"
																			},
																			"nativeSrc": "10165:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10165:18:16"
																		},
																		"nativeSrc": "10165:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10135:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10143:18:16",
																		"nodeType": "YulLiteral",
																		"src": "10143:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10132:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10132:2:16"
																},
																"nativeSrc": "10132:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10132:30:16"
															},
															"nativeSrc": "10129:56:16",
															"nodeType": "YulIf",
															"src": "10129:56:16"
														},
														{
															"nativeSrc": "10195:37:16",
															"nodeType": "YulAssignment",
															"src": "10195:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10225:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10203:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "10203:21:16"
																},
																"nativeSrc": "10203:29:16",
																"nodeType": "YulFunctionCall",
																"src": "10203:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10195:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:16"
																}
															]
														},
														{
															"nativeSrc": "10269:23:16",
															"nodeType": "YulAssignment",
															"src": "10269:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10281:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10281:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10287:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10287:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10277:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:16"
																},
																"nativeSrc": "10277:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10277:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10269:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "9991:308:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10042:6:16",
														"nodeType": "YulTypedName",
														"src": "10042:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10053:4:16",
														"nodeType": "YulTypedName",
														"src": "10053:4:16",
														"type": ""
													}
												],
												"src": "9991:308:16"
											},
											{
												"body": {
													"nativeSrc": "10389:341:16",
													"nodeType": "YulBlock",
													"src": "10389:341:16",
													"statements": [
														{
															"nativeSrc": "10399:75:16",
															"nodeType": "YulAssignment",
															"src": "10399:75:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10466:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10466:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10424:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "10424:41:16"
																		},
																		"nativeSrc": "10424:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10424:49:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10408:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "10408:15:16"
																},
																"nativeSrc": "10408:66:16",
																"nodeType": "YulFunctionCall",
																"src": "10408:66:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10399:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10490:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10497:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10483:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10483:6:16"
																},
																"nativeSrc": "10483:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10483:21:16"
															},
															"nativeSrc": "10483:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10483:21:16"
														},
														{
															"nativeSrc": "10513:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10528:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10528:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10524:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:16"
																},
																"nativeSrc": "10524:16:16",
																"nodeType": "YulFunctionCall",
																"src": "10524:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10517:3:16",
																	"nodeType": "YulTypedName",
																	"src": "10517:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10578:83:16",
																"nodeType": "YulBlock",
																"src": "10578:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10580:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10580:77:16"
																			},
																			"nativeSrc": "10580:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10580:79:16"
																		},
																		"nativeSrc": "10580:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10559:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10559:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10564:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10564:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10555:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:16"
																		},
																		"nativeSrc": "10555:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10573:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10573:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10552:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10552:2:16"
																},
																"nativeSrc": "10552:25:16",
																"nodeType": "YulFunctionCall",
																"src": "10552:25:16"
															},
															"nativeSrc": "10549:112:16",
															"nodeType": "YulIf",
															"src": "10549:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10707:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10712:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10717:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10670:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "10670:36:16"
																},
																"nativeSrc": "10670:54:16",
																"nodeType": "YulFunctionCall",
																"src": "10670:54:16"
															},
															"nativeSrc": "10670:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "10670:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10305:425:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10362:3:16",
														"nodeType": "YulTypedName",
														"src": "10362:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10367:6:16",
														"nodeType": "YulTypedName",
														"src": "10367:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10375:3:16",
														"nodeType": "YulTypedName",
														"src": "10375:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10383:5:16",
														"nodeType": "YulTypedName",
														"src": "10383:5:16",
														"type": ""
													}
												],
												"src": "10305:425:16"
											},
											{
												"body": {
													"nativeSrc": "10812:278:16",
													"nodeType": "YulBlock",
													"src": "10812:278:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10861:83:16",
																"nodeType": "YulBlock",
																"src": "10861:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10863:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10863:77:16"
																			},
																			"nativeSrc": "10863:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10863:79:16"
																		},
																		"nativeSrc": "10863:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10840:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10840:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10848:4:16",
																						"nodeType": "YulLiteral",
																						"src": "10848:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10836:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10836:3:16"
																				},
																				"nativeSrc": "10836:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10836:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10855:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10832:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:16"
																		},
																		"nativeSrc": "10832:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10832:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10825:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:16"
																},
																"nativeSrc": "10825:35:16",
																"nodeType": "YulFunctionCall",
																"src": "10825:35:16"
															},
															"nativeSrc": "10822:122:16",
															"nodeType": "YulIf",
															"src": "10822:122:16"
														},
														{
															"nativeSrc": "10953:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10953:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10980:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10980:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10967:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "10967:12:16"
																},
																"nativeSrc": "10967:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10967:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10957:6:16",
																	"nodeType": "YulTypedName",
																	"src": "10957:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10996:88:16",
															"nodeType": "YulAssignment",
															"src": "10996:88:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11057:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11065:4:16",
																				"nodeType": "YulLiteral",
																				"src": "11065:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11053:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:16"
																		},
																		"nativeSrc": "11053:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11072:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11080:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11080:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11005:47:16",
																	"nodeType": "YulIdentifier",
																	"src": "11005:47:16"
																},
																"nativeSrc": "11005:79:16",
																"nodeType": "YulFunctionCall",
																"src": "11005:79:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10996:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10996:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "10750:340:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10790:6:16",
														"nodeType": "YulTypedName",
														"src": "10790:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10798:3:16",
														"nodeType": "YulTypedName",
														"src": "10798:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10806:5:16",
														"nodeType": "YulTypedName",
														"src": "10806:5:16",
														"type": ""
													}
												],
												"src": "10750:340:16"
											},
											{
												"body": {
													"nativeSrc": "11172:433:16",
													"nodeType": "YulBlock",
													"src": "11172:433:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11218:83:16",
																"nodeType": "YulBlock",
																"src": "11218:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11220:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11220:77:16"
																			},
																			"nativeSrc": "11220:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11220:79:16"
																		},
																		"nativeSrc": "11220:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11220:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11193:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11193:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11202:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11202:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11189:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:16"
																		},
																		"nativeSrc": "11189:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11189:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11214:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11214:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11185:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11185:3:16"
																},
																"nativeSrc": "11185:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11185:32:16"
															},
															"nativeSrc": "11182:119:16",
															"nodeType": "YulIf",
															"src": "11182:119:16"
														},
														{
															"nativeSrc": "11311:287:16",
															"nodeType": "YulBlock",
															"src": "11311:287:16",
															"statements": [
																{
																	"nativeSrc": "11326:45:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11326:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11357:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11357:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11368:1:16",
																						"nodeType": "YulLiteral",
																						"src": "11368:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11353:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11353:3:16"
																				},
																				"nativeSrc": "11353:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11353:17:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11340:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "11340:12:16"
																		},
																		"nativeSrc": "11340:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11340:31:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11330:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11330:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11418:83:16",
																		"nodeType": "YulBlock",
																		"src": "11418:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11420:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "11420:77:16"
																					},
																					"nativeSrc": "11420:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "11420:79:16"
																				},
																				"nativeSrc": "11420:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "11420:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11390:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11390:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11398:18:16",
																				"nodeType": "YulLiteral",
																				"src": "11398:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11387:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "11387:2:16"
																		},
																		"nativeSrc": "11387:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11387:30:16"
																	},
																	"nativeSrc": "11384:117:16",
																	"nodeType": "YulIf",
																	"src": "11384:117:16"
																},
																{
																	"nativeSrc": "11515:73:16",
																	"nodeType": "YulAssignment",
																	"src": "11515:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11560:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11560:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11571:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11571:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11556:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11556:3:16"
																				},
																				"nativeSrc": "11556:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11556:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11580:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11580:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11525:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "11525:30:16"
																		},
																		"nativeSrc": "11525:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11525:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11515:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11515:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "11096:509:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11142:9:16",
														"nodeType": "YulTypedName",
														"src": "11142:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11153:7:16",
														"nodeType": "YulTypedName",
														"src": "11153:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11165:6:16",
														"nodeType": "YulTypedName",
														"src": "11165:6:16",
														"type": ""
													}
												],
												"src": "11096:509:16"
											},
											{
												"body": {
													"nativeSrc": "11694:391:16",
													"nodeType": "YulBlock",
													"src": "11694:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11740:83:16",
																"nodeType": "YulBlock",
																"src": "11740:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11742:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11742:77:16"
																			},
																			"nativeSrc": "11742:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11742:79:16"
																		},
																		"nativeSrc": "11742:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11742:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11715:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11715:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11724:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11711:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:16"
																		},
																		"nativeSrc": "11711:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11736:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11707:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:16"
																},
																"nativeSrc": "11707:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11707:32:16"
															},
															"nativeSrc": "11704:119:16",
															"nodeType": "YulIf",
															"src": "11704:119:16"
														},
														{
															"nativeSrc": "11833:117:16",
															"nodeType": "YulBlock",
															"src": "11833:117:16",
															"statements": [
																{
																	"nativeSrc": "11848:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11848:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11862:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11862:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11852:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11852:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11877:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11877:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11912:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11912:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11923:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11923:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11908:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11908:3:16"
																				},
																				"nativeSrc": "11908:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11908:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11932:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11932:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11887:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11887:20:16"
																		},
																		"nativeSrc": "11887:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11877:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11877:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11960:118:16",
															"nodeType": "YulBlock",
															"src": "11960:118:16",
															"statements": [
																{
																	"nativeSrc": "11975:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11975:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11989:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11979:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11979:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12005:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12005:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12036:3:16"
																				},
																				"nativeSrc": "12036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12015:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12015:20:16"
																		},
																		"nativeSrc": "12015:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12015:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12005:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12005:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11611:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11656:9:16",
														"nodeType": "YulTypedName",
														"src": "11656:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11667:7:16",
														"nodeType": "YulTypedName",
														"src": "11667:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11679:6:16",
														"nodeType": "YulTypedName",
														"src": "11679:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11687:6:16",
														"nodeType": "YulTypedName",
														"src": "11687:6:16",
														"type": ""
													}
												],
												"src": "11611:474:16"
											},
											{
												"body": {
													"nativeSrc": "12119:152:16",
													"nodeType": "YulBlock",
													"src": "12119:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12136:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12136:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12139:77:16",
																		"nodeType": "YulLiteral",
																		"src": "12139:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12129:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:16"
																},
																"nativeSrc": "12129:88:16",
																"nodeType": "YulFunctionCall",
																"src": "12129:88:16"
															},
															"nativeSrc": "12129:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "12129:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12233:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12233:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12236:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12236:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12226:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:16"
																},
																"nativeSrc": "12226:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12226:15:16"
															},
															"nativeSrc": "12226:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12226:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12257:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12257:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12260:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12260:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12250:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:16"
																},
																"nativeSrc": "12250:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12250:15:16"
															},
															"nativeSrc": "12250:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12250:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12091:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "12091:180:16"
											},
											{
												"body": {
													"nativeSrc": "12328:269:16",
													"nodeType": "YulBlock",
													"src": "12328:269:16",
													"statements": [
														{
															"nativeSrc": "12338:22:16",
															"nodeType": "YulAssignment",
															"src": "12338:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12352:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12352:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12358:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12358:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12348:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:16"
																},
																"nativeSrc": "12348:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12348:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12338:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:16"
																}
															]
														},
														{
															"nativeSrc": "12369:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12369:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12399:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12399:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12405:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12405:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12395:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12395:3:16"
																},
																"nativeSrc": "12395:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12395:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12373:18:16",
																	"nodeType": "YulTypedName",
																	"src": "12373:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12446:51:16",
																"nodeType": "YulBlock",
																"src": "12446:51:16",
																"statements": [
																	{
																		"nativeSrc": "12460:27:16",
																		"nodeType": "YulAssignment",
																		"src": "12460:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12474:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "12474:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12482:4:16",
																					"nodeType": "YulLiteral",
																					"src": "12482:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12470:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "12470:3:16"
																			},
																			"nativeSrc": "12470:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12470:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12460:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12460:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12426:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "12426:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12419:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12419:6:16"
																},
																"nativeSrc": "12419:26:16",
																"nodeType": "YulFunctionCall",
																"src": "12419:26:16"
															},
															"nativeSrc": "12416:81:16",
															"nodeType": "YulIf",
															"src": "12416:81:16"
														},
														{
															"body": {
																"nativeSrc": "12549:42:16",
																"nodeType": "YulBlock",
																"src": "12549:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12563:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "12563:16:16"
																			},
																			"nativeSrc": "12563:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12563:18:16"
																		},
																		"nativeSrc": "12563:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12563:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12513:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "12513:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12536:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12536:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12544:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12544:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12533:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12533:2:16"
																		},
																		"nativeSrc": "12533:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12533:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12510:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12510:2:16"
																},
																"nativeSrc": "12510:38:16",
																"nodeType": "YulFunctionCall",
																"src": "12510:38:16"
															},
															"nativeSrc": "12507:84:16",
															"nodeType": "YulIf",
															"src": "12507:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12277:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12312:4:16",
														"nodeType": "YulTypedName",
														"src": "12312:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12321:6:16",
														"nodeType": "YulTypedName",
														"src": "12321:6:16",
														"type": ""
													}
												],
												"src": "12277:320:16"
											},
											{
												"body": {
													"nativeSrc": "12757:288:16",
													"nodeType": "YulBlock",
													"src": "12757:288:16",
													"statements": [
														{
															"nativeSrc": "12767:26:16",
															"nodeType": "YulAssignment",
															"src": "12767:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12779:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12779:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12790:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12790:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12775:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12775:3:16"
																},
																"nativeSrc": "12775:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12775:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12767:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12767:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12847:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12847:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12860:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12871:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12856:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:16"
																		},
																		"nativeSrc": "12856:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12803:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12803:43:16"
																},
																"nativeSrc": "12803:71:16",
																"nodeType": "YulFunctionCall",
																"src": "12803:71:16"
															},
															"nativeSrc": "12803:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "12803:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12928:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12928:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12941:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12941:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12952:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12952:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12937:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12937:3:16"
																		},
																		"nativeSrc": "12937:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12937:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12884:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12884:43:16"
																},
																"nativeSrc": "12884:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12884:72:16"
															},
															"nativeSrc": "12884:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12884:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13010:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13010:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13023:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13023:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13034:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13034:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13019:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13019:3:16"
																		},
																		"nativeSrc": "13019:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13019:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12966:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12966:43:16"
																},
																"nativeSrc": "12966:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12966:72:16"
															},
															"nativeSrc": "12966:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12966:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "12603:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12713:9:16",
														"nodeType": "YulTypedName",
														"src": "12713:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12725:6:16",
														"nodeType": "YulTypedName",
														"src": "12725:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12733:6:16",
														"nodeType": "YulTypedName",
														"src": "12733:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12741:6:16",
														"nodeType": "YulTypedName",
														"src": "12741:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12752:4:16",
														"nodeType": "YulTypedName",
														"src": "12752:4:16",
														"type": ""
													}
												],
												"src": "12603:442:16"
											},
											{
												"body": {
													"nativeSrc": "13225:359:16",
													"nodeType": "YulBlock",
													"src": "13225:359:16",
													"statements": [
														{
															"nativeSrc": "13235:26:16",
															"nodeType": "YulAssignment",
															"src": "13235:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13247:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "13247:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13258:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13258:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13243:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13243:3:16"
																},
																"nativeSrc": "13243:18:16",
																"nodeType": "YulFunctionCall",
																"src": "13243:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13235:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13235:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13315:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13315:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13328:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13328:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13339:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13339:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13324:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13324:3:16"
																		},
																		"nativeSrc": "13324:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13324:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13271:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "13271:43:16"
																},
																"nativeSrc": "13271:71:16",
																"nodeType": "YulFunctionCall",
																"src": "13271:71:16"
															},
															"nativeSrc": "13271:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "13271:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13396:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13396:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13409:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13409:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13420:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13420:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13405:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13405:3:16"
																		},
																		"nativeSrc": "13405:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13405:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13352:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "13352:43:16"
																},
																"nativeSrc": "13352:72:16",
																"nodeType": "YulFunctionCall",
																"src": "13352:72:16"
															},
															"nativeSrc": "13352:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "13352:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13445:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13445:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13456:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13456:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13441:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13441:3:16"
																		},
																		"nativeSrc": "13441:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13441:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13465:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "13465:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13471:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13471:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13461:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13461:3:16"
																		},
																		"nativeSrc": "13461:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13461:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13434:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13434:6:16"
																},
																"nativeSrc": "13434:48:16",
																"nodeType": "YulFunctionCall",
																"src": "13434:48:16"
															},
															"nativeSrc": "13434:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "13434:48:16"
														},
														{
															"nativeSrc": "13491:86:16",
															"nodeType": "YulAssignment",
															"src": "13491:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13563:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13563:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13572:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13572:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13499:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "13499:63:16"
																},
																"nativeSrc": "13499:78:16",
																"nodeType": "YulFunctionCall",
																"src": "13499:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13491:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13491:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13051:533:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13181:9:16",
														"nodeType": "YulTypedName",
														"src": "13181:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13193:6:16",
														"nodeType": "YulTypedName",
														"src": "13193:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13201:6:16",
														"nodeType": "YulTypedName",
														"src": "13201:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13209:6:16",
														"nodeType": "YulTypedName",
														"src": "13209:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13220:4:16",
														"nodeType": "YulTypedName",
														"src": "13220:4:16",
														"type": ""
													}
												],
												"src": "13051:533:16"
											},
											{
												"body": {
													"nativeSrc": "13618:152:16",
													"nodeType": "YulBlock",
													"src": "13618:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13635:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13635:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13638:77:16",
																		"nodeType": "YulLiteral",
																		"src": "13638:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13628:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13628:6:16"
																},
																"nativeSrc": "13628:88:16",
																"nodeType": "YulFunctionCall",
																"src": "13628:88:16"
															},
															"nativeSrc": "13628:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "13628:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13732:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13732:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13735:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13735:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13725:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13725:6:16"
																},
																"nativeSrc": "13725:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13725:15:16"
															},
															"nativeSrc": "13725:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13725:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13756:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13756:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13759:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13759:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13749:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13749:6:16"
																},
																"nativeSrc": "13749:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13749:15:16"
															},
															"nativeSrc": "13749:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13749:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13590:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "13590:180:16"
											},
											{
												"body": {
													"nativeSrc": "13820:147:16",
													"nodeType": "YulBlock",
													"src": "13820:147:16",
													"statements": [
														{
															"nativeSrc": "13830:25:16",
															"nodeType": "YulAssignment",
															"src": "13830:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13853:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13853:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13835:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "13835:17:16"
																},
																"nativeSrc": "13835:20:16",
																"nodeType": "YulFunctionCall",
																"src": "13835:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13830:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13830:1:16"
																}
															]
														},
														{
															"nativeSrc": "13864:25:16",
															"nodeType": "YulAssignment",
															"src": "13864:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13887:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13887:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13869:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "13869:17:16"
																},
																"nativeSrc": "13869:20:16",
																"nodeType": "YulFunctionCall",
																"src": "13869:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13864:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13864:1:16"
																}
															]
														},
														{
															"nativeSrc": "13898:16:16",
															"nodeType": "YulAssignment",
															"src": "13898:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13909:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13909:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13912:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13912:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13905:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13905:3:16"
																},
																"nativeSrc": "13905:9:16",
																"nodeType": "YulFunctionCall",
																"src": "13905:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13898:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13898:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13938:22:16",
																"nodeType": "YulBlock",
																"src": "13938:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13940:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13940:16:16"
																			},
																			"nativeSrc": "13940:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13940:18:16"
																		},
																		"nativeSrc": "13940:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13940:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13930:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13930:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13933:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13933:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13927:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13927:2:16"
																},
																"nativeSrc": "13927:10:16",
																"nodeType": "YulFunctionCall",
																"src": "13927:10:16"
															},
															"nativeSrc": "13924:36:16",
															"nodeType": "YulIf",
															"src": "13924:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13776:191:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13807:1:16",
														"nodeType": "YulTypedName",
														"src": "13807:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13810:1:16",
														"nodeType": "YulTypedName",
														"src": "13810:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13816:3:16",
														"nodeType": "YulTypedName",
														"src": "13816:3:16",
														"type": ""
													}
												],
												"src": "13776:191:16"
											},
											{
												"body": {
													"nativeSrc": "14087:34:16",
													"nodeType": "YulBlock",
													"src": "14087:34:16",
													"statements": [
														{
															"nativeSrc": "14097:18:16",
															"nodeType": "YulAssignment",
															"src": "14097:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "14112:3:16",
																"nodeType": "YulIdentifier",
																"src": "14112:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14097:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "14097:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13973:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14059:3:16",
														"nodeType": "YulTypedName",
														"src": "14059:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14064:6:16",
														"nodeType": "YulTypedName",
														"src": "14064:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14075:11:16",
														"nodeType": "YulTypedName",
														"src": "14075:11:16",
														"type": ""
													}
												],
												"src": "13973:148:16"
											},
											{
												"body": {
													"nativeSrc": "14237:280:16",
													"nodeType": "YulBlock",
													"src": "14237:280:16",
													"statements": [
														{
															"nativeSrc": "14247:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14247:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14294:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14294:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14261:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "14261:32:16"
																},
																"nativeSrc": "14261:39:16",
																"nodeType": "YulFunctionCall",
																"src": "14261:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14251:6:16",
																	"nodeType": "YulTypedName",
																	"src": "14251:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14309:96:16",
															"nodeType": "YulAssignment",
															"src": "14309:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14393:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14393:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14398:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14398:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14316:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "14316:76:16"
																},
																"nativeSrc": "14316:89:16",
																"nodeType": "YulFunctionCall",
																"src": "14316:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14309:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14309:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14453:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "14453:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14460:4:16",
																				"nodeType": "YulLiteral",
																				"src": "14460:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14449:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14449:3:16"
																		},
																		"nativeSrc": "14449:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14449:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14467:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14467:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14472:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14472:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14414:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "14414:34:16"
																},
																"nativeSrc": "14414:65:16",
																"nodeType": "YulFunctionCall",
																"src": "14414:65:16"
															},
															"nativeSrc": "14414:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "14414:65:16"
														},
														{
															"nativeSrc": "14488:23:16",
															"nodeType": "YulAssignment",
															"src": "14488:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14499:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14499:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14504:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14504:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14495:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14495:3:16"
																},
																"nativeSrc": "14495:16:16",
																"nodeType": "YulFunctionCall",
																"src": "14495:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14488:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14488:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14127:390:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14218:5:16",
														"nodeType": "YulTypedName",
														"src": "14218:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14225:3:16",
														"nodeType": "YulTypedName",
														"src": "14225:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14233:3:16",
														"nodeType": "YulTypedName",
														"src": "14233:3:16",
														"type": ""
													}
												],
												"src": "14127:390:16"
											},
											{
												"body": {
													"nativeSrc": "14707:251:16",
													"nodeType": "YulBlock",
													"src": "14707:251:16",
													"statements": [
														{
															"nativeSrc": "14718:102:16",
															"nodeType": "YulAssignment",
															"src": "14718:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14807:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14807:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14816:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14816:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14725:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "14725:81:16"
																},
																"nativeSrc": "14725:95:16",
																"nodeType": "YulFunctionCall",
																"src": "14725:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14718:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14718:3:16"
																}
															]
														},
														{
															"nativeSrc": "14830:102:16",
															"nodeType": "YulAssignment",
															"src": "14830:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14919:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14919:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14928:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14928:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14837:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "14837:81:16"
																},
																"nativeSrc": "14837:95:16",
																"nodeType": "YulFunctionCall",
																"src": "14837:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14830:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14830:3:16"
																}
															]
														},
														{
															"nativeSrc": "14942:10:16",
															"nodeType": "YulAssignment",
															"src": "14942:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "14949:3:16",
																"nodeType": "YulIdentifier",
																"src": "14949:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14942:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14942:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14523:435:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14678:3:16",
														"nodeType": "YulTypedName",
														"src": "14678:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14684:6:16",
														"nodeType": "YulTypedName",
														"src": "14684:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14692:6:16",
														"nodeType": "YulTypedName",
														"src": "14692:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14703:3:16",
														"nodeType": "YulTypedName",
														"src": "14703:3:16",
														"type": ""
													}
												],
												"src": "14523:435:16"
											},
											{
												"body": {
													"nativeSrc": "15022:40:16",
													"nodeType": "YulBlock",
													"src": "15022:40:16",
													"statements": [
														{
															"nativeSrc": "15033:22:16",
															"nodeType": "YulAssignment",
															"src": "15033:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15049:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15049:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15043:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "15043:5:16"
																},
																"nativeSrc": "15043:12:16",
																"nodeType": "YulFunctionCall",
																"src": "15043:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15033:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15033:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "14964:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15005:5:16",
														"nodeType": "YulTypedName",
														"src": "15005:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15015:6:16",
														"nodeType": "YulTypedName",
														"src": "15015:6:16",
														"type": ""
													}
												],
												"src": "14964:98:16"
											},
											{
												"body": {
													"nativeSrc": "15163:73:16",
													"nodeType": "YulBlock",
													"src": "15163:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15180:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15180:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15185:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15185:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15173:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15173:6:16"
																},
																"nativeSrc": "15173:19:16",
																"nodeType": "YulFunctionCall",
																"src": "15173:19:16"
															},
															"nativeSrc": "15173:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "15173:19:16"
														},
														{
															"nativeSrc": "15201:29:16",
															"nodeType": "YulAssignment",
															"src": "15201:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15220:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15220:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15225:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15225:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15216:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15216:3:16"
																},
																"nativeSrc": "15216:14:16",
																"nodeType": "YulFunctionCall",
																"src": "15216:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15201:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "15201:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15068:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15135:3:16",
														"nodeType": "YulTypedName",
														"src": "15135:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15140:6:16",
														"nodeType": "YulTypedName",
														"src": "15140:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15151:11:16",
														"nodeType": "YulTypedName",
														"src": "15151:11:16",
														"type": ""
													}
												],
												"src": "15068:168:16"
											},
											{
												"body": {
													"nativeSrc": "15332:283:16",
													"nodeType": "YulBlock",
													"src": "15332:283:16",
													"statements": [
														{
															"nativeSrc": "15342:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15342:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15388:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15388:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "15356:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "15356:31:16"
																},
																"nativeSrc": "15356:38:16",
																"nodeType": "YulFunctionCall",
																"src": "15356:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15346:6:16",
																	"nodeType": "YulTypedName",
																	"src": "15346:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15403:77:16",
															"nodeType": "YulAssignment",
															"src": "15403:77:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15468:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15468:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15473:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15473:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15410:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "15410:57:16"
																},
																"nativeSrc": "15410:70:16",
																"nodeType": "YulFunctionCall",
																"src": "15410:70:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15403:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15403:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15528:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "15528:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15535:4:16",
																				"nodeType": "YulLiteral",
																				"src": "15535:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15524:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15524:3:16"
																		},
																		"nativeSrc": "15524:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15524:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15542:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15542:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15547:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15547:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15489:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "15489:34:16"
																},
																"nativeSrc": "15489:65:16",
																"nodeType": "YulFunctionCall",
																"src": "15489:65:16"
															},
															"nativeSrc": "15489:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "15489:65:16"
														},
														{
															"nativeSrc": "15563:46:16",
															"nodeType": "YulAssignment",
															"src": "15563:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15574:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15574:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15601:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15601:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "15579:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "15579:21:16"
																		},
																		"nativeSrc": "15579:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15579:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15570:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15570:3:16"
																},
																"nativeSrc": "15570:39:16",
																"nodeType": "YulFunctionCall",
																"src": "15570:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15563:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15563:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15242:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15313:5:16",
														"nodeType": "YulTypedName",
														"src": "15313:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15320:3:16",
														"nodeType": "YulTypedName",
														"src": "15320:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15328:3:16",
														"nodeType": "YulTypedName",
														"src": "15328:3:16",
														"type": ""
													}
												],
												"src": "15242:373:16"
											},
											{
												"body": {
													"nativeSrc": "15821:440:16",
													"nodeType": "YulBlock",
													"src": "15821:440:16",
													"statements": [
														{
															"nativeSrc": "15831:27:16",
															"nodeType": "YulAssignment",
															"src": "15831:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15843:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15843:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15854:3:16",
																		"nodeType": "YulLiteral",
																		"src": "15854:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15839:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15839:3:16"
																},
																"nativeSrc": "15839:19:16",
																"nodeType": "YulFunctionCall",
																"src": "15839:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15831:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15831:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15912:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15912:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15925:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15925:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15936:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15936:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15921:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15921:3:16"
																		},
																		"nativeSrc": "15921:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15921:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15868:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15868:43:16"
																},
																"nativeSrc": "15868:71:16",
																"nodeType": "YulFunctionCall",
																"src": "15868:71:16"
															},
															"nativeSrc": "15868:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "15868:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15993:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15993:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16006:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16006:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16017:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16017:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16002:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16002:3:16"
																		},
																		"nativeSrc": "16002:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16002:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15949:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15949:43:16"
																},
																"nativeSrc": "15949:72:16",
																"nodeType": "YulFunctionCall",
																"src": "15949:72:16"
															},
															"nativeSrc": "15949:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "15949:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16075:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16075:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16088:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16088:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16099:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16099:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16084:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16084:3:16"
																		},
																		"nativeSrc": "16084:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16084:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16031:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "16031:43:16"
																},
																"nativeSrc": "16031:72:16",
																"nodeType": "YulFunctionCall",
																"src": "16031:72:16"
															},
															"nativeSrc": "16031:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "16031:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16124:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16124:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16135:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16135:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16120:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16120:3:16"
																		},
																		"nativeSrc": "16120:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16120:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16144:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16144:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16150:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16150:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16140:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16140:3:16"
																		},
																		"nativeSrc": "16140:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16140:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16113:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16113:6:16"
																},
																"nativeSrc": "16113:48:16",
																"nodeType": "YulFunctionCall",
																"src": "16113:48:16"
															},
															"nativeSrc": "16113:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "16113:48:16"
														},
														{
															"nativeSrc": "16170:84:16",
															"nodeType": "YulAssignment",
															"src": "16170:84:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16240:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16240:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16249:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16249:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16178:61:16",
																	"nodeType": "YulIdentifier",
																	"src": "16178:61:16"
																},
																"nativeSrc": "16178:76:16",
																"nodeType": "YulFunctionCall",
																"src": "16178:76:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16170:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16170:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15621:640:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15769:9:16",
														"nodeType": "YulTypedName",
														"src": "15769:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15781:6:16",
														"nodeType": "YulTypedName",
														"src": "15781:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15789:6:16",
														"nodeType": "YulTypedName",
														"src": "15789:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15797:6:16",
														"nodeType": "YulTypedName",
														"src": "15797:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15805:6:16",
														"nodeType": "YulTypedName",
														"src": "15805:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15816:4:16",
														"nodeType": "YulTypedName",
														"src": "15816:4:16",
														"type": ""
													}
												],
												"src": "15621:640:16"
											},
											{
												"body": {
													"nativeSrc": "16329:79:16",
													"nodeType": "YulBlock",
													"src": "16329:79:16",
													"statements": [
														{
															"nativeSrc": "16339:22:16",
															"nodeType": "YulAssignment",
															"src": "16339:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16354:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16354:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16348:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16348:5:16"
																},
																"nativeSrc": "16348:13:16",
																"nodeType": "YulFunctionCall",
																"src": "16348:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16339:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16339:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16396:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16396:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "16370:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "16370:25:16"
																},
																"nativeSrc": "16370:32:16",
																"nodeType": "YulFunctionCall",
																"src": "16370:32:16"
															},
															"nativeSrc": "16370:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "16370:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "16267:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16307:6:16",
														"nodeType": "YulTypedName",
														"src": "16307:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16315:3:16",
														"nodeType": "YulTypedName",
														"src": "16315:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16323:5:16",
														"nodeType": "YulTypedName",
														"src": "16323:5:16",
														"type": ""
													}
												],
												"src": "16267:141:16"
											},
											{
												"body": {
													"nativeSrc": "16490:273:16",
													"nodeType": "YulBlock",
													"src": "16490:273:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "16536:83:16",
																"nodeType": "YulBlock",
																"src": "16536:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16538:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "16538:77:16"
																			},
																			"nativeSrc": "16538:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16538:79:16"
																		},
																		"nativeSrc": "16538:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "16538:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16511:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "16511:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16520:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16520:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16507:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16507:3:16"
																		},
																		"nativeSrc": "16507:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16507:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16532:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16532:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16503:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16503:3:16"
																},
																"nativeSrc": "16503:32:16",
																"nodeType": "YulFunctionCall",
																"src": "16503:32:16"
															},
															"nativeSrc": "16500:119:16",
															"nodeType": "YulIf",
															"src": "16500:119:16"
														},
														{
															"nativeSrc": "16629:127:16",
															"nodeType": "YulBlock",
															"src": "16629:127:16",
															"statements": [
																{
																	"nativeSrc": "16644:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16644:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16658:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16658:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16648:6:16",
																			"nodeType": "YulTypedName",
																			"src": "16648:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16673:73:16",
																	"nodeType": "YulAssignment",
																	"src": "16673:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16718:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "16718:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16729:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "16729:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16714:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "16714:3:16"
																				},
																				"nativeSrc": "16714:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16714:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16738:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "16738:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "16683:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "16683:30:16"
																		},
																		"nativeSrc": "16683:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16683:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16673:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "16673:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "16414:349:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16460:9:16",
														"nodeType": "YulTypedName",
														"src": "16460:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16471:7:16",
														"nodeType": "YulTypedName",
														"src": "16471:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16483:6:16",
														"nodeType": "YulTypedName",
														"src": "16483:6:16",
														"type": ""
													}
												],
												"src": "16414:349:16"
											},
											{
												"body": {
													"nativeSrc": "16823:87:16",
													"nodeType": "YulBlock",
													"src": "16823:87:16",
													"statements": [
														{
															"nativeSrc": "16833:11:16",
															"nodeType": "YulAssignment",
															"src": "16833:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "16841:3:16",
																"nodeType": "YulIdentifier",
																"src": "16841:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16833:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16833:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16861:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16861:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16864:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16864:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16854:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16854:6:16"
																},
																"nativeSrc": "16854:14:16",
																"nodeType": "YulFunctionCall",
																"src": "16854:14:16"
															},
															"nativeSrc": "16854:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "16854:14:16"
														},
														{
															"nativeSrc": "16877:26:16",
															"nodeType": "YulAssignment",
															"src": "16877:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16895:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16895:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16898:4:16",
																		"nodeType": "YulLiteral",
																		"src": "16898:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16885:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "16885:9:16"
																},
																"nativeSrc": "16885:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16885:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16877:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16877:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16769:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16810:3:16",
														"nodeType": "YulTypedName",
														"src": "16810:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16818:4:16",
														"nodeType": "YulTypedName",
														"src": "16818:4:16",
														"type": ""
													}
												],
												"src": "16769:141:16"
											},
											{
												"body": {
													"nativeSrc": "16960:49:16",
													"nodeType": "YulBlock",
													"src": "16960:49:16",
													"statements": [
														{
															"nativeSrc": "16970:33:16",
															"nodeType": "YulAssignment",
															"src": "16970:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16988:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16988:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16995:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16995:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16984:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16984:3:16"
																		},
																		"nativeSrc": "16984:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16984:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17000:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17000:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16980:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16980:3:16"
																},
																"nativeSrc": "16980:23:16",
																"nodeType": "YulFunctionCall",
																"src": "16980:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16970:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16916:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16943:5:16",
														"nodeType": "YulTypedName",
														"src": "16943:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16953:6:16",
														"nodeType": "YulTypedName",
														"src": "16953:6:16",
														"type": ""
													}
												],
												"src": "16916:93:16"
											},
											{
												"body": {
													"nativeSrc": "17068:54:16",
													"nodeType": "YulBlock",
													"src": "17068:54:16",
													"statements": [
														{
															"nativeSrc": "17078:37:16",
															"nodeType": "YulAssignment",
															"src": "17078:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17103:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17103:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17109:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17109:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17099:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17099:3:16"
																},
																"nativeSrc": "17099:16:16",
																"nodeType": "YulFunctionCall",
																"src": "17099:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17078:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "17078:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "17015:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17043:4:16",
														"nodeType": "YulTypedName",
														"src": "17043:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17049:5:16",
														"nodeType": "YulTypedName",
														"src": "17049:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17059:8:16",
														"nodeType": "YulTypedName",
														"src": "17059:8:16",
														"type": ""
													}
												],
												"src": "17015:107:16"
											},
											{
												"body": {
													"nativeSrc": "17204:317:16",
													"nodeType": "YulBlock",
													"src": "17204:317:16",
													"statements": [
														{
															"nativeSrc": "17214:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17214:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "17235:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "17235:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17247:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17247:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17231:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17231:3:16"
																},
																"nativeSrc": "17231:18:16",
																"nodeType": "YulFunctionCall",
																"src": "17231:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "17218:9:16",
																	"nodeType": "YulTypedName",
																	"src": "17218:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17258:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17258:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17289:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "17289:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17300:66:16",
																		"nodeType": "YulLiteral",
																		"src": "17300:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17270:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "17270:18:16"
																},
																"nativeSrc": "17270:97:16",
																"nodeType": "YulFunctionCall",
																"src": "17270:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17262:4:16",
																	"nodeType": "YulTypedName",
																	"src": "17262:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17376:51:16",
															"nodeType": "YulAssignment",
															"src": "17376:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17407:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "17407:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "17418:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "17418:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17388:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "17388:18:16"
																},
																"nativeSrc": "17388:39:16",
																"nodeType": "YulFunctionCall",
																"src": "17388:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "17376:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "17376:8:16"
																}
															]
														},
														{
															"nativeSrc": "17436:30:16",
															"nodeType": "YulAssignment",
															"src": "17436:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17449:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17449:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "17460:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "17460:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17456:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17456:3:16"
																		},
																		"nativeSrc": "17456:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17456:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17445:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17445:3:16"
																},
																"nativeSrc": "17445:21:16",
																"nodeType": "YulFunctionCall",
																"src": "17445:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17436:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "17436:5:16"
																}
															]
														},
														{
															"nativeSrc": "17475:40:16",
															"nodeType": "YulAssignment",
															"src": "17475:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17488:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17488:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "17499:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "17499:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "17509:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "17509:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17495:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17495:3:16"
																		},
																		"nativeSrc": "17495:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17495:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17485:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "17485:2:16"
																},
																"nativeSrc": "17485:30:16",
																"nodeType": "YulFunctionCall",
																"src": "17485:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17475:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17475:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "17128:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17165:5:16",
														"nodeType": "YulTypedName",
														"src": "17165:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "17172:10:16",
														"nodeType": "YulTypedName",
														"src": "17172:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "17184:8:16",
														"nodeType": "YulTypedName",
														"src": "17184:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17197:6:16",
														"nodeType": "YulTypedName",
														"src": "17197:6:16",
														"type": ""
													}
												],
												"src": "17128:393:16"
											},
											{
												"body": {
													"nativeSrc": "17559:28:16",
													"nodeType": "YulBlock",
													"src": "17559:28:16",
													"statements": [
														{
															"nativeSrc": "17569:12:16",
															"nodeType": "YulAssignment",
															"src": "17569:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "17576:5:16",
																"nodeType": "YulIdentifier",
																"src": "17576:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17569:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17569:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "17527:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17545:5:16",
														"nodeType": "YulTypedName",
														"src": "17545:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17555:3:16",
														"nodeType": "YulTypedName",
														"src": "17555:3:16",
														"type": ""
													}
												],
												"src": "17527:60:16"
											},
											{
												"body": {
													"nativeSrc": "17653:82:16",
													"nodeType": "YulBlock",
													"src": "17653:82:16",
													"statements": [
														{
															"nativeSrc": "17663:66:16",
															"nodeType": "YulAssignment",
															"src": "17663:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17721:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "17721:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17703:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "17703:17:16"
																				},
																				"nativeSrc": "17703:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17703:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17694:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "17694:8:16"
																		},
																		"nativeSrc": "17694:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17694:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17676:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "17676:17:16"
																},
																"nativeSrc": "17676:53:16",
																"nodeType": "YulFunctionCall",
																"src": "17676:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17663:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "17663:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "17593:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17633:5:16",
														"nodeType": "YulTypedName",
														"src": "17633:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17643:9:16",
														"nodeType": "YulTypedName",
														"src": "17643:9:16",
														"type": ""
													}
												],
												"src": "17593:142:16"
											},
											{
												"body": {
													"nativeSrc": "17788:28:16",
													"nodeType": "YulBlock",
													"src": "17788:28:16",
													"statements": [
														{
															"nativeSrc": "17798:12:16",
															"nodeType": "YulAssignment",
															"src": "17798:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "17805:5:16",
																"nodeType": "YulIdentifier",
																"src": "17805:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17798:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17798:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17741:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17774:5:16",
														"nodeType": "YulTypedName",
														"src": "17774:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17784:3:16",
														"nodeType": "YulTypedName",
														"src": "17784:3:16",
														"type": ""
													}
												],
												"src": "17741:75:16"
											},
											{
												"body": {
													"nativeSrc": "17898:193:16",
													"nodeType": "YulBlock",
													"src": "17898:193:16",
													"statements": [
														{
															"nativeSrc": "17908:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17908:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17963:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "17963:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17932:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "17932:30:16"
																},
																"nativeSrc": "17932:39:16",
																"nodeType": "YulFunctionCall",
																"src": "17932:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17912:16:16",
																	"nodeType": "YulTypedName",
																	"src": "17912:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17987:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17987:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "18027:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "18027:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "18021:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "18021:5:16"
																				},
																				"nativeSrc": "18021:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18021:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "18034:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "18034:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "18066:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "18066:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "18042:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "18042:23:16"
																				},
																				"nativeSrc": "18042:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18042:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17993:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "17993:27:16"
																		},
																		"nativeSrc": "17993:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17993:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17980:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17980:6:16"
																},
																"nativeSrc": "17980:105:16",
																"nodeType": "YulFunctionCall",
																"src": "17980:105:16"
															},
															"nativeSrc": "17980:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "17980:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17822:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17875:4:16",
														"nodeType": "YulTypedName",
														"src": "17875:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17881:6:16",
														"nodeType": "YulTypedName",
														"src": "17881:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17889:7:16",
														"nodeType": "YulTypedName",
														"src": "17889:7:16",
														"type": ""
													}
												],
												"src": "17822:269:16"
											},
											{
												"body": {
													"nativeSrc": "18146:24:16",
													"nodeType": "YulBlock",
													"src": "18146:24:16",
													"statements": [
														{
															"nativeSrc": "18156:8:16",
															"nodeType": "YulAssignment",
															"src": "18156:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "18163:1:16",
																"nodeType": "YulLiteral",
																"src": "18163:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18156:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18156:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "18097:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18142:3:16",
														"nodeType": "YulTypedName",
														"src": "18142:3:16",
														"type": ""
													}
												],
												"src": "18097:73:16"
											},
											{
												"body": {
													"nativeSrc": "18229:136:16",
													"nodeType": "YulBlock",
													"src": "18229:136:16",
													"statements": [
														{
															"nativeSrc": "18239:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18239:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "18253:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "18253:30:16"
																},
																"nativeSrc": "18253:32:16",
																"nodeType": "YulFunctionCall",
																"src": "18253:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "18243:6:16",
																	"nodeType": "YulTypedName",
																	"src": "18243:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18338:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18338:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18344:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18344:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "18352:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18352:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "18294:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "18294:43:16"
																},
																"nativeSrc": "18294:65:16",
																"nodeType": "YulFunctionCall",
																"src": "18294:65:16"
															},
															"nativeSrc": "18294:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "18294:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "18176:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18215:4:16",
														"nodeType": "YulTypedName",
														"src": "18215:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "18221:6:16",
														"nodeType": "YulTypedName",
														"src": "18221:6:16",
														"type": ""
													}
												],
												"src": "18176:189:16"
											},
											{
												"body": {
													"nativeSrc": "18421:136:16",
													"nodeType": "YulBlock",
													"src": "18421:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "18488:63:16",
																"nodeType": "YulBlock",
																"src": "18488:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18532:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "18532:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18539:1:16",
																					"nodeType": "YulLiteral",
																					"src": "18539:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "18502:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "18502:29:16"
																			},
																			"nativeSrc": "18502:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18502:39:16"
																		},
																		"nativeSrc": "18502:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18502:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "18441:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18441:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "18448:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18448:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18438:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18438:2:16"
																},
																"nativeSrc": "18438:14:16",
																"nodeType": "YulFunctionCall",
																"src": "18438:14:16"
															},
															"nativeSrc": "18431:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18453:26:16",
																"nodeType": "YulBlock",
																"src": "18453:26:16",
																"statements": [
																	{
																		"nativeSrc": "18455:22:16",
																		"nodeType": "YulAssignment",
																		"src": "18455:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18468:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "18468:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18475:1:16",
																					"nodeType": "YulLiteral",
																					"src": "18475:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18464:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "18464:3:16"
																			},
																			"nativeSrc": "18464:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18464:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "18455:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "18455:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18435:2:16",
																"nodeType": "YulBlock",
																"src": "18435:2:16",
																"statements": []
															},
															"src": "18431:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "18371:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "18409:5:16",
														"nodeType": "YulTypedName",
														"src": "18409:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18416:3:16",
														"nodeType": "YulTypedName",
														"src": "18416:3:16",
														"type": ""
													}
												],
												"src": "18371:186:16"
											},
											{
												"body": {
													"nativeSrc": "18642:464:16",
													"nodeType": "YulBlock",
													"src": "18642:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "18668:431:16",
																"nodeType": "YulBlock",
																"src": "18668:431:16",
																"statements": [
																	{
																		"nativeSrc": "18682:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18682:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18730:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "18730:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "18698:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "18698:31:16"
																			},
																			"nativeSrc": "18698:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18698:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "18686:8:16",
																				"nodeType": "YulTypedName",
																				"src": "18686:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18749:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18749:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18772:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "18772:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18800:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "18800:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18782:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "18782:17:16"
																					},
																					"nativeSrc": "18782:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18782:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18768:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "18768:3:16"
																			},
																			"nativeSrc": "18768:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18768:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18753:11:16",
																				"nodeType": "YulTypedName",
																				"src": "18753:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18969:27:16",
																			"nodeType": "YulBlock",
																			"src": "18969:27:16",
																			"statements": [
																				{
																					"nativeSrc": "18971:23:16",
																					"nodeType": "YulAssignment",
																					"src": "18971:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18986:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "18986:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18971:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "18971:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18953:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "18953:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18965:2:16",
																					"nodeType": "YulLiteral",
																					"src": "18965:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18950:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "18950:2:16"
																			},
																			"nativeSrc": "18950:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18950:18:16"
																		},
																		"nativeSrc": "18947:49:16",
																		"nodeType": "YulIf",
																		"src": "18947:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "19038:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "19038:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "19055:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "19055:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "19083:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19083:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "19065:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "19065:17:16"
																							},
																							"nativeSrc": "19065:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "19065:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "19051:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "19051:3:16"
																					},
																					"nativeSrc": "19051:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19051:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "19009:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "19009:28:16"
																			},
																			"nativeSrc": "19009:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19009:80:16"
																		},
																		"nativeSrc": "19009:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19009:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18659:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18659:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18664:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18664:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18656:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18656:2:16"
																},
																"nativeSrc": "18656:11:16",
																"nodeType": "YulFunctionCall",
																"src": "18656:11:16"
															},
															"nativeSrc": "18653:446:16",
															"nodeType": "YulIf",
															"src": "18653:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "18563:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18618:5:16",
														"nodeType": "YulTypedName",
														"src": "18618:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18625:3:16",
														"nodeType": "YulTypedName",
														"src": "18625:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18630:10:16",
														"nodeType": "YulTypedName",
														"src": "18630:10:16",
														"type": ""
													}
												],
												"src": "18563:543:16"
											},
											{
												"body": {
													"nativeSrc": "19175:54:16",
													"nodeType": "YulBlock",
													"src": "19175:54:16",
													"statements": [
														{
															"nativeSrc": "19185:37:16",
															"nodeType": "YulAssignment",
															"src": "19185:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "19210:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19210:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19216:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19216:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "19206:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19206:3:16"
																},
																"nativeSrc": "19206:16:16",
																"nodeType": "YulFunctionCall",
																"src": "19206:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19185:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "19185:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "19112:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "19150:4:16",
														"nodeType": "YulTypedName",
														"src": "19150:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "19156:5:16",
														"nodeType": "YulTypedName",
														"src": "19156:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19166:8:16",
														"nodeType": "YulTypedName",
														"src": "19166:8:16",
														"type": ""
													}
												],
												"src": "19112:117:16"
											},
											{
												"body": {
													"nativeSrc": "19286:118:16",
													"nodeType": "YulBlock",
													"src": "19286:118:16",
													"statements": [
														{
															"nativeSrc": "19296:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19296:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19345:1:16",
																						"nodeType": "YulLiteral",
																						"src": "19345:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "19348:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "19348:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "19341:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "19341:3:16"
																				},
																				"nativeSrc": "19341:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19341:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19360:1:16",
																						"nodeType": "YulLiteral",
																						"src": "19360:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19356:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "19356:3:16"
																				},
																				"nativeSrc": "19356:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19356:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "19312:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "19312:28:16"
																		},
																		"nativeSrc": "19312:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19312:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "19308:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19308:3:16"
																},
																"nativeSrc": "19308:56:16",
																"nodeType": "YulFunctionCall",
																"src": "19308:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19300:4:16",
																	"nodeType": "YulTypedName",
																	"src": "19300:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19373:25:16",
															"nodeType": "YulAssignment",
															"src": "19373:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19387:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19387:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "19393:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19393:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19383:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19383:3:16"
																},
																"nativeSrc": "19383:15:16",
																"nodeType": "YulFunctionCall",
																"src": "19383:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19373:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19373:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "19235:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19263:4:16",
														"nodeType": "YulTypedName",
														"src": "19263:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "19269:5:16",
														"nodeType": "YulTypedName",
														"src": "19269:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19279:6:16",
														"nodeType": "YulTypedName",
														"src": "19279:6:16",
														"type": ""
													}
												],
												"src": "19235:169:16"
											},
											{
												"body": {
													"nativeSrc": "19490:214:16",
													"nodeType": "YulBlock",
													"src": "19490:214:16",
													"statements": [
														{
															"nativeSrc": "19623:37:16",
															"nodeType": "YulAssignment",
															"src": "19623:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19650:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19650:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "19656:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19656:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "19631:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "19631:18:16"
																},
																"nativeSrc": "19631:29:16",
																"nodeType": "YulFunctionCall",
																"src": "19631:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19623:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19623:4:16"
																}
															]
														},
														{
															"nativeSrc": "19669:29:16",
															"nodeType": "YulAssignment",
															"src": "19669:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19680:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19680:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19690:1:16",
																				"nodeType": "YulLiteral",
																				"src": "19690:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19693:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "19693:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19686:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19686:3:16"
																		},
																		"nativeSrc": "19686:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19686:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19677:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19677:2:16"
																},
																"nativeSrc": "19677:21:16",
																"nodeType": "YulFunctionCall",
																"src": "19677:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19669:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19669:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "19409:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19471:4:16",
														"nodeType": "YulTypedName",
														"src": "19471:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19477:3:16",
														"nodeType": "YulTypedName",
														"src": "19477:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "19485:4:16",
														"nodeType": "YulTypedName",
														"src": "19485:4:16",
														"type": ""
													}
												],
												"src": "19409:295:16"
											},
											{
												"body": {
													"nativeSrc": "19801:1303:16",
													"nodeType": "YulBlock",
													"src": "19801:1303:16",
													"statements": [
														{
															"nativeSrc": "19812:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19812:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19859:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19859:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19826:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "19826:32:16"
																},
																"nativeSrc": "19826:37:16",
																"nodeType": "YulFunctionCall",
																"src": "19826:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19816:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19816:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19948:22:16",
																"nodeType": "YulBlock",
																"src": "19948:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19950:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "19950:16:16"
																			},
																			"nativeSrc": "19950:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19950:18:16"
																		},
																		"nativeSrc": "19950:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19950:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19920:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19920:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19928:18:16",
																		"nodeType": "YulLiteral",
																		"src": "19928:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19917:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19917:2:16"
																},
																"nativeSrc": "19917:30:16",
																"nodeType": "YulFunctionCall",
																"src": "19917:30:16"
															},
															"nativeSrc": "19914:56:16",
															"nodeType": "YulIf",
															"src": "19914:56:16"
														},
														{
															"nativeSrc": "19980:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19980:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "20026:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "20026:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "20020:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "20020:5:16"
																		},
																		"nativeSrc": "20020:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20020:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19994:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "19994:25:16"
																},
																"nativeSrc": "19994:38:16",
																"nodeType": "YulFunctionCall",
																"src": "19994:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19984:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19984:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20125:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20125:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "20131:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20131:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "20139:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20139:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "20079:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "20079:45:16"
																},
																"nativeSrc": "20079:67:16",
																"nodeType": "YulFunctionCall",
																"src": "20079:67:16"
															},
															"nativeSrc": "20079:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "20079:67:16"
														},
														{
															"nativeSrc": "20156:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "20156:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "20173:1:16",
																"nodeType": "YulLiteral",
																"src": "20173:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20160:9:16",
																	"nodeType": "YulTypedName",
																	"src": "20160:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20184:17:16",
															"nodeType": "YulAssignment",
															"src": "20184:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "20197:4:16",
																"nodeType": "YulLiteral",
																"src": "20197:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20184:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "20184:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "20248:611:16",
																		"nodeType": "YulBlock",
																		"src": "20248:611:16",
																		"statements": [
																			{
																				"nativeSrc": "20262:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20262:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "20281:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "20281:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "20293:4:16",
																									"nodeType": "YulLiteral",
																									"src": "20293:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "20289:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "20289:3:16"
																							},
																							"nativeSrc": "20289:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "20289:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "20277:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "20277:3:16"
																					},
																					"nativeSrc": "20277:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20277:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "20266:7:16",
																						"nodeType": "YulTypedName",
																						"src": "20266:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20313:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20313:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20359:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "20359:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "20327:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "20327:31:16"
																					},
																					"nativeSrc": "20327:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20327:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "20317:6:16",
																						"nodeType": "YulTypedName",
																						"src": "20317:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20377:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20377:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20386:1:16",
																					"nodeType": "YulLiteral",
																					"src": "20386:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "20381:1:16",
																						"nodeType": "YulTypedName",
																						"src": "20381:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20445:163:16",
																					"nodeType": "YulBlock",
																					"src": "20445:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20470:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "20470:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "20488:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "20488:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "20493:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "20493:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "20484:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "20484:3:16"
																												},
																												"nativeSrc": "20484:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "20484:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "20478:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "20478:5:16"
																										},
																										"nativeSrc": "20478:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20478:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20463:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20463:6:16"
																								},
																								"nativeSrc": "20463:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20463:42:16"
																							},
																							"nativeSrc": "20463:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "20463:42:16"
																						},
																						{
																							"nativeSrc": "20522:24:16",
																							"nodeType": "YulAssignment",
																							"src": "20522:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20536:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "20536:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20544:1:16",
																										"nodeType": "YulLiteral",
																										"src": "20544:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20532:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "20532:3:16"
																								},
																								"nativeSrc": "20532:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20532:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "20522:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20522:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "20563:31:16",
																							"nodeType": "YulAssignment",
																							"src": "20563:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "20580:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "20580:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20591:2:16",
																										"nodeType": "YulLiteral",
																										"src": "20591:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20576:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "20576:3:16"
																								},
																								"nativeSrc": "20576:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20576:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "20563:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "20563:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20411:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "20411:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20414:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "20414:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20408:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "20408:2:16"
																					},
																					"nativeSrc": "20408:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20408:14:16"
																				},
																				"nativeSrc": "20400:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20423:21:16",
																					"nodeType": "YulBlock",
																					"src": "20423:21:16",
																					"statements": [
																						{
																							"nativeSrc": "20425:17:16",
																							"nodeType": "YulAssignment",
																							"src": "20425:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20434:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "20434:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20437:4:16",
																										"nodeType": "YulLiteral",
																										"src": "20437:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20430:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "20430:3:16"
																								},
																								"nativeSrc": "20430:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20430:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20425:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "20425:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20404:3:16",
																					"nodeType": "YulBlock",
																					"src": "20404:3:16",
																					"statements": []
																				},
																				"src": "20400:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "20644:156:16",
																					"nodeType": "YulBlock",
																					"src": "20644:156:16",
																					"statements": [
																						{
																							"nativeSrc": "20662:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20662:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20689:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "20689:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20694:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20694:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20685:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "20685:3:16"
																										},
																										"nativeSrc": "20685:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20685:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20679:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20679:5:16"
																								},
																								"nativeSrc": "20679:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20679:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20666:9:16",
																									"nodeType": "YulTypedName",
																									"src": "20666:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20729:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "20729:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20756:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20756:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20771:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "20771:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20779:4:16",
																														"nodeType": "YulLiteral",
																														"src": "20779:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20767:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "20767:3:16"
																												},
																												"nativeSrc": "20767:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "20767:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20737:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "20737:18:16"
																										},
																										"nativeSrc": "20737:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20737:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20722:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20722:6:16"
																								},
																								"nativeSrc": "20722:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20722:64:16"
																							},
																							"nativeSrc": "20722:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "20722:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20627:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "20627:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20636:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "20636:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20624:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "20624:2:16"
																					},
																					"nativeSrc": "20624:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20624:19:16"
																				},
																				"nativeSrc": "20621:179:16",
																				"nodeType": "YulIf",
																				"src": "20621:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20820:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "20820:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20834:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "20834:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20842:1:16",
																											"nodeType": "YulLiteral",
																											"src": "20842:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20830:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "20830:3:16"
																									},
																									"nativeSrc": "20830:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "20830:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20846:1:16",
																									"nodeType": "YulLiteral",
																									"src": "20846:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20826:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "20826:3:16"
																							},
																							"nativeSrc": "20826:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "20826:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20813:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "20813:6:16"
																					},
																					"nativeSrc": "20813:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20813:36:16"
																				},
																				"nativeSrc": "20813:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "20813:36:16"
																			}
																		]
																	},
																	"nativeSrc": "20241:618:16",
																	"nodeType": "YulCase",
																	"src": "20241:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20246:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20246:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20876:222:16",
																		"nodeType": "YulBlock",
																		"src": "20876:222:16",
																		"statements": [
																			{
																				"nativeSrc": "20890:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20890:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20903:1:16",
																					"nodeType": "YulLiteral",
																					"src": "20903:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20894:5:16",
																						"nodeType": "YulTypedName",
																						"src": "20894:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20927:67:16",
																					"nodeType": "YulBlock",
																					"src": "20927:67:16",
																					"statements": [
																						{
																							"nativeSrc": "20945:35:16",
																							"nodeType": "YulAssignment",
																							"src": "20945:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20964:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "20964:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20969:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20969:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20960:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "20960:3:16"
																										},
																										"nativeSrc": "20960:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20960:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20954:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20954:5:16"
																								},
																								"nativeSrc": "20954:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20954:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20945:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20945:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20920:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "20920:6:16"
																				},
																				"nativeSrc": "20917:77:16",
																				"nodeType": "YulIf",
																				"src": "20917:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21014:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "21014:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "21073:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "21073:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "21080:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "21080:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "21020:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "21020:52:16"
																							},
																							"nativeSrc": "21020:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "21020:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21007:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "21007:6:16"
																					},
																					"nativeSrc": "21007:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "21007:81:16"
																				},
																				"nativeSrc": "21007:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "21007:81:16"
																			}
																		]
																	},
																	"nativeSrc": "20868:230:16",
																	"nodeType": "YulCase",
																	"src": "20868:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20221:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20221:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20229:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20229:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20218:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "20218:2:16"
																},
																"nativeSrc": "20218:14:16",
																"nodeType": "YulFunctionCall",
																"src": "20218:14:16"
															},
															"nativeSrc": "20211:887:16",
															"nodeType": "YulSwitch",
															"src": "20211:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19709:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19790:4:16",
														"nodeType": "YulTypedName",
														"src": "19790:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19796:3:16",
														"nodeType": "YulTypedName",
														"src": "19796:3:16",
														"type": ""
													}
												],
												"src": "19709:1395:16"
											},
											{
												"body": {
													"nativeSrc": "21236:206:16",
													"nodeType": "YulBlock",
													"src": "21236:206:16",
													"statements": [
														{
															"nativeSrc": "21246:26:16",
															"nodeType": "YulAssignment",
															"src": "21246:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21258:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "21258:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21269:2:16",
																		"nodeType": "YulLiteral",
																		"src": "21269:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21254:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21254:3:16"
																},
																"nativeSrc": "21254:18:16",
																"nodeType": "YulFunctionCall",
																"src": "21254:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21246:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21246:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21326:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21326:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21339:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21339:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21350:1:16",
																				"nodeType": "YulLiteral",
																				"src": "21350:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21335:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21335:3:16"
																		},
																		"nativeSrc": "21335:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21335:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21282:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21282:43:16"
																},
																"nativeSrc": "21282:71:16",
																"nodeType": "YulFunctionCall",
																"src": "21282:71:16"
															},
															"nativeSrc": "21282:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "21282:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21407:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21407:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21420:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21420:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21431:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21431:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21416:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21416:3:16"
																		},
																		"nativeSrc": "21416:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21416:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21363:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21363:43:16"
																},
																"nativeSrc": "21363:72:16",
																"nodeType": "YulFunctionCall",
																"src": "21363:72:16"
															},
															"nativeSrc": "21363:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "21363:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21110:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21200:9:16",
														"nodeType": "YulTypedName",
														"src": "21200:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21212:6:16",
														"nodeType": "YulTypedName",
														"src": "21212:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21220:6:16",
														"nodeType": "YulTypedName",
														"src": "21220:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21231:4:16",
														"nodeType": "YulTypedName",
														"src": "21231:4:16",
														"type": ""
													}
												],
												"src": "21110:332:16"
											},
											{
												"body": {
													"nativeSrc": "21476:152:16",
													"nodeType": "YulBlock",
													"src": "21476:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21493:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21493:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21496:77:16",
																		"nodeType": "YulLiteral",
																		"src": "21496:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21486:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21486:6:16"
																},
																"nativeSrc": "21486:88:16",
																"nodeType": "YulFunctionCall",
																"src": "21486:88:16"
															},
															"nativeSrc": "21486:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "21486:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21590:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21590:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21593:4:16",
																		"nodeType": "YulLiteral",
																		"src": "21593:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21583:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21583:6:16"
																},
																"nativeSrc": "21583:15:16",
																"nodeType": "YulFunctionCall",
																"src": "21583:15:16"
															},
															"nativeSrc": "21583:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "21583:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21614:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21614:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21617:4:16",
																		"nodeType": "YulLiteral",
																		"src": "21617:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21607:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21607:6:16"
																},
																"nativeSrc": "21607:15:16",
																"nodeType": "YulFunctionCall",
																"src": "21607:15:16"
															},
															"nativeSrc": "21607:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "21607:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21448:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "21448:180:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806370a0823111610095578063c754584911610064578063c75458491461027f578063c87b56dd1461029b578063d082e381146102cb578063e985e9c5146102e9576100f3565b806370a08231146101f957806395d89b4114610229578063a22cb46514610247578063b88d4fde14610263576100f3565b8063095ea7b3116100d1578063095ea7b31461017557806323b872dd1461019157806342842e0e146101ad5780636352211e146101c9576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c91906117fe565b610319565b60405161011e9190611843565b60405180910390f35b61012f610379565b60405161013c91906118e6565b60405180910390f35b61015f600480360381019061015a9190611939565b610408565b60405161016c91906119a3565b60405180910390f35b61018f600480360381019061018a91906119e6565b610423565b005b6101ab60048036038101906101a69190611a24565b610439565b005b6101c760048036038101906101c29190611a24565b610538565b005b6101e360048036038101906101de9190611939565b610557565b6040516101f091906119a3565b60405180910390f35b610213600480360381019061020e9190611a74565b610568565b6040516102209190611aae565b60405180910390f35b61023161061e565b60405161023e91906118e6565b60405180910390f35b610261600480360381019061025c9190611af1565b6106ae565b005b61027d60048036038101906102789190611c5b565b6106c4565b005b61029960048036038101906102949190611d79565b6106e1565b005b6102b560048036038101906102b09190611939565b610752565b6040516102c291906118e6565b60405180910390f35b6102d361085d565b6040516102e09190611aae565b60405180910390f35b61030360048036038101906102fe9190611dc0565b610863565b6040516103109190611843565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103725750610371826108f1565b5b9050919050565b60605f805461038790611e2b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390611e2b565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b5050505050905090565b5f610412826109d2565b5061041c82610a58565b9050919050565b6104358282610430610a91565b610a98565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104a091906119a3565b60405180910390fd5b5f6104bc83836104b7610a91565b610aaa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610532578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052993929190611e5b565b60405180910390fd5b50505050565b61055283838360405180602001604052805f8152506106c4565b505050565b5f610561826109d2565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d9575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105d091906119a3565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461062d90611e2b565b80601f016020809104026020016040519081016040528092919081815260200182805461065990611e2b565b80156106a45780601f1061067b576101008083540402835291602001916106a4565b820191905f5260205f20905b81548152906001019060200180831161068757829003601f168201915b5050505050905090565b6106c06106b9610a91565b8383610cb5565b5050565b6106cf848484610439565b6106db84848484610e1e565b50505050565b6106ed33600754610fd0565b6106f9600754826110c3565b7f899b99f6c26ce7a463fc72a3a36ae78b414dae9cfa6e88e8580ec708e70f30b0336007548360405161072e93929190611e90565b60405180910390a1600160075f8282546107489190611ef9565b9250508190555050565b606061075d826109d2565b505f60065f8481526020019081526020015f20805461077b90611e2b565b80601f01602080910402602001604051908101604052809291908181526020018280546107a790611e2b565b80156107f25780601f106107c9576101008083540402835291602001916107f2565b820191905f5260205f20905b8154815290600101906020018083116107d557829003601f168201915b505050505090505f61080261111d565b90505f815103610816578192505050610858565b5f8251111561084a578082604051602001610832929190611f66565b60405160208183030381529060405292505050610858565b61085384611133565b925050505b919050565b60075481565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109bb57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109cb57506109ca82611199565b5b9050919050565b5f806109dd83611202565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a469190611aae565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610aa5838383600161123b565b505050565b5f80610ab584611202565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610af657610af58184866113fa565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b8157610b355f855f8061123b565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c0057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d2557816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d1c91906119a3565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e119190611843565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610fca578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e61610a91565b8685856040518563ffffffff1660e01b8152600401610e839493929190611fdb565b6020604051808303815f875af1925050508015610ebe57506040513d601f19601f82011682018060405250810190610ebb9190612039565b60015b610f3f573d805f8114610eec576040519150601f19603f3d011682016040523d82523d5f602084013e610ef1565b606091505b505f815103610f3757836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f2e91906119a3565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610fc857836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fbf91906119a3565b60405180910390fd5b505b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611040575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161103791906119a3565b60405180910390fd5b5f61104c83835f610aaa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110be575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016110b591906119a3565b60405180910390fd5b505050565b8060065f8481526020019081526020015f2090816110e19190612201565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111119190611aae565b60405180910390a15050565b606060405180602001604052805f815250905090565b606061113e826109d2565b505f61114861111d565b90505f8151116111665760405180602001604052805f815250611191565b80611170846114bd565b604051602001611181929190611f66565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061127357505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113a5575f611282846109d2565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156112ec57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156112ff57506112fd8184610863565b155b1561134157826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161133891906119a3565b60405180910390fd5b81156113a357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611405838383611587565b6114b8575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361147957806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114709190611aae565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016114af9291906122d0565b60405180910390fd5b505050565b60605f60016114cb84611647565b0190505f8167ffffffffffffffff8111156114e9576114e8611b37565b5b6040519080825280601f01601f19166020018201604052801561151b5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561157c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611571576115706122f7565b5b0494505f8503611528575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561163e57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115ff57506115fe8484610863565b5b8061163d57508273ffffffffffffffffffffffffffffffffffffffff1661162583610a58565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106116a3577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611699576116986122f7565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116e0576d04ee2d6d415b85acef810000000083816116d6576116d56122f7565b5b0492506020810190505b662386f26fc10000831061170f57662386f26fc100008381611705576117046122f7565b5b0492506010810190505b6305f5e1008310611738576305f5e100838161172e5761172d6122f7565b5b0492506008810190505b612710831061175d576127108381611753576117526122f7565b5b0492506004810190505b606483106117805760648381611776576117756122f7565b5b0492506002810190505b600a831061178f576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117dd816117a9565b81146117e7575f80fd5b50565b5f813590506117f8816117d4565b92915050565b5f60208284031215611813576118126117a1565b5b5f611820848285016117ea565b91505092915050565b5f8115159050919050565b61183d81611829565b82525050565b5f6020820190506118565f830184611834565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611893578082015181840152602081019050611878565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6118b88261185c565b6118c28185611866565b93506118d2818560208601611876565b6118db8161189e565b840191505092915050565b5f6020820190508181035f8301526118fe81846118ae565b905092915050565b5f819050919050565b61191881611906565b8114611922575f80fd5b50565b5f813590506119338161190f565b92915050565b5f6020828403121561194e5761194d6117a1565b5b5f61195b84828501611925565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61198d82611964565b9050919050565b61199d81611983565b82525050565b5f6020820190506119b65f830184611994565b92915050565b6119c581611983565b81146119cf575f80fd5b50565b5f813590506119e0816119bc565b92915050565b5f80604083850312156119fc576119fb6117a1565b5b5f611a09858286016119d2565b9250506020611a1a85828601611925565b9150509250929050565b5f805f60608486031215611a3b57611a3a6117a1565b5b5f611a48868287016119d2565b9350506020611a59868287016119d2565b9250506040611a6a86828701611925565b9150509250925092565b5f60208284031215611a8957611a886117a1565b5b5f611a96848285016119d2565b91505092915050565b611aa881611906565b82525050565b5f602082019050611ac15f830184611a9f565b92915050565b611ad081611829565b8114611ada575f80fd5b50565b5f81359050611aeb81611ac7565b92915050565b5f8060408385031215611b0757611b066117a1565b5b5f611b14858286016119d2565b9250506020611b2585828601611add565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b6d8261189e565b810181811067ffffffffffffffff82111715611b8c57611b8b611b37565b5b80604052505050565b5f611b9e611798565b9050611baa8282611b64565b919050565b5f67ffffffffffffffff821115611bc957611bc8611b37565b5b611bd28261189e565b9050602081019050919050565b828183375f83830152505050565b5f611bff611bfa84611baf565b611b95565b905082815260208101848484011115611c1b57611c1a611b33565b5b611c26848285611bdf565b509392505050565b5f82601f830112611c4257611c41611b2f565b5b8135611c52848260208601611bed565b91505092915050565b5f805f8060808587031215611c7357611c726117a1565b5b5f611c80878288016119d2565b9450506020611c91878288016119d2565b9350506040611ca287828801611925565b925050606085013567ffffffffffffffff811115611cc357611cc26117a5565b5b611ccf87828801611c2e565b91505092959194509250565b5f67ffffffffffffffff821115611cf557611cf4611b37565b5b611cfe8261189e565b9050602081019050919050565b5f611d1d611d1884611cdb565b611b95565b905082815260208101848484011115611d3957611d38611b33565b5b611d44848285611bdf565b509392505050565b5f82601f830112611d6057611d5f611b2f565b5b8135611d70848260208601611d0b565b91505092915050565b5f60208284031215611d8e57611d8d6117a1565b5b5f82013567ffffffffffffffff811115611dab57611daa6117a5565b5b611db784828501611d4c565b91505092915050565b5f8060408385031215611dd657611dd56117a1565b5b5f611de3858286016119d2565b9250506020611df4858286016119d2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e4257607f821691505b602082108103611e5557611e54611dfe565b5b50919050565b5f606082019050611e6e5f830186611994565b611e7b6020830185611a9f565b611e886040830184611994565b949350505050565b5f606082019050611ea35f830186611994565b611eb06020830185611a9f565b8181036040830152611ec281846118ae565b9050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0382611906565b9150611f0e83611906565b9250828201905080821115611f2657611f25611ecc565b5b92915050565b5f81905092915050565b5f611f408261185c565b611f4a8185611f2c565b9350611f5a818560208601611876565b80840191505092915050565b5f611f718285611f36565b9150611f7d8284611f36565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611fad82611f89565b611fb78185611f93565b9350611fc7818560208601611876565b611fd08161189e565b840191505092915050565b5f608082019050611fee5f830187611994565b611ffb6020830186611994565b6120086040830185611a9f565b818103606083015261201a8184611fa3565b905095945050505050565b5f81519050612033816117d4565b92915050565b5f6020828403121561204e5761204d6117a1565b5b5f61205b84828501612025565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026120c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612085565b6120ca8683612085565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6121056121006120fb84611906565b6120e2565b611906565b9050919050565b5f819050919050565b61211e836120eb565b61213261212a8261210c565b848454612091565b825550505050565b5f90565b61214661213a565b612151818484612115565b505050565b5b81811015612174576121695f8261213e565b600181019050612157565b5050565b601f8211156121b95761218a81612064565b61219384612076565b810160208510156121a2578190505b6121b66121ae85612076565b830182612156565b50505b505050565b5f82821c905092915050565b5f6121d95f19846008026121be565b1980831691505092915050565b5f6121f183836121ca565b9150826002028217905092915050565b61220a8261185c565b67ffffffffffffffff81111561222357612222611b37565b5b61222d8254611e2b565b612238828285612178565b5f60209050601f831160018114612269575f8415612257578287015190505b61226185826121e6565b8655506122c8565b601f19841661227786612064565b5f5b8281101561229e57848901518255600182019150602085019450602081019050612279565b868310156122bb57848901516122b7601f8916826121ca565b8355505b6001600288020188555050505b505050505050565b5f6040820190506122e35f830185611994565b6122f06020830184611a9f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212201f2843552e83dca54c2f39d4a4296a1a244fa43468eb29f005b972122e009cfe64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7545849 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC7545849 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xD082E381 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x263 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1D79 JUMP JUMPDEST PUSH2 0x6E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0x85D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x372 JUMPI POP PUSH2 0x371 DUP3 PUSH2 0x8F1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x412 DUP3 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH2 0x41C DUP3 PUSH2 0xA58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x435 DUP3 DUP3 PUSH2 0x430 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x4B7 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x532 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x561 DUP3 PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x687 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C0 PUSH2 0x6B9 PUSH2 0xA91 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6CF DUP5 DUP5 DUP5 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x6DB DUP5 DUP5 DUP5 DUP5 PUSH2 0xE1E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6ED CALLER PUSH1 0x7 SLOAD PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x6F9 PUSH1 0x7 SLOAD DUP3 PUSH2 0x10C3 JUMP JUMPDEST PUSH32 0x899B99F6C26CE7A463FC72A3A36AE78B414DAE9CFA6E88E8580EC708E70F30B0 CALLER PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x72E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x75D DUP3 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x77B SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x802 PUSH2 0x111D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x816 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x858 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x84A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x832 SWAP3 SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x858 JUMP JUMPDEST PUSH2 0x853 DUP5 PUSH2 0x1133 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9BB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x9CB JUMPI POP PUSH2 0x9CA DUP3 PUSH2 0x1199 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9DD DUP4 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAA5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x123B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAB5 DUP5 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF6 JUMPI PUSH2 0xAF5 DUP2 DUP5 DUP7 PUSH2 0x13FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB35 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC00 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD25 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xFCA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xE61 PUSH2 0xA91 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE83 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEBE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF3F JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEEC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xF37 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xFC8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1040 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x104C DUP4 DUP4 PUSH0 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x2201 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113E DUP3 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH0 PUSH2 0x1148 PUSH2 0x111D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1191 JUMP JUMPDEST DUP1 PUSH2 0x1170 DUP5 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1181 SWAP3 SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1273 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x13A5 JUMPI PUSH0 PUSH2 0x1282 DUP5 PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x12EC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x12FF JUMPI POP PUSH2 0x12FD DUP2 DUP5 PUSH2 0x863 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1341 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1338 SWAP2 SWAP1 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x13A3 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1405 DUP4 DUP4 DUP4 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x14B8 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1479 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP3 SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x14CB DUP5 PUSH2 0x1647 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E9 JUMPI PUSH2 0x14E8 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x151B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x157C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1528 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x163E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x15FF JUMPI POP PUSH2 0x15FE DUP5 DUP5 PUSH2 0x863 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x163D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1625 DUP4 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16A3 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1699 JUMPI PUSH2 0x1698 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x16E0 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x16D6 JUMPI PUSH2 0x16D5 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x170F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1738 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x172E JUMPI PUSH2 0x172D PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x175D JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1780 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x22F7 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x178F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DD DUP2 PUSH2 0x17A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F8 DUP2 PUSH2 0x17D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1813 JUMPI PUSH2 0x1812 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1820 DUP5 DUP3 DUP6 ADD PUSH2 0x17EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183D DUP2 PUSH2 0x1829 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1856 PUSH0 DUP4 ADD DUP5 PUSH2 0x1834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1893 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1878 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18B8 DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x18C2 DUP2 DUP6 PUSH2 0x1866 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1918 DUP2 PUSH2 0x1906 JUMP JUMPDEST DUP2 EQ PUSH2 0x1922 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1933 DUP2 PUSH2 0x190F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194E JUMPI PUSH2 0x194D PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195B DUP5 DUP3 DUP6 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x198D DUP3 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199D DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19C5 DUP2 PUSH2 0x1983 JUMP JUMPDEST DUP2 EQ PUSH2 0x19CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E0 DUP2 PUSH2 0x19BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A09 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A1A DUP6 DUP3 DUP7 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A48 DUP7 DUP3 DUP8 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A59 DUP7 DUP3 DUP8 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6A DUP7 DUP3 DUP8 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A89 JUMPI PUSH2 0x1A88 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A96 DUP5 DUP3 DUP6 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA8 DUP2 PUSH2 0x1906 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD0 DUP2 PUSH2 0x1829 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AEB DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH2 0x1B06 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B14 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B25 DUP6 DUP3 DUP7 ADD PUSH2 0x1ADD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B6D DUP3 PUSH2 0x189E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B8C JUMPI PUSH2 0x1B8B PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9E PUSH2 0x1798 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BAA DUP3 DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD2 DUP3 PUSH2 0x189E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFF PUSH2 0x1BFA DUP5 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1B33 JUMP JUMPDEST JUMPDEST PUSH2 0x1C26 DUP5 DUP3 DUP6 PUSH2 0x1BDF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C52 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C73 JUMPI PUSH2 0x1C72 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C80 DUP8 DUP3 DUP9 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C91 DUP8 DUP3 DUP9 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1CA2 DUP8 DUP3 DUP9 ADD PUSH2 0x1925 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC3 JUMPI PUSH2 0x1CC2 PUSH2 0x17A5 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCF DUP8 DUP3 DUP9 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CF5 JUMPI PUSH2 0x1CF4 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH2 0x1CFE DUP3 PUSH2 0x189E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D1D PUSH2 0x1D18 DUP5 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D38 PUSH2 0x1B33 JUMP JUMPDEST JUMPDEST PUSH2 0x1D44 DUP5 DUP3 DUP6 PUSH2 0x1BDF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D60 JUMPI PUSH2 0x1D5F PUSH2 0x1B2F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D70 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x17A5 JUMP JUMPDEST JUMPDEST PUSH2 0x1DB7 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD6 JUMPI PUSH2 0x1DD5 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE3 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF4 DUP6 DUP3 DUP7 ADD PUSH2 0x19D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x1DFE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH0 DUP4 ADD DUP7 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1E7B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1994 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EA3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1EB0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A9F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1EC2 DUP2 DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F03 DUP3 PUSH2 0x1906 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F0E DUP4 PUSH2 0x1906 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1ECC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F40 DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x1F4A DUP2 DUP6 PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1F5A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1876 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F71 DUP3 DUP6 PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F7D DUP3 DUP5 PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAD DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x1FB7 DUP2 DUP6 PUSH2 0x1F93 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FC7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x1FD0 DUP2 PUSH2 0x189E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FEE PUSH0 DUP4 ADD DUP8 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1FFB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x2008 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A9F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x201A DUP2 DUP5 PUSH2 0x1FA3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2033 DUP2 PUSH2 0x17D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x205B DUP5 DUP3 DUP6 ADD PUSH2 0x2025 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x20C0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2085 JUMP JUMPDEST PUSH2 0x20CA DUP7 DUP4 PUSH2 0x2085 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2105 PUSH2 0x2100 PUSH2 0x20FB DUP5 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211E DUP4 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x2132 PUSH2 0x212A DUP3 PUSH2 0x210C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2091 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2146 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x2151 DUP2 DUP5 DUP5 PUSH2 0x2115 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2169 PUSH0 DUP3 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2157 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x21B9 JUMPI PUSH2 0x218A DUP2 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x2193 DUP5 PUSH2 0x2076 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x21A2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x21B6 PUSH2 0x21AE DUP6 PUSH2 0x2076 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2156 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21D9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x21BE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F1 DUP4 DUP4 PUSH2 0x21CA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x220A DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x2222 PUSH2 0x1B37 JUMP JUMPDEST JUMPDEST PUSH2 0x222D DUP3 SLOAD PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x2238 DUP3 DUP3 DUP6 PUSH2 0x2178 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2269 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2257 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2261 DUP6 DUP3 PUSH2 0x21E6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2277 DUP7 PUSH2 0x2064 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x229E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2279 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22BB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22B7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x21CA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22E3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x22F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A9F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0x28 NUMBER SSTORE 0x2E DUP4 0xDC 0xA5 0x4C 0x2F CODECOPY 0xD4 LOG4 0x29 PUSH11 0x1A244FA43468EB29F005B9 PUSH19 0x122E009CFE64736F6C63430008180033000000 ",
							"sourceMap": "143:493:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;395:238:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;199:27:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:7;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:4:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;395:238:15:-;455:31;461:10;473:12;;455:5;:31::i;:::-;497:36;510:12;;524:8;497:12;:36::i;:::-;549:48;562:10;574:12;;588:8;549:48;;;;;;;;:::i;:::-;;;;;;;;624:1;608:12;;:17;;;;;;;:::i;:::-;;;;;;;;395:238;:::o;1210:593:7:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;199:27:15:-;;;;:::o;3928:153:4:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;14418:120:4:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;1922:167:7:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;3174:92:4:-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;762:146:11:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:4:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;637:698:10:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;6376:272:4:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;12214:916:13:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:509::-;11165:6;11214:2;11202:9;11193:7;11189:23;11185:32;11182:119;;;11220:79;;:::i;:::-;11182:119;11368:1;11357:9;11353:17;11340:31;11398:18;11390:6;11387:30;11384:117;;;11420:79;;:::i;:::-;11384:117;11525:63;11580:7;11571:6;11560:9;11556:22;11525:63;:::i;:::-;11515:73;;11311:287;11096:509;;;;:::o;11611:474::-;11679:6;11687;11736:2;11724:9;11715:7;11711:23;11707:32;11704:119;;;11742:79;;:::i;:::-;11704:119;11862:1;11887:53;11932:7;11923:6;11912:9;11908:22;11887:53;:::i;:::-;11877:63;;11833:117;11989:2;12015:53;12060:7;12051:6;12040:9;12036:22;12015:53;:::i;:::-;12005:63;;11960:118;11611:474;;;;;:::o;12091:180::-;12139:77;12136:1;12129:88;12236:4;12233:1;12226:15;12260:4;12257:1;12250:15;12277:320;12321:6;12358:1;12352:4;12348:12;12338:22;;12405:1;12399:4;12395:12;12426:18;12416:81;;12482:4;12474:6;12470:17;12460:27;;12416:81;12544:2;12536:6;12533:14;12513:18;12510:38;12507:84;;12563:18;;:::i;:::-;12507:84;12328:269;12277:320;;;:::o;12603:442::-;12752:4;12790:2;12779:9;12775:18;12767:26;;12803:71;12871:1;12860:9;12856:17;12847:6;12803:71;:::i;:::-;12884:72;12952:2;12941:9;12937:18;12928:6;12884:72;:::i;:::-;12966;13034:2;13023:9;13019:18;13010:6;12966:72;:::i;:::-;12603:442;;;;;;:::o;13051:533::-;13220:4;13258:2;13247:9;13243:18;13235:26;;13271:71;13339:1;13328:9;13324:17;13315:6;13271:71;:::i;:::-;13352:72;13420:2;13409:9;13405:18;13396:6;13352:72;:::i;:::-;13471:9;13465:4;13461:20;13456:2;13445:9;13441:18;13434:48;13499:78;13572:4;13563:6;13499:78;:::i;:::-;13491:86;;13051:533;;;;;;:::o;13590:180::-;13638:77;13635:1;13628:88;13735:4;13732:1;13725:15;13759:4;13756:1;13749:15;13776:191;13816:3;13835:20;13853:1;13835:20;:::i;:::-;13830:25;;13869:20;13887:1;13869:20;:::i;:::-;13864:25;;13912:1;13909;13905:9;13898:16;;13933:3;13930:1;13927:10;13924:36;;;13940:18;;:::i;:::-;13924:36;13776:191;;;;:::o;13973:148::-;14075:11;14112:3;14097:18;;13973:148;;;;:::o;14127:390::-;14233:3;14261:39;14294:5;14261:39;:::i;:::-;14316:89;14398:6;14393:3;14316:89;:::i;:::-;14309:96;;14414:65;14472:6;14467:3;14460:4;14453:5;14449:16;14414:65;:::i;:::-;14504:6;14499:3;14495:16;14488:23;;14237:280;14127:390;;;;:::o;14523:435::-;14703:3;14725:95;14816:3;14807:6;14725:95;:::i;:::-;14718:102;;14837:95;14928:3;14919:6;14837:95;:::i;:::-;14830:102;;14949:3;14942:10;;14523:435;;;;;:::o;14964:98::-;15015:6;15049:5;15043:12;15033:22;;14964:98;;;:::o;15068:168::-;15151:11;15185:6;15180:3;15173:19;15225:4;15220:3;15216:14;15201:29;;15068:168;;;;:::o;15242:373::-;15328:3;15356:38;15388:5;15356:38;:::i;:::-;15410:70;15473:6;15468:3;15410:70;:::i;:::-;15403:77;;15489:65;15547:6;15542:3;15535:4;15528:5;15524:16;15489:65;:::i;:::-;15579:29;15601:6;15579:29;:::i;:::-;15574:3;15570:39;15563:46;;15332:283;15242:373;;;;:::o;15621:640::-;15816:4;15854:3;15843:9;15839:19;15831:27;;15868:71;15936:1;15925:9;15921:17;15912:6;15868:71;:::i;:::-;15949:72;16017:2;16006:9;16002:18;15993:6;15949:72;:::i;:::-;16031;16099:2;16088:9;16084:18;16075:6;16031:72;:::i;:::-;16150:9;16144:4;16140:20;16135:2;16124:9;16120:18;16113:48;16178:76;16249:4;16240:6;16178:76;:::i;:::-;16170:84;;15621:640;;;;;;;:::o;16267:141::-;16323:5;16354:6;16348:13;16339:22;;16370:32;16396:5;16370:32;:::i;:::-;16267:141;;;;:::o;16414:349::-;16483:6;16532:2;16520:9;16511:7;16507:23;16503:32;16500:119;;;16538:79;;:::i;:::-;16500:119;16658:1;16683:63;16738:7;16729:6;16718:9;16714:22;16683:63;:::i;:::-;16673:73;;16629:127;16414:349;;;;:::o;16769:141::-;16818:4;16841:3;16833:11;;16864:3;16861:1;16854:14;16898:4;16895:1;16885:18;16877:26;;16769:141;;;:::o;16916:93::-;16953:6;17000:2;16995;16988:5;16984:14;16980:23;16970:33;;16916:93;;;:::o;17015:107::-;17059:8;17109:5;17103:4;17099:16;17078:37;;17015:107;;;;:::o;17128:393::-;17197:6;17247:1;17235:10;17231:18;17270:97;17300:66;17289:9;17270:97;:::i;:::-;17388:39;17418:8;17407:9;17388:39;:::i;:::-;17376:51;;17460:4;17456:9;17449:5;17445:21;17436:30;;17509:4;17499:8;17495:19;17488:5;17485:30;17475:40;;17204:317;;17128:393;;;;;:::o;17527:60::-;17555:3;17576:5;17569:12;;17527:60;;;:::o;17593:142::-;17643:9;17676:53;17694:34;17703:24;17721:5;17703:24;:::i;:::-;17694:34;:::i;:::-;17676:53;:::i;:::-;17663:66;;17593:142;;;:::o;17741:75::-;17784:3;17805:5;17798:12;;17741:75;;;:::o;17822:269::-;17932:39;17963:7;17932:39;:::i;:::-;17993:91;18042:41;18066:16;18042:41;:::i;:::-;18034:6;18027:4;18021:11;17993:91;:::i;:::-;17987:4;17980:105;17898:193;17822:269;;;:::o;18097:73::-;18142:3;18097:73;:::o;18176:189::-;18253:32;;:::i;:::-;18294:65;18352:6;18344;18338:4;18294:65;:::i;:::-;18229:136;18176:189;;:::o;18371:186::-;18431:120;18448:3;18441:5;18438:14;18431:120;;;18502:39;18539:1;18532:5;18502:39;:::i;:::-;18475:1;18468:5;18464:13;18455:22;;18431:120;;;18371:186;;:::o;18563:543::-;18664:2;18659:3;18656:11;18653:446;;;18698:38;18730:5;18698:38;:::i;:::-;18782:29;18800:10;18782:29;:::i;:::-;18772:8;18768:44;18965:2;18953:10;18950:18;18947:49;;;18986:8;18971:23;;18947:49;19009:80;19065:22;19083:3;19065:22;:::i;:::-;19055:8;19051:37;19038:11;19009:80;:::i;:::-;18668:431;;18653:446;18563:543;;;:::o;19112:117::-;19166:8;19216:5;19210:4;19206:16;19185:37;;19112:117;;;;:::o;19235:169::-;19279:6;19312:51;19360:1;19356:6;19348:5;19345:1;19341:13;19312:51;:::i;:::-;19308:56;19393:4;19387;19383:15;19373:25;;19286:118;19235:169;;;;:::o;19409:295::-;19485:4;19631:29;19656:3;19650:4;19631:29;:::i;:::-;19623:37;;19693:3;19690:1;19686:11;19680:4;19677:21;19669:29;;19409:295;;;;:::o;19709:1395::-;19826:37;19859:3;19826:37;:::i;:::-;19928:18;19920:6;19917:30;19914:56;;;19950:18;;:::i;:::-;19914:56;19994:38;20026:4;20020:11;19994:38;:::i;:::-;20079:67;20139:6;20131;20125:4;20079:67;:::i;:::-;20173:1;20197:4;20184:17;;20229:2;20221:6;20218:14;20246:1;20241:618;;;;20903:1;20920:6;20917:77;;;20969:9;20964:3;20960:19;20954:26;20945:35;;20917:77;21020:67;21080:6;21073:5;21020:67;:::i;:::-;21014:4;21007:81;20876:222;20211:887;;20241:618;20293:4;20289:9;20281:6;20277:22;20327:37;20359:4;20327:37;:::i;:::-;20386:1;20400:208;20414:7;20411:1;20408:14;20400:208;;;20493:9;20488:3;20484:19;20478:26;20470:6;20463:42;20544:1;20536:6;20532:14;20522:24;;20591:2;20580:9;20576:18;20563:31;;20437:4;20434:1;20430:12;20425:17;;20400:208;;;20636:6;20627:7;20624:19;20621:179;;;20694:9;20689:3;20685:19;20679:26;20737:48;20779:4;20771:6;20767:17;20756:9;20737:48;:::i;:::-;20729:6;20722:64;20644:156;20621:179;20846:1;20842;20834:6;20830:14;20826:22;20820:4;20813:36;20248:611;;;20211:887;;19801:1303;;;19709:1395;;:::o;21110:332::-;21231:4;21269:2;21258:9;21254:18;21246:26;;21282:71;21350:1;21339:9;21335:17;21326:6;21282:71;:::i;:::-;21363:72;21431:2;21420:9;21416:18;21407:6;21363:72;:::i;:::-;21110:332;;;;;:::o;21448:180::-;21496:77;21493:1;21486:88;21593:4;21590:1;21583:15;21617:4;21614:1;21607:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1810000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintItem(string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenCounter()": "2491",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 143,
									"end": 636,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 310,
									"end": 387,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 387,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 310,
									"end": 387,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 310,
									"end": 387,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 310,
									"end": 387,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 310,
									"end": 387,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 310,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 310,
									"end": 387,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 375,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 377,
									"end": 383,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 310,
									"end": 387,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 310,
									"end": 387,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 143,
									"end": 636,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 16,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "107"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 16,
									"value": "107"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 16,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "112"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 16,
									"value": "112"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 16,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "117"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 16,
									"value": "117"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 16,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "120"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 16,
									"value": "120"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "121"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 16,
									"value": "121"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 16,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "123"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "124"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 16,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 16,
									"value": "123"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 16,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "127"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 16,
									"value": "127"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "129"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 16,
									"value": "129"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "131"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 16,
									"value": "131"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 16,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 16,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "134"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 16,
									"value": "134"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 16,
									"value": "135"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 16,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "139"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 16,
									"value": "139"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 16,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "140"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 16,
									"value": "140"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 16,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 16,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "145"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 16,
									"value": "145"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 16,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 16,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 143,
									"end": 636,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 143,
									"end": 636,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 143,
									"end": 636,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 143,
									"end": 636,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 636,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f2843552e83dca54c2f39d4a4296a1a244fa43468eb29f005b972122e009cfe64736f6c63430008180033",
									".code": [
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "C7545849"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "C7545849"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "D082E381"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 636,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 143,
											"end": 636,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 395,
											"end": 633,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 395,
											"end": 633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 395,
											"end": 633,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 633,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 395,
											"end": 633,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 395,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 395,
											"end": 633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 395,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 395,
											"end": 633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 199,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 199,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 199,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 7,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 395,
											"end": 633,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 395,
											"end": 633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 455,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 461,
											"end": 471,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 473,
											"end": 485,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 473,
											"end": 485,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 455,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 455,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 455,
											"end": 486,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 455,
											"end": 486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 497,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 510,
											"end": 522,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 510,
											"end": 522,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 524,
											"end": 532,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 497,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 497,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 533,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 497,
											"end": 533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "PUSH",
											"source": 15,
											"value": "899B99F6C26CE7A463FC72A3A36AE78B414DAE9CFA6E88E8580EC708E70F30B0"
										},
										{
											"begin": 562,
											"end": 572,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 574,
											"end": 586,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 574,
											"end": 586,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 588,
											"end": 596,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 597,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 549,
											"end": 597,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 549,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 549,
											"end": 597,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 597,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 549,
											"end": 597,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 608,
											"end": 620,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 608,
											"end": 620,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 608,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 608,
											"end": 625,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 608,
											"end": 625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 395,
											"end": 633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 199,
											"end": 226,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 199,
											"end": 226,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 199,
											"end": 226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 10,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 13,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10053,
											"end": 10057,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10132,
											"end": 10162,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 10203,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10277,
											"end": 10292,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 10424,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 10408,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10483,
											"end": 10504,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10573,
											"end": 10576,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 10580,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 10670,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10389,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10305,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10832,
											"end": 10859,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 10863,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10967,
											"end": 10987,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11065,
											"end": 11069,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 11005,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10812,
											"end": 11090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10750,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11214,
											"end": 11216,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11193,
											"end": 11200,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11189,
											"end": 11212,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11185,
											"end": 11217,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 11220,
											"end": 11299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11368,
											"end": 11369,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11353,
											"end": 11370,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11340,
											"end": 11371,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11387,
											"end": 11417,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 11420,
											"end": 11499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11560,
											"end": 11569,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 11525,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11515,
											"end": 11588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11515,
											"end": 11588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11311,
											"end": 11598,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11679,
											"end": 11685,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11693,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11724,
											"end": 11733,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11715,
											"end": 11722,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11711,
											"end": 11734,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11707,
											"end": 11739,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 11742,
											"end": 11821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11862,
											"end": 11863,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 11932,
											"end": 11939,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11923,
											"end": 11929,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 11930,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 11887,
											"end": 11940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11833,
											"end": 11950,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 12060,
											"end": 12067,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12051,
											"end": 12057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12036,
											"end": 12058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 12015,
											"end": 12068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11960,
											"end": 12078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11611,
											"end": 12085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 12091,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12216,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12217,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12236,
											"end": 12240,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12226,
											"end": 12241,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12257,
											"end": 12258,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12265,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12321,
											"end": 12327,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12352,
											"end": 12356,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12348,
											"end": 12360,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12338,
											"end": 12360,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12399,
											"end": 12403,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12395,
											"end": 12407,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12426,
											"end": 12444,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 12474,
											"end": 12480,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12470,
											"end": 12487,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12460,
											"end": 12487,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 12416,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12544,
											"end": 12546,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12533,
											"end": 12547,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12513,
											"end": 12531,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12510,
											"end": 12548,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 12563,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 12563,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 12507,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12328,
											"end": 12597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12277,
											"end": 12597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12752,
											"end": 12756,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12790,
											"end": 12792,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12775,
											"end": 12793,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12767,
											"end": 12793,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12847,
											"end": 12853,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 12803,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 12803,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12952,
											"end": 12954,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12941,
											"end": 12950,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12937,
											"end": 12955,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12928,
											"end": 12934,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 12884,
											"end": 12956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 12884,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 13034,
											"end": 13036,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13023,
											"end": 13032,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13019,
											"end": 13037,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13010,
											"end": 13016,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 12966,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 12966,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12603,
											"end": 13045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13220,
											"end": 13224,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13258,
											"end": 13260,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 13247,
											"end": 13256,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13235,
											"end": 13261,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13235,
											"end": 13261,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13271,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 13339,
											"end": 13340,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13328,
											"end": 13337,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13324,
											"end": 13341,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13315,
											"end": 13321,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13271,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 13271,
											"end": 13342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13271,
											"end": 13342,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 13271,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13352,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 13420,
											"end": 13422,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13409,
											"end": 13418,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13405,
											"end": 13423,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13396,
											"end": 13402,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13352,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 13352,
											"end": 13424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13352,
											"end": 13424,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 13352,
											"end": 13424,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13471,
											"end": 13480,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13465,
											"end": 13469,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13461,
											"end": 13481,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13456,
											"end": 13458,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13445,
											"end": 13454,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13441,
											"end": 13459,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13434,
											"end": 13482,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13499,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 13572,
											"end": 13576,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13563,
											"end": 13569,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13499,
											"end": 13577,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 13499,
											"end": 13577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13499,
											"end": 13577,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 13499,
											"end": 13577,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13491,
											"end": 13577,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13491,
											"end": 13577,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13051,
											"end": 13584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13590,
											"end": 13770,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 13590,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13638,
											"end": 13715,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13635,
											"end": 13636,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13628,
											"end": 13716,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13735,
											"end": 13739,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 13732,
											"end": 13733,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13725,
											"end": 13740,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13759,
											"end": 13763,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 13756,
											"end": 13757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13749,
											"end": 13764,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 13776,
											"end": 13967,
											"name": "tag",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 13776,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13816,
											"end": 13819,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 13853,
											"end": 13854,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 13835,
											"end": 13855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13830,
											"end": 13855,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13830,
											"end": 13855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13869,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 13887,
											"end": 13888,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13869,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 13869,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13869,
											"end": 13889,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 13869,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 13889,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13864,
											"end": 13889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13912,
											"end": 13913,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13909,
											"end": 13910,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13905,
											"end": 13914,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13898,
											"end": 13914,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13898,
											"end": 13914,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13933,
											"end": 13936,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13930,
											"end": 13931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13927,
											"end": 13937,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13924,
											"end": 13960,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13924,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 13924,
											"end": 13960,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13940,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 13940,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 13940,
											"end": 13958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13940,
											"end": 13958,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 13940,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13924,
											"end": 13960,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 13924,
											"end": 13960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13776,
											"end": 13967,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13776,
											"end": 13967,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13776,
											"end": 13967,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13776,
											"end": 13967,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13776,
											"end": 13967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14121,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 13973,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14075,
											"end": 14086,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14112,
											"end": 14115,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14097,
											"end": 14115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14097,
											"end": 14115,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14121,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14121,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14121,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14121,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13973,
											"end": 14121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14127,
											"end": 14517,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 14127,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14233,
											"end": 14236,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 14294,
											"end": 14299,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 14261,
											"end": 14300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 14261,
											"end": 14300,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14316,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 14398,
											"end": 14404,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14393,
											"end": 14396,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14316,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 14316,
											"end": 14405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14316,
											"end": 14405,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 14316,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14405,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14405,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14414,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 14472,
											"end": 14478,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14467,
											"end": 14470,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14460,
											"end": 14464,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14453,
											"end": 14458,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 14449,
											"end": 14465,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14414,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 14414,
											"end": 14479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14414,
											"end": 14479,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 14414,
											"end": 14479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14504,
											"end": 14510,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14499,
											"end": 14502,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14495,
											"end": 14511,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14488,
											"end": 14511,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14488,
											"end": 14511,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14237,
											"end": 14517,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14127,
											"end": 14517,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14127,
											"end": 14517,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14127,
											"end": 14517,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14127,
											"end": 14517,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14127,
											"end": 14517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14523,
											"end": 14958,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 14523,
											"end": 14958,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14703,
											"end": 14706,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14725,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 14816,
											"end": 14819,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14807,
											"end": 14813,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14725,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 14725,
											"end": 14820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14725,
											"end": 14820,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 14725,
											"end": 14820,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 14820,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 14820,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14837,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 14928,
											"end": 14931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14919,
											"end": 14925,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14837,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 14837,
											"end": 14932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14837,
											"end": 14932,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 14837,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14830,
											"end": 14932,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14830,
											"end": 14932,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14949,
											"end": 14952,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14942,
											"end": 14952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14942,
											"end": 14952,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14523,
											"end": 14958,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14523,
											"end": 14958,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14523,
											"end": 14958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14523,
											"end": 14958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14523,
											"end": 14958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14523,
											"end": 14958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14964,
											"end": 15062,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 14964,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15015,
											"end": 15021,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15049,
											"end": 15054,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15043,
											"end": 15055,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15033,
											"end": 15055,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15033,
											"end": 15055,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14964,
											"end": 15062,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14964,
											"end": 15062,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14964,
											"end": 15062,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14964,
											"end": 15062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15236,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 15068,
											"end": 15236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15162,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15185,
											"end": 15191,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15180,
											"end": 15183,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15173,
											"end": 15192,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15225,
											"end": 15229,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15220,
											"end": 15223,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15216,
											"end": 15230,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15201,
											"end": 15230,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15201,
											"end": 15230,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15236,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15236,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15242,
											"end": 15615,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 15242,
											"end": 15615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15356,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 15388,
											"end": 15393,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15356,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 15356,
											"end": 15394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15356,
											"end": 15394,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 15356,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15410,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 15473,
											"end": 15479,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15468,
											"end": 15471,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15410,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 15410,
											"end": 15480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15410,
											"end": 15480,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 15410,
											"end": 15480,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15403,
											"end": 15480,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15403,
											"end": 15480,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15489,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 15547,
											"end": 15553,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15542,
											"end": 15545,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15535,
											"end": 15539,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15533,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15524,
											"end": 15540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15489,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 15489,
											"end": 15554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15489,
											"end": 15554,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 15489,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15579,
											"end": 15608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 15601,
											"end": 15607,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15579,
											"end": 15608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 15579,
											"end": 15608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15579,
											"end": 15608,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 15579,
											"end": 15608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15574,
											"end": 15577,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15570,
											"end": 15609,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15563,
											"end": 15609,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15563,
											"end": 15609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15332,
											"end": 15615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15242,
											"end": 15615,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15242,
											"end": 15615,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15242,
											"end": 15615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15242,
											"end": 15615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15242,
											"end": 15615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15816,
											"end": 15820,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15854,
											"end": 15857,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 15843,
											"end": 15852,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15839,
											"end": 15858,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15831,
											"end": 15858,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15831,
											"end": 15858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15868,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 15936,
											"end": 15937,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15925,
											"end": 15934,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15921,
											"end": 15938,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15912,
											"end": 15918,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 15868,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 15868,
											"end": 15939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15868,
											"end": 15939,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 15868,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15949,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 16017,
											"end": 16019,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16006,
											"end": 16015,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16002,
											"end": 16020,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15993,
											"end": 15999,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15949,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 15949,
											"end": 16021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15949,
											"end": 16021,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 15949,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16031,
											"end": 16103,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 16099,
											"end": 16101,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 16088,
											"end": 16097,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16084,
											"end": 16102,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16075,
											"end": 16081,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16031,
											"end": 16103,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 16031,
											"end": 16103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16031,
											"end": 16103,
											"name": "tag",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 16031,
											"end": 16103,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16150,
											"end": 16159,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16144,
											"end": 16148,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16140,
											"end": 16160,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 16135,
											"end": 16137,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 16124,
											"end": 16133,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16120,
											"end": 16138,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16113,
											"end": 16161,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16178,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 16249,
											"end": 16253,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16240,
											"end": 16246,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16178,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 16178,
											"end": 16254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16178,
											"end": 16254,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 16178,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16170,
											"end": 16254,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16170,
											"end": 16254,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15621,
											"end": 16261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16267,
											"end": 16408,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 16267,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16323,
											"end": 16328,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16354,
											"end": 16360,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16348,
											"end": 16361,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16339,
											"end": 16361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16339,
											"end": 16361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16370,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 16396,
											"end": 16401,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16370,
											"end": 16402,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 16370,
											"end": 16402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16370,
											"end": 16402,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 16370,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16267,
											"end": 16408,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16267,
											"end": 16408,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16267,
											"end": 16408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16267,
											"end": 16408,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16267,
											"end": 16408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16414,
											"end": 16763,
											"name": "tag",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 16414,
											"end": 16763,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16483,
											"end": 16489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16532,
											"end": 16534,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16520,
											"end": 16529,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16511,
											"end": 16518,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16507,
											"end": 16530,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 16503,
											"end": 16535,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 16500,
											"end": 16619,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16500,
											"end": 16619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 16500,
											"end": 16619,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16538,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 16538,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 16538,
											"end": 16617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16538,
											"end": 16617,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 16538,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16500,
											"end": 16619,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 16500,
											"end": 16619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16658,
											"end": 16659,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16683,
											"end": 16746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 16738,
											"end": 16745,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16718,
											"end": 16727,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16714,
											"end": 16736,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16683,
											"end": 16746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 16683,
											"end": 16746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16683,
											"end": 16746,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 16683,
											"end": 16746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16673,
											"end": 16746,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16673,
											"end": 16746,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16629,
											"end": 16756,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16414,
											"end": 16763,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16414,
											"end": 16763,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16414,
											"end": 16763,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16414,
											"end": 16763,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16414,
											"end": 16763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16769,
											"end": 16910,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 16769,
											"end": 16910,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16818,
											"end": 16822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16841,
											"end": 16844,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 16844,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 16844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 16867,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16861,
											"end": 16862,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16854,
											"end": 16868,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16898,
											"end": 16902,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16895,
											"end": 16896,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16885,
											"end": 16903,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 16877,
											"end": 16903,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16877,
											"end": 16903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16769,
											"end": 16910,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16769,
											"end": 16910,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16769,
											"end": 16910,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16769,
											"end": 16910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16916,
											"end": 17009,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 16916,
											"end": 17009,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16953,
											"end": 16959,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17000,
											"end": 17002,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 16997,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 16988,
											"end": 16993,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16984,
											"end": 16998,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16980,
											"end": 17003,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 16970,
											"end": 17003,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16970,
											"end": 17003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16916,
											"end": 17009,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16916,
											"end": 17009,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16916,
											"end": 17009,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16916,
											"end": 17009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17122,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 17015,
											"end": 17122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17059,
											"end": 17067,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17109,
											"end": 17114,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17103,
											"end": 17107,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17099,
											"end": 17115,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 17078,
											"end": 17115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17078,
											"end": 17115,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17122,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17122,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17122,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17122,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17128,
											"end": 17521,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 17128,
											"end": 17521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17197,
											"end": 17203,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17247,
											"end": 17248,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 17235,
											"end": 17245,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17231,
											"end": 17249,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 17270,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 17300,
											"end": 17366,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17289,
											"end": 17298,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17270,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 17270,
											"end": 17367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17270,
											"end": 17367,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 17270,
											"end": 17367,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17388,
											"end": 17427,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 17418,
											"end": 17426,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 17407,
											"end": 17416,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17388,
											"end": 17427,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 17388,
											"end": 17427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17388,
											"end": 17427,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 17388,
											"end": 17427,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17376,
											"end": 17427,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 17376,
											"end": 17427,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17460,
											"end": 17464,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17456,
											"end": 17465,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 17449,
											"end": 17454,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17445,
											"end": 17466,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17436,
											"end": 17466,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 17436,
											"end": 17466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17509,
											"end": 17513,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17499,
											"end": 17507,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 17495,
											"end": 17514,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17488,
											"end": 17493,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17485,
											"end": 17515,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 17475,
											"end": 17515,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17475,
											"end": 17515,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17128,
											"end": 17521,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 17128,
											"end": 17521,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17128,
											"end": 17521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17128,
											"end": 17521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17128,
											"end": 17521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17128,
											"end": 17521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17587,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 17527,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17555,
											"end": 17558,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17576,
											"end": 17581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17569,
											"end": 17581,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17569,
											"end": 17581,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17587,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17587,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17587,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17593,
											"end": 17735,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 17593,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17643,
											"end": 17652,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17676,
											"end": 17729,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 17694,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 17703,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 17721,
											"end": 17726,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17703,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 17703,
											"end": 17727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17703,
											"end": 17727,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 17703,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17694,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 17694,
											"end": 17728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17694,
											"end": 17728,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 17694,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17676,
											"end": 17729,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 17676,
											"end": 17729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17676,
											"end": 17729,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 17676,
											"end": 17729,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17663,
											"end": 17729,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17663,
											"end": 17729,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17593,
											"end": 17735,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17593,
											"end": 17735,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17593,
											"end": 17735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17593,
											"end": 17735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17741,
											"end": 17816,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 17741,
											"end": 17816,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17784,
											"end": 17787,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17805,
											"end": 17810,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17798,
											"end": 17810,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17798,
											"end": 17810,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17741,
											"end": 17816,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17741,
											"end": 17816,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17741,
											"end": 17816,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17741,
											"end": 17816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17822,
											"end": 18091,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 17822,
											"end": 18091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17932,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 17963,
											"end": 17970,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17932,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 17932,
											"end": 17971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17932,
											"end": 17971,
											"name": "tag",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 17932,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17993,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 18042,
											"end": 18083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 18066,
											"end": 18082,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18042,
											"end": 18083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 18042,
											"end": 18083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18042,
											"end": 18083,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 18042,
											"end": 18083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18034,
											"end": 18040,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18027,
											"end": 18031,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18021,
											"end": 18032,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 17993,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 17993,
											"end": 18084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17993,
											"end": 18084,
											"name": "tag",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 17993,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17987,
											"end": 17991,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17980,
											"end": 18085,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 17898,
											"end": 18091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17822,
											"end": 18091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17822,
											"end": 18091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17822,
											"end": 18091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17822,
											"end": 18091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18097,
											"end": 18170,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 18097,
											"end": 18170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18142,
											"end": 18145,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18097,
											"end": 18170,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18097,
											"end": 18170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18365,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 18176,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18253,
											"end": 18285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 18253,
											"end": 18285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 18253,
											"end": 18285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18253,
											"end": 18285,
											"name": "tag",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 18253,
											"end": 18285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18294,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 18352,
											"end": 18358,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18344,
											"end": 18350,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18338,
											"end": 18342,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18294,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 18294,
											"end": 18359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18294,
											"end": 18359,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 18294,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18365,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18365,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18365,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18371,
											"end": 18557,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 18371,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18448,
											"end": 18451,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18441,
											"end": 18446,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18438,
											"end": 18452,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18502,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 18539,
											"end": 18540,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18532,
											"end": 18537,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18502,
											"end": 18541,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 18502,
											"end": 18541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18502,
											"end": 18541,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 18502,
											"end": 18541,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18475,
											"end": 18476,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 18468,
											"end": 18473,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18464,
											"end": 18477,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18455,
											"end": 18477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18455,
											"end": 18477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 18431,
											"end": 18551,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18371,
											"end": 18557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18371,
											"end": 18557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18371,
											"end": 18557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18563,
											"end": 19106,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 18563,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18664,
											"end": 18666,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18656,
											"end": 18667,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18653,
											"end": 19099,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18653,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 18653,
											"end": 19099,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 18730,
											"end": 18735,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 18698,
											"end": 18736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18736,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 18698,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18782,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 18800,
											"end": 18810,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18782,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 18782,
											"end": 18811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18782,
											"end": 18811,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 18782,
											"end": 18811,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18772,
											"end": 18780,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18768,
											"end": 18812,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18965,
											"end": 18967,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18953,
											"end": 18963,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18950,
											"end": 18968,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 18947,
											"end": 18996,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18947,
											"end": 18996,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 18947,
											"end": 18996,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18986,
											"end": 18994,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18971,
											"end": 18994,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18971,
											"end": 18994,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18947,
											"end": 18996,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 18947,
											"end": 18996,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19089,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 19065,
											"end": 19087,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 19083,
											"end": 19086,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19065,
											"end": 19087,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 19065,
											"end": 19087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19065,
											"end": 19087,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 19065,
											"end": 19087,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19055,
											"end": 19063,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19051,
											"end": 19088,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19038,
											"end": 19049,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19089,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 19009,
											"end": 19089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19089,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 19009,
											"end": 19089,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18668,
											"end": 19099,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18668,
											"end": 19099,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18653,
											"end": 19099,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 18653,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18563,
											"end": 19106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18563,
											"end": 19106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18563,
											"end": 19106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18563,
											"end": 19106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19112,
											"end": 19229,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 19112,
											"end": 19229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19166,
											"end": 19174,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19216,
											"end": 19221,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19210,
											"end": 19214,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19206,
											"end": 19222,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 19185,
											"end": 19222,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19185,
											"end": 19222,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19112,
											"end": 19229,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19112,
											"end": 19229,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19112,
											"end": 19229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19112,
											"end": 19229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19112,
											"end": 19229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19235,
											"end": 19404,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 19235,
											"end": 19404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19279,
											"end": 19285,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19312,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 19360,
											"end": 19361,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19356,
											"end": 19362,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 19348,
											"end": 19353,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19345,
											"end": 19346,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 19341,
											"end": 19354,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 19312,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 19312,
											"end": 19363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19312,
											"end": 19363,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 19312,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19308,
											"end": 19364,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 19393,
											"end": 19397,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 19387,
											"end": 19391,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19383,
											"end": 19398,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 19373,
											"end": 19398,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19373,
											"end": 19398,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19286,
											"end": 19404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19235,
											"end": 19404,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19235,
											"end": 19404,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19235,
											"end": 19404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19235,
											"end": 19404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19235,
											"end": 19404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19409,
											"end": 19704,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 19409,
											"end": 19704,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19485,
											"end": 19489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19631,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 19656,
											"end": 19659,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19650,
											"end": 19654,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19631,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 19631,
											"end": 19660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19631,
											"end": 19660,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 19631,
											"end": 19660,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19623,
											"end": 19660,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19623,
											"end": 19660,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19693,
											"end": 19696,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19690,
											"end": 19691,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 19686,
											"end": 19697,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 19680,
											"end": 19684,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19677,
											"end": 19698,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 19669,
											"end": 19698,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19669,
											"end": 19698,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19409,
											"end": 19704,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19409,
											"end": 19704,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19409,
											"end": 19704,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19409,
											"end": 19704,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19409,
											"end": 19704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19709,
											"end": 21104,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 19709,
											"end": 21104,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19826,
											"end": 19863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 19859,
											"end": 19862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19826,
											"end": 19863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 19826,
											"end": 19863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19826,
											"end": 19863,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 19826,
											"end": 19863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19928,
											"end": 19946,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19920,
											"end": 19926,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19917,
											"end": 19947,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19914,
											"end": 19970,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19914,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 19914,
											"end": 19970,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19950,
											"end": 19968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 19950,
											"end": 19968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 19950,
											"end": 19968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19950,
											"end": 19968,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 19950,
											"end": 19968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19914,
											"end": 19970,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 19914,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19994,
											"end": 20032,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 20026,
											"end": 20030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20020,
											"end": 20031,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 19994,
											"end": 20032,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 19994,
											"end": 20032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19994,
											"end": 20032,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 19994,
											"end": 20032,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20079,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 20139,
											"end": 20145,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20131,
											"end": 20137,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20125,
											"end": 20129,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20079,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 20079,
											"end": 20146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20079,
											"end": 20146,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 20079,
											"end": 20146,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20173,
											"end": 20174,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20197,
											"end": 20201,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20184,
											"end": 20201,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20184,
											"end": 20201,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20229,
											"end": 20231,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 20221,
											"end": 20227,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20218,
											"end": 20232,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 20246,
											"end": 20247,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 20241,
											"end": 20859,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20241,
											"end": 20859,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 20241,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 20241,
											"end": 20859,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20903,
											"end": 20904,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20920,
											"end": 20926,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20917,
											"end": 20994,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20917,
											"end": 20994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 20917,
											"end": 20994,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20969,
											"end": 20978,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20964,
											"end": 20967,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 20960,
											"end": 20979,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20954,
											"end": 20980,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20945,
											"end": 20980,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20945,
											"end": 20980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20917,
											"end": 20994,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 20917,
											"end": 20994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21020,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 21080,
											"end": 21086,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21073,
											"end": 21078,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21020,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 21020,
											"end": 21087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21020,
											"end": 21087,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 21020,
											"end": 21087,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21014,
											"end": 21018,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21007,
											"end": 21088,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20876,
											"end": 21098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20211,
											"end": 21098,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 20211,
											"end": 21098,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20241,
											"end": 20859,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 20241,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20293,
											"end": 20297,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 20289,
											"end": 20298,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 20281,
											"end": 20287,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20277,
											"end": 20299,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 20327,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 20359,
											"end": 20363,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20327,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 20327,
											"end": 20364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20327,
											"end": 20364,
											"name": "tag",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 20327,
											"end": 20364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20386,
											"end": 20387,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20414,
											"end": 20421,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20411,
											"end": 20412,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20408,
											"end": 20422,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20493,
											"end": 20502,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20488,
											"end": 20491,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 20484,
											"end": 20503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20478,
											"end": 20504,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20470,
											"end": 20476,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20463,
											"end": 20505,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20544,
											"end": 20545,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 20536,
											"end": 20542,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20532,
											"end": 20546,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20522,
											"end": 20546,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20522,
											"end": 20546,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20591,
											"end": 20593,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20580,
											"end": 20589,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20576,
											"end": 20594,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20563,
											"end": 20594,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 20563,
											"end": 20594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20437,
											"end": 20441,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20434,
											"end": 20435,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20430,
											"end": 20442,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20425,
											"end": 20442,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20425,
											"end": 20442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "tag",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 20400,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20636,
											"end": 20642,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20627,
											"end": 20634,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20624,
											"end": 20643,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 20621,
											"end": 20800,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20621,
											"end": 20800,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 20621,
											"end": 20800,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20694,
											"end": 20703,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20689,
											"end": 20692,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 20685,
											"end": 20704,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20679,
											"end": 20705,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20737,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 20779,
											"end": 20783,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 20771,
											"end": 20777,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 20767,
											"end": 20784,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 20756,
											"end": 20765,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20737,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 20737,
											"end": 20785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20737,
											"end": 20785,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 20737,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20729,
											"end": 20735,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20722,
											"end": 20786,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20644,
											"end": 20800,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20621,
											"end": 20800,
											"name": "tag",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 20621,
											"end": 20800,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20846,
											"end": 20847,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 20842,
											"end": 20843,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 20834,
											"end": 20840,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 20830,
											"end": 20844,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 20826,
											"end": 20848,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20820,
											"end": 20824,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 20813,
											"end": 20849,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20211,
											"end": 21098,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 20211,
											"end": 21098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20211,
											"end": 21098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19801,
											"end": 21104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19801,
											"end": 21104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19801,
											"end": 21104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19709,
											"end": 21104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19709,
											"end": 21104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19709,
											"end": 21104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21110,
											"end": 21442,
											"name": "tag",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 21110,
											"end": 21442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21231,
											"end": 21235,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21269,
											"end": 21271,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 21258,
											"end": 21267,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21254,
											"end": 21272,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21246,
											"end": 21272,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21246,
											"end": 21272,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21282,
											"end": 21353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 21350,
											"end": 21351,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21339,
											"end": 21348,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21335,
											"end": 21352,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21326,
											"end": 21332,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21282,
											"end": 21353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 21282,
											"end": 21353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21282,
											"end": 21353,
											"name": "tag",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 21282,
											"end": 21353,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21363,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 21431,
											"end": 21433,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21420,
											"end": 21429,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21416,
											"end": 21434,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21407,
											"end": 21413,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21363,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 21363,
											"end": 21435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21363,
											"end": 21435,
											"name": "tag",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 21363,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21110,
											"end": 21442,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21110,
											"end": 21442,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21110,
											"end": 21442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21110,
											"end": 21442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21110,
											"end": 21442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21110,
											"end": 21442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21448,
											"end": 21628,
											"name": "tag",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 21448,
											"end": 21628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21496,
											"end": 21573,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21493,
											"end": 21494,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21486,
											"end": 21574,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21593,
											"end": 21597,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 21590,
											"end": 21591,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 21583,
											"end": 21598,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21617,
											"end": 21621,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 21614,
											"end": 21615,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21607,
											"end": 21622,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/AssetNexusNft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintItem(string)": "c7545849",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenCounter()": "d082e381",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"NewNFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetNexusNft.sol\":\"AssetNexusNft\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/AssetNexusNft.sol\":{\"keccak256\":\"0x44fb46524afa0e7bce6be130ed9c4431315b5e23c0e84e23342ba9479c0faaa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387242b1ef2700683ad2a70d0cfc86720be90a0c96fbd7cb4577ee998f87ad3c\",\"dweb:/ipfs/QmfDoMtfYncar3iS3f3RGSa2CcnHgRo6QGMxyer8B64ZTk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2953,
								"contract": "contracts/AssetNexusNft.sol:AssetNexusNft",
								"label": "tokenCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 1788,
							"src": "132:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "140:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 4,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 32,
							"src": "172:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "180:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nameLocations": [
											"279:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1787,
										"src": "279:7:1"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:1"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "288:7:1"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:1",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								1294,
								1787
							],
							"name": "IERC4906",
							"nameLocation": "267:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:1",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 19,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "529:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:1"
									},
									"src": "508:39:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:1",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 26,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "796:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "818:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:1"
									},
									"src": "770:68:1"
								}
							],
							"scope": 28,
							"src": "257:583:1",
							"usedErrors": [],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:734:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 32,
							"sourceUnit": 1295,
							"src": "132:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 30,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							168
						],
						"IERC20Errors": [
							73
						],
						"IERC721Errors": [
							121
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 169,
							"src": "278:1764:3",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 169,
							"src": "2186:2092:3",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 169,
							"src": "4424:2107:3",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1496
						],
						"ERC165": [
							1775
						],
						"ERC721": [
							1177
						],
						"IERC165": [
							1787
						],
						"IERC721": [
							1294
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1466
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							1751
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1295,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1313,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1467,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1497,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1496,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1752,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 179,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1776,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 182,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1775,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 169,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 184,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "804:7:4"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 189,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1775,
										"src": "813:6:4"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "821:7:4"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 193,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "830:15:4"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 195,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "847:13:4"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								121,
								1466,
								1294,
								1775,
								1787,
								1496
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 199,
									"libraryName": {
										"id": 197,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 200,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 206,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 204,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 210,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 208,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 214,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 220,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 219,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 217,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 218,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 233,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 238,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1177,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1774,
										1786
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 251,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 250,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1294",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 257,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 256,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1466",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 262,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1177_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1774,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 248,
												"id": 267,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 243,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1775,
												"src": "1637:6:4"
											},
											{
												"id": 244,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1787,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 240,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1177,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1219
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 277,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 278,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 284,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 283,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 289,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 292,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 294,
													"indexExpression": {
														"id": 293,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 295,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1177,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1177,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 316,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1177,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 325,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 324,
												"id": 326,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1177,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 340,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 342,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 345,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 355,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 356,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1564,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 352,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 335,
												"id": 362,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1177,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1177,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 384,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 980,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1177,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1283
									],
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 404,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1177,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 415,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 414,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1177,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 432,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 436,
													"indexExpression": {
														"id": 435,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1177,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1259
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 449,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 450,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 456,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 464,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 469,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 474,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 478,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 479,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 476,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1177,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 495,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															529
														],
														"referencedDeclaration": 529,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1177,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1239
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 521,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1177,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 537,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 539,
													"indexExpression": {
														"id": 538,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 536,
												"id": 540,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1177,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 550,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 549,
												"id": 553,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1177,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 573,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 574,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 577,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 578,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 560,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 576,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 562,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 581,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 584,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 566,
												"id": 589,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1177,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 602,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 603,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 604,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 601,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 607,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 608,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 623,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 619,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 596,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 620,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 618,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 622,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 624,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 617,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 614,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 613,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 84,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 616,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1177,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 642,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 636,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 639,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 641,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 632,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1177,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 669,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 670,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 671,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 668,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 687,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 682,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		980,
																		1046
																	],
																	"referencedDeclaration": 1046,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 701,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 695,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"id": 696,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 657,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 700,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 716,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 710,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 712,
																			"indexExpression": {
																				"id": 711,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 715,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 719,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 731,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 655,
												"id": 732,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1177,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 749,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 748,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 759,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 769,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 775,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 774,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 780,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1177,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 792,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 825,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1177,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 821,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1177,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 851,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1177,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 869,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 875,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 874,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 883,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 885,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 895,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 915,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 914,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 909,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 910,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 911,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 908,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 913,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 900,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1177,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 928,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															962
														],
														"referencedDeclaration": 962,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1177,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 954,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1177,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 972,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1177,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 993,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																1001
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1001,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1037,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1005,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1002,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1006,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1007,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1012,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1013,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1016,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1027,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1026,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1023,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1022,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1025,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1028,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1036,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1035,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1030,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1031,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1032,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1029,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1202,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1034,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1039,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1177,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1062,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1065,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1068,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1071,
															"indexExpression": {
																"id": 1069,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"id": 1070,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1076,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1177,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1091,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1103,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1109,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1110,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1177,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1124,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1153,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1142,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1143,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1312,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1311,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1152,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1151,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1148,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1147,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1150,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1154,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1141,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1140,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1154,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1139,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1170,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1158,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1156,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1168,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:4",
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:4",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nativeSrc": "17599:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nativeSrc": "17616:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nativeSrc": "17592:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nativeSrc": "17592:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1167,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1169,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1166,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1163,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1162,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1164,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1165,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1171,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1157,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1156,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1171,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1133,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1130,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1129,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1312,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1312",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1311,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1172,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1177,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1178,
							"src": "776:16926:4",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						],
						"IERC721": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 1788,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1180,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1183,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1787,
										"src": "287:7:5"
									},
									"id": 1184,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1294,
							"linearizedBaseContracts": [
								1294,
								1787
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1193,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1202,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1211,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1294,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1294,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1294,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1294,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1294,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1294,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1294,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1294,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1294,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1295,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1297,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1312,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1313,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1787
						],
						"IERC4906": [
							27
						],
						"Strings": [
							1751
						]
					},
					"id": 1439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1178,
							"src": "154:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1177,
										"src": "162:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1752,
							"src": "192:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1317,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "200:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 28,
							"src": "244:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1319,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 27,
										"src": "252:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 4,
							"src": "303:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1321,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "311:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1324,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 27,
										"src": "469:8:7"
									},
									"id": 1325,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:7"
								},
								{
									"baseName": {
										"id": 1326,
										"name": "ERC721",
										"nameLocations": [
											"479:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "479:6:7"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1323,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1438,
							"linearizedBaseContracts": [
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1775,
								1787,
								1496
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1330,
									"libraryName": {
										"id": 1328,
										"name": "Strings",
										"nameLocations": [
											"498:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "498:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:7",
									"typeName": {
										"id": 1329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1336,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "706:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1331,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1332,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:7",
												"typeDescriptions": {}
											}
										},
										"id": 1335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1340,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "817:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1339,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:7",
										"keyType": {
											"id": 1337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1338,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										269,
										1786
									],
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "1045:99:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1351,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "1062:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1352,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1077:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "1125:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1354,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "1101:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1359,
												"nodeType": "Return",
												"src": "1055:82:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:7",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1347,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1345,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1013:6:7"
											},
											{
												"id": 1346,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1787,
												"src": "1021:7:7"
											}
										],
										"src": "1004:25:7"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "964:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1039:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:7"
									},
									"scope": 1438,
									"src": "937:207:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1298:505:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1371,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1322:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1370,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1308:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:7"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1341:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1374,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"baseExpression": {
														"id": 1376,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1367:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1378,
													"indexExpression": {
														"id": 1377,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "1378:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:7"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1396:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1380,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1382,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1417:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1387,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "1506:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1385,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1395,
												"nodeType": "IfStatement",
												"src": "1496:70:7",
												"trueBody": {
													"id": 1394,
													"nodeType": "Block",
													"src": "1525:41:7",
													"statements": [
														{
															"expression": {
																"id": 1392,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "1546:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1393,
															"nodeType": "Return",
															"src": "1539:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1398,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1671:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1396,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "1661:95:7",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "1694:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1406,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "1729:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1407,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "1735:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1403,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:7",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1409,
															"nodeType": "Return",
															"src": "1708:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1412,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:7",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "1773:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1416,
												"nodeType": "Return",
												"src": "1766:30:7"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:7"
									},
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1228:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:7"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1283:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:7"
									},
									"scope": 1438,
									"src": "1210:593:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "2003:86:7",
										"statements": [
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1426,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2013:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1428,
														"indexExpression": {
															"id": 1427,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2024:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2035:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1433,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2074:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2059:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "EmitStatement",
												"src": "2054:28:7"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1944:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1961:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:7"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:7"
									},
									"scope": 1438,
									"src": "1922:167:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1439,
							"src": "431:1660:7",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "128:1964:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						],
						"IERC721Metadata": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1295,
							"src": "153:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1441,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "161:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1444,
										"name": "IERC721",
										"nameLocations": [
											"357:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "357:7:8"
									},
									"id": 1445,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1443,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								1294,
								1787
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"scope": 1466,
									"src": "434:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:8"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "600:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:8"
									},
									"scope": 1466,
									"src": "559:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "734:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:8"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "774:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:8"
									},
									"scope": 1466,
									"src": "716:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "328:463:8",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "127:665:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1496
						]
					},
					"id": 1497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1496,
							"linearizedBaseContracts": [
								1496
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1476,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1496,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1485,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1496,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1491,
												"id": 1493,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1496,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1497,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2841
						],
						"SignedMath": [
							2946
						],
						"Strings": [
							1751
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 2842,
							"src": "127:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1499,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2841,
										"src": "135:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 2947,
							"src": "165:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1501,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2946,
										"src": "173:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1751,
							"linearizedBaseContracts": [
								1751
							],
							"name": "Strings",
							"nameLocation": "259:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1506,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1751,
									"src": "273:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1504,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1509,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1751,
									"src": "335:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1507,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1508,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1516,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "505:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:10"
									},
									"src": "470:66:10"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "708:627:10",
										"statements": [
											{
												"id": 1562,
												"nodeType": "UncheckedBlock",
												"src": "718:611:10",
												"statements": [
													{
														"assignments": [
															1525
														],
														"declarations": [
															{
																"constant": false,
																"id": 1525,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1562,
																"src": "742:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1532,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1528,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "770:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1526,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2841,
																		"src": "759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2841_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2661,
																	"src": "759:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:10"
													},
													{
														"assignments": [
															1534
														],
														"declarations": [
															{
																"constant": false,
																"id": 1534,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1562,
																"src": "794:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1533,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1539,
														"initialValue": {
															"arguments": [
																{
																	"id": 1537,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "828:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1535,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:10"
													},
													{
														"assignments": [
															1541
														],
														"declarations": [
															{
																"constant": false,
																"id": 1541,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1562,
																"src": "849:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1542,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:10"
													},
													{
														"AST": {
															"nativeSrc": "930:67:10",
															"nodeType": "YulBlock",
															"src": "930:67:10",
															"statements": [
																{
																	"nativeSrc": "948:35:10",
																	"nodeType": "YulAssignment",
																	"src": "948:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:10",
																						"nodeType": "YulLiteral",
																						"src": "971:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:10"
																				},
																				"nativeSrc": "967:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1534,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1525,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1541,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:10",
																"valueSize": 1
															}
														],
														"id": 1543,
														"nodeType": "InlineAssembly",
														"src": "921:76:10"
													},
													{
														"body": {
															"id": 1558,
															"nodeType": "Block",
															"src": "1023:269:10",
															"statements": [
																{
																	"expression": {
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:10",
																		"subExpression": {
																			"id": 1545,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1541,
																			"src": "1041:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:10",
																		"nodeType": "YulBlock",
																		"src": "1124:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:10"
																									},
																									"nativeSrc": "1164:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:10"
																							},
																							"nativeSrc": "1159:32:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:10"
																					},
																					"nativeSrc": "1146:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:10"
																				},
																				"nativeSrc": "1146:46:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1506,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1541,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1519,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1548,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:10"
																},
																{
																	"expression": {
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "1227:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1552,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1553,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "1260:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1557,
																	"nodeType": "IfStatement",
																	"src": "1256:21:10",
																	"trueBody": {
																		"id": 1556,
																		"nodeType": "Break",
																		"src": "1272:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1559,
														"nodeType": "WhileStatement",
														"src": "1010:282:10"
													},
													{
														"expression": {
															"id": 1560,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "1312:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1523,
														"id": 1561,
														"nodeType": "Return",
														"src": "1305:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "655:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:10"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:10"
									},
									"scope": 1751,
									"src": "637:698:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "1511:92:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "1542:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1584,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "1588:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1582,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2946,
																			"src": "1573:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2946_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2945,
																		"src": "1573:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1581,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "1564:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1572,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1571,
												"id": 1588,
												"nodeType": "Return",
												"src": "1521:75:10"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "1459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1566,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:10"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:10"
									},
									"scope": 1751,
									"src": "1435:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "1782:100:10",
										"statements": [
											{
												"id": 1608,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "1835:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1602,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1593,
																				"src": "1854:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1600,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2841,
																				"src": "1842:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2841_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2783,
																			"src": "1842:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1598,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1610,
																	1693,
																	1713
																],
																"referencedDeclaration": 1693,
																"src": "1823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1597,
														"id": 1607,
														"nodeType": "Return",
														"src": "1816:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:10"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1767:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:10"
									},
									"scope": 1751,
									"src": "1708:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "2095:435:10",
										"statements": [
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "2105:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"id": 1622,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1613,
													"src": "2126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:10"
											},
											{
												"assignments": [
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "2141:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1624,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1629,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "2177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:10"
											},
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1635,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2198:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1637,
														"indexExpression": {
															"hexValue": "30",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:10"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1641,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2223:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1643,
														"indexExpression": {
															"hexValue": "31",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:10"
											},
											{
												"body": {
													"id": 1675,
													"nodeType": "Block",
													"src": "2293:95:10",
													"statements": [
														{
															"expression": {
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1661,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "2307:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1663,
																	"indexExpression": {
																		"id": 1662,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "2314:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1664,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "2319:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1668,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1665,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "2330:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1670,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:10"
														},
														{
															"expression": {
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1671,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "2361:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1674,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1655,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "2281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"initializationExpression": {
													"assignments": [
														1648
													],
													"declarations": [
														{
															"constant": false,
															"id": 1648,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1676,
															"src": "2253:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1647,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1654,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1650,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "2269:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:10",
														"subExpression": {
															"id": 1658,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "2290:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1660,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1677,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "2401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"nodeType": "IfStatement",
												"src": "2397:96:10",
												"trueBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "2418:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1681,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "2468:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1682,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "2475:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1680,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "2439:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1684,
															"nodeType": "RevertStatement",
															"src": "2432:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1689,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2516:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1687,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1691,
												"nodeType": "Return",
												"src": "2502:21:10"
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "2026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "2041:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:10"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "2080:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:10"
									},
									"scope": 1751,
									"src": "2005:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "2762:75:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1706,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1696,
																			"src": "2807:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1704,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1702,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1709,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "2815:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1701,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1610,
															1693,
															1713
														],
														"referencedDeclaration": 1693,
														"src": "2779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1711,
												"nodeType": "Return",
												"src": "2772:58:10"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2710:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:10"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2747:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:10"
									},
									"scope": 1751,
									"src": "2689:148:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "2992:104:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1725,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "3015:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1723,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "3034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1737,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "3063:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1735,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1734,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1743,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1718,
																			"src": "3086:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1741,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1740,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1722,
												"id": 1748,
												"nodeType": "Return",
												"src": "3002:87:10"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2929:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2946:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:10"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2986:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:10"
									},
									"scope": 1751,
									"src": "2914:182:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1752,
							"src": "251:2847:10",
							"usedErrors": [
								1516
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1775
						],
						"IERC165": [
							1787
						]
					},
					"id": 1776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1776,
							"sourceUnit": 1788,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1754,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1757,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1787,
										"src": "687:7:11"
									},
									"id": 1758,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1756,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1775,
							"linearizedBaseContracts": [
								1775,
								1787
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1786
									],
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1766,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1768,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1787_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1787_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1767,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1787",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1772,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1760,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 1775,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1776,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						]
					},
					"id": 1788,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1778,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1787,
							"linearizedBaseContracts": [
								1787
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1780,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 1787,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1788,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2841
						]
					},
					"id": 2842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1789,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1790,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2841,
							"linearizedBaseContracts": [
								2841
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1793,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1798,
									"members": [
										{
											"id": 1794,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 1795,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 1796,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 1797,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 1828,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															1811
														],
														"declarations": [
															{
																"constant": false,
																"id": 1811,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1828,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1810,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1815,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1812,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1816,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1817,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1823,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1821,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1822,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1825,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1826,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1809,
														"id": 1827,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 2841,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 1856,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1842,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1843,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1849,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1841,
															"id": 1848,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1851,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1854,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1841,
														"id": 1855,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 2841,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 1898,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1877,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1869,
															"id": 1876,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															1879
														],
														"declarations": [
															{
																"constant": false,
																"id": 1879,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1898,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1878,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1883,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1881,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1884,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1885,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1887,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1893,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1891,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1869,
															"id": 1892,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1895,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1869,
														"id": 1897,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 2841,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 1926,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1912,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1919,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1917,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1911,
															"id": 1918,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1921,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1922,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1924,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1911,
														"id": 1925,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 2841,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 1954,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1940,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1947,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1945,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1939,
															"id": 1946,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1949,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1950,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1952,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1939,
														"id": 1953,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 2841,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1966,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1967,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1970,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 1969,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1972,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 2841,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1984,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1985,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1988,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 1987,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1990,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 2841,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2002,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2003,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2005,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2006,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2007,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2009,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2001,
												"id": 2013,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 2841,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2025,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2033,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2032,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2028,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2029,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2024,
															"id": 2031,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2034,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2038,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2041,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2042,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2024,
												"id": 2047,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 2841,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2173,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2062
														],
														"declarations": [
															{
																"constant": false,
																"id": 2062,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2061,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2066,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2063,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2064,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2068
														],
														"declarations": [
															{
																"constant": false,
																"id": 2068,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2067,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2069,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2070,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2071,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2079,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2078,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2074,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2075,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2060,
																	"id": 2077,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2081,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2086,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2083,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1793,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2085,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2089
														],
														"declarations": [
															{
																"constant": false,
																"id": 2089,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2088,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2056,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2091,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2093
														],
														"declarations": [
															{
																"constant": false,
																"id": 2093,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2092,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2100,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2096,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2098,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2056,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2056,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2101,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2102,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2103,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2104,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2093,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2107,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2109
														],
														"declarations": [
															{
																"constant": false,
																"id": 2109,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2108,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2116,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2111,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2117,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2120,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2124,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2125,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2127,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2128,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2133,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2135,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2136,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2140,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2141,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2143,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2144,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2148,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2149,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2152,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2156,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2157,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2159,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2160,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2164,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2165,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2166,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2167,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2171,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2060,
														"id": 2172,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 2841,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2191
												],
												"declarations": [
													{
														"constant": false,
														"id": 2191,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2217,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2197,
												"initialValue": {
													"arguments": [
														{
															"id": 2193,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2194,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2195,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2192,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2175,
															2218
														],
														"referencedDeclaration": 2175,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2199,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1798",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1798",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2198,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2202,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2178,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2203,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2204,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2201,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2214,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2209,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2212,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2215,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2191,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2216,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2183,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 2841,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2226,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2232,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2231,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2225,
															"id": 2230,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2234
												],
												"declarations": [
													{
														"constant": false,
														"id": 2234,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2243,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2237,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2221,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2236,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2497,
																			2532
																		],
																		"referencedDeclaration": 2497,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2241,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2328,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2244,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2245,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2246,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2247,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2250,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2254,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2255,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2256,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2257,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2258,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2261,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2265,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2266,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2267,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2268,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2269,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2276,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2277,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2278,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2279,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2280,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2283,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2287,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2288,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2289,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2290,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2291,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2294,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2298,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2299,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2300,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2301,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2302,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2305,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2309,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2310,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2311,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2312,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2313,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2316,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2320,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2322,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2323,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2221,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2324,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2321,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2225,
														"id": 2327,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 2841,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2363,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2342
														],
														"declarations": [
															{
																"constant": false,
																"id": 2342,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2363,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2341,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2346,
														"initialValue": {
															"arguments": [
																{
																	"id": 2344,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2343,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2330,
																	2365
																],
																"referencedDeclaration": 2330,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2347,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2349,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2336,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2348,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2351,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2352,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2354,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2360,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2340,
														"id": 2362,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2334,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 2841,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2496,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2496,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2376,
												"initialValue": {
													"hexValue": "30",
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2493,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2391,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2390,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2382,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2385,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2386,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2389,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2406,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2405,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2401,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2404,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2407,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2421,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2420,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2415,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2416,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2419,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2422,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2436,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2435,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2427,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2451,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2450,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2445,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2446,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2452,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2466,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2465,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2457,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2460,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2461,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2467,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2481,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2480,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2475,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2479,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2482,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2492,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2491,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2494,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2374,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2372,
												"id": 2495,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 2841,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2531,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2530,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2509
														],
														"declarations": [
															{
																"constant": false,
																"id": 2509,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2530,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2508,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2513,
														"initialValue": {
															"arguments": [
																{
																	"id": 2511,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2500,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2510,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2497,
																	2532
																],
																"referencedDeclaration": 2497,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2514,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2509,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2516,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2503,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2515,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2520,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2518,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2519,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2509,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2521,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2500,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2507,
														"id": 2529,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2498,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2501,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 2841,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2660,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2541
												],
												"declarations": [
													{
														"constant": false,
														"id": 2541,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2660,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2543,
												"initialValue": {
													"hexValue": "30",
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2657,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2560,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2559,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2577,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2576,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2571,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2645,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2644,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2656,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2655,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2654,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2658,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2541,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2539,
												"id": 2659,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 2841,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 2694,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															2673
														],
														"declarations": [
															{
																"constant": false,
																"id": 2673,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2694,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2677,
														"initialValue": {
															"arguments": [
																{
																	"id": 2675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2664,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2674,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2661,
																	2696
																],
																"referencedDeclaration": 2661,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2678,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2680,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2667,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2679,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2683,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2673,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2685,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2664,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2691,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2671,
														"id": 2693,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2665,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 2841,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													2705
												],
												"declarations": [
													{
														"constant": false,
														"id": 2705,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2782,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2707,
												"initialValue": {
													"hexValue": "30",
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 2779,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2722,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 2721,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2716,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 2719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2717,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2720,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2737,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 2736,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2728,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2731,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2732,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2735,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2738,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2752,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 2751,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2743,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2746,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2747,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2750,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2767,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 2766,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2761,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2762,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2765,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2778,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 2777,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2773,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2780,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2705,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2703,
												"id": 2781,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 2841,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 2819,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															2795
														],
														"declarations": [
															{
																"constant": false,
																"id": 2795,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2819,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2794,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2799,
														"initialValue": {
															"arguments": [
																{
																	"id": 2797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2786,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2796,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2783,
																	2821
																],
																"referencedDeclaration": 2783,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2800,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2795,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2802,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2789,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2801,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2809,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2804,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2807,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2805,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2795,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2806,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2808,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2810,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2786,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2816,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2793,
														"id": 2818,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2787,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 2841,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2832,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2825,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1798",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1798",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2830,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2829,
												"id": 2838,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2823,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 2841,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2842,
							"src": "203:14914:13",
							"usedErrors": [
								1793
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2946
						]
					},
					"id": 2947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2844,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2946,
							"linearizedBaseContracts": [
								2946
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2854,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2855,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2858,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 2857,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2860,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2846,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2848,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2851,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 2946,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2872,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2873,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2867,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2876,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 2875,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2865,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2878,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2864,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2869,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 2946,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2923,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													2891
												],
												"declarations": [
													{
														"constant": false,
														"id": 2891,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2923,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2890,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2904,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2892,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2883,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2893,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2885,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2895,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2896,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2897,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2899,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2902,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2905,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2910,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2891,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2908,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2906,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2915,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2916,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2918,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2920,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2889,
												"id": 2922,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 2881,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2882,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2884,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2887,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 2946,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2944,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 2943,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2934,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 2938,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 2937,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2932,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2931,
														"id": 2942,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2925,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2926,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 2946,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"contracts/AssetNexusNft.sol": {
				"ast": {
					"absolutePath": "contracts/AssetNexusNft.sol",
					"exportedSymbols": {
						"AssetNexusNft": [
							3002
						],
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1787
						],
						"IERC4906": [
							27
						],
						"Strings": [
							1751
						]
					},
					"id": 3003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3003,
							"sourceUnit": 1439,
							"src": "61:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2950,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"169:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1438,
										"src": "169:16:15"
									},
									"id": 2951,
									"nodeType": "InheritanceSpecifier",
									"src": "169:16:15"
								}
							],
							"canonicalName": "AssetNexusNft",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3002,
							"linearizedBaseContracts": [
								3002,
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1775,
								1787,
								1496
							],
							"name": "AssetNexusNft",
							"nameLocation": "152:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d082e381",
									"id": 2953,
									"mutability": "mutable",
									"name": "tokenCounter",
									"nameLocation": "214:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3002,
									"src": "199:27:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "899b99f6c26ce7a463fc72a3a36ae78b414dae9cfa6e88e8580ec708e70f30b0",
									"id": 2961,
									"name": "NewNFTMinted",
									"nameLocation": "239:12:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "260:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "252:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "276:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "268:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "268:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2959,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "292:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "285:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "285:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:50:15"
									},
									"src": "233:69:15"
								},
								{
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "385:2:15",
										"statements": []
									},
									"id": 2973,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2968,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2963,
													"src": "371:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2969,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2965,
													"src": "377:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2970,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2967,
												"name": "ERC721",
												"nameLocations": [
													"364:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "364:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "364:20:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "336:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "322:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2962,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "322:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "356:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "342:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "342:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:42:15"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:0:15"
									},
									"scope": 3002,
									"src": "310:77:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3000,
										"nodeType": "Block",
										"src": "444:189:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2979,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "461:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "465:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "461:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2981,
															"name": "tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "473:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2978,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "455:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "455:31:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2983,
												"nodeType": "ExpressionStatement",
												"src": "455:31:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2985,
															"name": "tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "510:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2986,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "524:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2984,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "497:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "497:36:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2990,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "562:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "566:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "562:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2992,
															"name": "tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "574:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2993,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2975,
															"src": "588:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2989,
														"name": "NewNFTMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2961,
														"src": "549:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory)"
														}
													},
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "549:48:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2995,
												"nodeType": "EmitStatement",
												"src": "544:53:15"
											},
											{
												"expression": {
													"id": 2998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2996,
														"name": "tokenCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2953,
														"src": "608:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "624:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "608:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2999,
												"nodeType": "ExpressionStatement",
												"src": "608:17:15"
											}
										]
									},
									"functionSelector": "c7545849",
									"id": 3001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintItem",
									"nameLocation": "404:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "427:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3001,
												"src": "413:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "413:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:24:15"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:0:15"
									},
									"scope": 3002,
									"src": "395:238:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3003,
							"src": "143:493:15",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211,
								2961
							]
						}
					],
					"src": "33:605:15"
				},
				"id": 15
			}
		}
	}
}